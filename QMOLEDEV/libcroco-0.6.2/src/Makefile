# Makefile.in generated by automake 1.10.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/libcroco
pkglibdir = $(libdir)/libcroco
pkgincludedir = $(includedir)/libcroco
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = arm-apple-darwin10.4.0
host_triplet = arm-apple-darwin10.4.0
target_triplet = arm-apple-darwin10.4.0
subdir = src
DIST_COMMON = $(crocoinc_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/libcroco-config.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = libcroco-config.h
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(crocoincdir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libcroco_0_6_la_DEPENDENCIES =
am__objects_1 = cr-utils.lo cr-input.lo cr-enc-handler.lo cr-num.lo \
	cr-rgb.lo cr-token.lo cr-tknzr.lo cr-term.lo cr-attr-sel.lo \
	cr-pseudo.lo cr-additional-sel.lo cr-simple-sel.lo \
	cr-selector.lo cr-doc-handler.lo cr-parser.lo \
	cr-declaration.lo cr-statement.lo cr-stylesheet.lo \
	cr-cascade.lo cr-om-parser.lo cr-style.lo cr-sel-eng.lo \
	cr-fonts.lo cr-prop-list.lo cr-parsing-location.lo \
	cr-string.lo
am_libcroco_0_6_la_OBJECTS = $(am__objects_1)
libcroco_0_6_la_OBJECTS = $(am_libcroco_0_6_la_OBJECTS)
libcroco_0_6_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libcroco_0_6_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libcroco_0_6_la_SOURCES)
DIST_SOURCES = $(libcroco_0_6_la_SOURCES)
crocoincHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(crocoinc_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/chris/libcroco-0.6.2/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/chris/libcroco-0.6.2/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/chris/libcroco-0.6.2/missing --run autoconf
AUTOHEADER = ${SHELL} /home/chris/libcroco-0.6.2/missing --run autoheader
AUTOMAKE = ${SHELL} /home/chris/libcroco-0.6.2/missing --run automake-1.10
AWK = gawk
CC = /usr/bin/gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall
CPP = /usr/bin/gcc -E
CPPFLAGS = 
CROCO_CFLAGS = -I${prefix}/include/libcroco-0.6
CROCO_HAVE_GLIB2 = 1
CROCO_HAVE_LIBXML2 = 1
CROCO_LIB = libcroco-0.6.la
CROCO_LIBS = -L${exec_prefix}/lib -lcroco-0.6
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = :
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = 
FFLAGS = 
GLIB2_CFLAGS = -I/usr/local/lib/glib-2.0/include  
GLIB2_LIBS = -L/usr/local/lib -lglib-2.0 -lintl  
GLIB2_VERSION = 2.0
GREP = /bin/grep
GTKDOC_CHECK = 
G_DISABLE_CHECKS = 0
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBCROCO_AGE = 0
LIBCROCO_CURRENT = 3
LIBCROCO_MAJOR_VERSION = 0
LIBCROCO_MICRO_VERSION = 2
LIBCROCO_MINOR_VERSION = 6
LIBCROCO_VERSION = 0.6.2
LIBCROCO_VERSION_INFO = 3:1:0
LIBCROCO_VERSION_NUMBER = 602
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBXML2_CFLAGS = -I/usr/local/include/libxml2  
LIBXML2_LIBS = -L/usr/local/lib -lxml2  
LIBXML2_VERSION = 2.4.23
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/chris/libcroco-0.6.2/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NMEDIT = nmedit
OBJEXT = o
PACKAGE = libcroco
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
U = 
VERSION = 0.6.2
abs_builddir = /home/chris/libcroco-0.6.2/src
abs_srcdir = /home/chris/libcroco-0.6.2/src
abs_top_builddir = /home/chris/libcroco-0.6.2
abs_top_srcdir = /home/chris/libcroco-0.6.2
ac_ct_CC = /usr/bin/gcc
ac_ct_CXX = g++
ac_ct_F77 = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = arm-apple-darwin10.4.0
build_alias = 
build_cpu = arm
build_os = darwin10.4.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = arm-apple-darwin10.4.0
host_alias = 
host_cpu = arm
host_os = darwin10.4.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/chris/libcroco-0.6.2/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = arm-apple-darwin10.4.0
target_alias = 
target_cpu = arm
target_os = darwin10.4.0
target_vendor = apple
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
#no_undefined = -no-undefined

#Headers files to be distributed
INSTALL_DIR_NAME = libcroco-0.6
crocoincdir = $(includedir)/$(INSTALL_DIR_NAME)/libcroco
crocoinc_HEADERS = libcroco.h \
cr-additional-sel.h \
cr-attr-sel.h \
cr-cascade.h \
cr-declaration.h \
cr-doc-handler.h \
cr-enc-handler.h \
cr-input.h \
cr-num.h \
cr-om-parser.h \
cr-parser.h \
cr-pseudo.h \
cr-rgb.h \
cr-selector.h \
cr-simple-sel.h \
cr-statement.h \
cr-stylesheet.h \
cr-term.h \
cr-tknzr.h \
cr-token.h \
cr-utils.h \
cr-fonts.h \
cr-sel-eng.h \
cr-style.h \
cr-prop-list.h \
cr-parsing-location.h \
cr-string.h \
libcroco-config.h


#the files to be compiled
SRCS = \
cr-utils.c \
cr-utils.h \
cr-input.c \
cr-input.h \
cr-enc-handler.c \
cr-enc-handler.h \
cr-num.c \
cr-num.h \
cr-rgb.c \
cr-rgb.h \
cr-token.c \
cr-token.h \
cr-tknzr.c \
cr-tknzr.h \
cr-term.c \
cr-term.h \
cr-attr-sel.c \
cr-attr-sel.h \
cr-pseudo.c \
cr-pseudo.h \
cr-additional-sel.c \
cr-additional-sel.h \
cr-simple-sel.c \
cr-simple-sel.h \
cr-selector.c \
cr-selector.h \
cr-doc-handler.c \
cr-doc-handler.h \
cr-parser.c \
cr-parser.h \
cr-declaration.c \
cr-declaration.h \
cr-statement.c \
cr-statement.h \
cr-stylesheet.c \
cr-stylesheet.h \
cr-cascade.c \
cr-cascade.h \
cr-om-parser.c \
cr-om-parser.h \
cr-style.c \
cr-style.h \
cr-sel-eng.c \
cr-sel-eng.h \
cr-fonts.c \
cr-fonts.h \
cr-prop-list.c \
cr-prop-list.h \
cr-parsing-location.c \
cr-parsing-location.h \
cr-string.c \
cr-string.h

lib_LTLIBRARIES = libcroco-0.6.la
libcroco_0_6_la_SOURCES = $(SRCS)
INCLUDES = -I$(top_srcdir) -I$(top_srcdir)/intl \
-I $(top_builddir)/src -I/usr/local/lib/glib-2.0/include   -I/usr/local/include/libxml2  

libcroco_0_6_la_LDFLAGS = -version-info 3:1:0 \
-I/usr/local/lib/glib-2.0/include   -L/usr/local/lib -lglib-2.0 -lintl   -L/usr/local/lib -lxml2   $(no_undefined)

libcroco_0_6_la_LIBADD = -L/usr/local/lib -lglib-2.0 -lintl   -L/usr/local/lib -lxml2  
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
libcroco-config.h: $(top_builddir)/config.status $(srcdir)/libcroco-config.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libcroco-0.6.la: $(libcroco_0_6_la_OBJECTS) $(libcroco_0_6_la_DEPENDENCIES) 
	$(libcroco_0_6_la_LINK) -rpath $(libdir) $(libcroco_0_6_la_OBJECTS) $(libcroco_0_6_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/cr-additional-sel.Plo
include ./$(DEPDIR)/cr-attr-sel.Plo
include ./$(DEPDIR)/cr-cascade.Plo
include ./$(DEPDIR)/cr-declaration.Plo
include ./$(DEPDIR)/cr-doc-handler.Plo
include ./$(DEPDIR)/cr-enc-handler.Plo
include ./$(DEPDIR)/cr-fonts.Plo
include ./$(DEPDIR)/cr-input.Plo
include ./$(DEPDIR)/cr-num.Plo
include ./$(DEPDIR)/cr-om-parser.Plo
include ./$(DEPDIR)/cr-parser.Plo
include ./$(DEPDIR)/cr-parsing-location.Plo
include ./$(DEPDIR)/cr-prop-list.Plo
include ./$(DEPDIR)/cr-pseudo.Plo
include ./$(DEPDIR)/cr-rgb.Plo
include ./$(DEPDIR)/cr-sel-eng.Plo
include ./$(DEPDIR)/cr-selector.Plo
include ./$(DEPDIR)/cr-simple-sel.Plo
include ./$(DEPDIR)/cr-statement.Plo
include ./$(DEPDIR)/cr-string.Plo
include ./$(DEPDIR)/cr-style.Plo
include ./$(DEPDIR)/cr-stylesheet.Plo
include ./$(DEPDIR)/cr-term.Plo
include ./$(DEPDIR)/cr-tknzr.Plo
include ./$(DEPDIR)/cr-token.Plo
include ./$(DEPDIR)/cr-utils.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-crocoincHEADERS: $(crocoinc_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(crocoincdir)" || $(MKDIR_P) "$(DESTDIR)$(crocoincdir)"
	@list='$(crocoinc_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(crocoincHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(crocoincdir)/$$f'"; \
	  $(crocoincHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(crocoincdir)/$$f"; \
	done

uninstall-crocoincHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(crocoinc_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(crocoincdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(crocoincdir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(crocoincdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-crocoincHEADERS

install-dvi: install-dvi-am

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-crocoincHEADERS uninstall-libLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-crocoincHEADERS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-crocoincHEADERS \
	uninstall-libLTLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
