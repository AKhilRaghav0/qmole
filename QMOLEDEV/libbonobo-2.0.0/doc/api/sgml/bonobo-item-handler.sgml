<refentry id="libbonobo-bonobo-item-handler">
<refmeta>
<refentrytitle>BonoboItemHandler</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBBONOBO Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>BonoboItemHandler</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



#define     <link linkend="BONOBO-ITEM-HANDLER-TYPE-CAPS">BONOBO_ITEM_HANDLER_TYPE</link>
struct      <link linkend="BonoboItemHandlerPrivate">BonoboItemHandlerPrivate</link>;
struct      <link linkend="BonoboItemHandler">BonoboItemHandler</link>;
typedef     <link linkend="BonoboItemHandlerClass">BonoboItemHandlerClass</link>;
<link linkend="BonoboItemHandler">BonoboItemHandler</link>* <link linkend="bonobo-item-handler-new">bonobo_item_handler_new</link>  (<link linkend="BonoboItemHandlerEnumObjectsFn">BonoboItemHandlerEnumObjectsFn</link> enum_objects,
                                             <link linkend="BonoboItemHandlerGetObjectFn">BonoboItemHandlerGetObjectFn</link> get_object,
                                             <link linkend="gpointer">gpointer</link> user_data);
<link linkend="BonoboItemHandler">BonoboItemHandler</link>* <link linkend="bonobo-item-handler-new-closure">bonobo_item_handler_new_closure</link>
                                            (<link linkend="GClosure">GClosure</link> *enum_objects,
                                             <link linkend="GClosure">GClosure</link> *get_object);
<link linkend="BonoboItemHandler">BonoboItemHandler</link>* <link linkend="bonobo-item-handler-construct">bonobo_item_handler_construct</link>
                                            (<link linkend="BonoboItemHandler">BonoboItemHandler</link> *handler,
                                             <link linkend="GClosure">GClosure</link> *enum_objects,
                                             <link linkend="GClosure">GClosure</link> *get_object);
typedef     <link linkend="BonoboItemOption">BonoboItemOption</link>;
<link linkend="GSList">GSList</link>*     <link linkend="bonobo-item-option-parse">bonobo_item_option_parse</link>        (const char *option_string);
void        <link linkend="bonobo-item-options-free">bonobo_item_options_free</link>        (<link linkend="GSList">GSList</link> *options);

</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="BONOBO-ITEM-HANDLER-TYPE-CAPS">BONOBO_ITEM_HANDLER_TYPE</title>
<programlisting>#define BONOBO_ITEM_HANDLER_TYPE        BONOBO_TYPE_ITEM_HANDLER /* deprecated, you should use BONOBO_TYPE_ITEM_HANDLER */
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BonoboItemHandlerPrivate">struct BonoboItemHandlerPrivate</title>
<programlisting>struct BonoboItemHandlerPrivate;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BonoboItemHandler">struct BonoboItemHandler</title>
<programlisting>struct BonoboItemHandler {
	BonoboObject base;

	POA_Bonobo_ItemContainer__epv epv;

	BonoboItemHandlerPrivate      *priv;
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BonoboItemHandlerClass">BonoboItemHandlerClass</title>
<programlisting>typedef struct {
	BonoboObjectClass parent_class;

	POA_Bonobo_ItemContainer__epv epv;
} BonoboItemHandlerClass;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="bonobo-item-handler-new">bonobo_item_handler_new ()</title>
<programlisting><link linkend="BonoboItemHandler">BonoboItemHandler</link>* bonobo_item_handler_new  (<link linkend="BonoboItemHandlerEnumObjectsFn">BonoboItemHandlerEnumObjectsFn</link> enum_objects,
                                             <link linkend="BonoboItemHandlerGetObjectFn">BonoboItemHandlerGetObjectFn</link> get_object,
                                             <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
Creates a new BonoboItemHandler object.  These are used to hold
client sites.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>enum_objects</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>get_object</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>user_data</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> The newly created BonoboItemHandler object
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-item-handler-new-closure">bonobo_item_handler_new_closure ()</title>
<programlisting><link linkend="BonoboItemHandler">BonoboItemHandler</link>* bonobo_item_handler_new_closure
                                            (<link linkend="GClosure">GClosure</link> *enum_objects,
                                             <link linkend="GClosure">GClosure</link> *get_object);</programlisting>
<para>
Creates a new BonoboItemHandler object.  These are used to hold
client sites.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>enum_objects</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>get_object</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> The newly created BonoboItemHandler object
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-item-handler-construct">bonobo_item_handler_construct ()</title>
<programlisting><link linkend="BonoboItemHandler">BonoboItemHandler</link>* bonobo_item_handler_construct
                                            (<link linkend="BonoboItemHandler">BonoboItemHandler</link> *handler,
                                             <link linkend="GClosure">GClosure</link> *enum_objects,
                                             <link linkend="GClosure">GClosure</link> *get_object);</programlisting>
<para>
Constructs the <parameter>container</parameter> BonoboObject using the provided closures
for the actual implementation.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>handler</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>enum_objects</parameter>&nbsp;:</entry>
<entry> The closure implementing enumObjects
</entry></row>
<row><entry align="right"><parameter>get_object</parameter>&nbsp;:</entry>
<entry> The closure implementing getObject
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> The constructed BonoboItemContainer object.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BonoboItemOption">BonoboItemOption</title>
<programlisting>typedef struct {
	char *key;
	char *value;
} BonoboItemOption;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="bonobo-item-option-parse">bonobo_item_option_parse ()</title>
<programlisting><link linkend="GSList">GSList</link>*     bonobo_item_option_parse        (const char *option_string);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>option_string</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-item-options-free">bonobo_item_options_free ()</title>
<programlisting>void        bonobo_item_options_free        (<link linkend="GSList">GSList</link> *options);</programlisting>
<para>
Use this to release a list returned by <link linkend="bonobo-item-option-parse">bonobo_item_option_parse</link>()</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>options</parameter>&nbsp;:</entry>
<entry> a GSList of BonoboItemOption structures that was returned by <link linkend="bonobo-item-option-parse">bonobo_item_option_parse</link>()
</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>



<refsect1>
<title>See Also</title>
<para>
   A simplistic implementation exists in <link linkend="BonoboItemContainer">BonoboItemContainer</link>.
</para>
</refsect1>

</refentry>
