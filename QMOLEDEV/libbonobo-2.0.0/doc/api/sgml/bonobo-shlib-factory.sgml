<refentry id="libbonobo-bonobo-shlib-factory">
<refmeta>
<refentrytitle>bonobo-shlib-factory</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBBONOBO Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>bonobo-shlib-factory</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



#define     <link linkend="BONOBO-SHLIB-FACTORY-TYPE-CAPS">BONOBO_SHLIB_FACTORY_TYPE</link>
struct      <link linkend="BonoboShlibFactoryPrivate">BonoboShlibFactoryPrivate</link>;
typedef     <link linkend="BonoboShlibFactory">BonoboShlibFactory</link>;
typedef     <link linkend="BonoboShlibFactoryClass">BonoboShlibFactoryClass</link>;
<link linkend="BonoboShlibFactory">BonoboShlibFactory</link>* <link linkend="bonobo-shlib-factory-construct">bonobo_shlib_factory_construct</link>
                                            (<link linkend="BonoboShlibFactory">BonoboShlibFactory</link> *factory,
                                             const char *component_id,
                                             <link linkend="PortableServer-POA">PortableServer_POA</link> poa,
                                             <link linkend="gpointer">gpointer</link> act_impl_ptr,
                                             <link linkend="GClosure">GClosure</link> *closure);
<link linkend="BonoboShlibFactory">BonoboShlibFactory</link>* <link linkend="bonobo-shlib-factory-new">bonobo_shlib_factory_new</link>
                                            (const char *component_id,
                                             <link linkend="PortableServer-POA">PortableServer_POA</link> poa,
                                             <link linkend="gpointer">gpointer</link> act_impl_ptr,
                                             <link linkend="BonoboFactoryCallback">BonoboFactoryCallback</link> factory_cb,
                                             <link linkend="gpointer">gpointer</link> user_data);
<link linkend="BonoboShlibFactory">BonoboShlibFactory</link>* <link linkend="bonobo-shlib-factory-new-closure">bonobo_shlib_factory_new_closure</link>
                                            (const char *component_id,
                                             <link linkend="PortableServer-POA">PortableServer_POA</link> poa,
                                             <link linkend="gpointer">gpointer</link> act_impl_ptr,
                                             <link linkend="GClosure">GClosure</link> *factory_closure);
<link linkend="Bonobo-Unknown">Bonobo_Unknown</link> <link linkend="bonobo-shlib-factory-std">bonobo_shlib_factory_std</link>     (const char *component_id,
                                             <link linkend="PortableServer-POA">PortableServer_POA</link> poa,
                                             <link linkend="gpointer">gpointer</link> act_impl_ptr,
                                             <link linkend="BonoboFactoryCallback">BonoboFactoryCallback</link> factory_cb,
                                             <link linkend="gpointer">gpointer</link> user_data,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *ev);
#define     <link linkend="BONOBO-OAF-SHLIB-FACTORY-CAPS">BONOBO_OAF_SHLIB_FACTORY</link>        (oafiid, descr, fn, data)
#define     <link linkend="BONOBO-OAF-SHLIB-FACTORY-MULTI-CAPS">BONOBO_OAF_SHLIB_FACTORY_MULTI</link>  (oafiid, descr, fn, data)
#define     <link linkend="BONOBO-ACTIVATION-SHLIB-FACTORY-CAPS">BONOBO_ACTIVATION_SHLIB_FACTORY</link> (oafiid, descr, fn, data)

</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="BONOBO-SHLIB-FACTORY-TYPE-CAPS">BONOBO_SHLIB_FACTORY_TYPE</title>
<programlisting>#define BONOBO_SHLIB_FACTORY_TYPE        BONOBO_TYPE_SHLIB_FACTORY /* deprecated, you should use BONOBO_TYPE_SHLIB_FACTORY */
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BonoboShlibFactoryPrivate">struct BonoboShlibFactoryPrivate</title>
<programlisting>struct BonoboShlibFactoryPrivate;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BonoboShlibFactory">BonoboShlibFactory</title>
<programlisting>typedef struct {
	BonoboGenericFactory base;

	BonoboShlibFactoryPrivate *priv;
} BonoboShlibFactory;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BonoboShlibFactoryClass">BonoboShlibFactoryClass</title>
<programlisting>typedef struct {
	BonoboGenericFactoryClass parent_class;
} BonoboShlibFactoryClass;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="bonobo-shlib-factory-construct">bonobo_shlib_factory_construct ()</title>
<programlisting><link linkend="BonoboShlibFactory">BonoboShlibFactory</link>* bonobo_shlib_factory_construct
                                            (<link linkend="BonoboShlibFactory">BonoboShlibFactory</link> *factory,
                                             const char *component_id,
                                             <link linkend="PortableServer-POA">PortableServer_POA</link> poa,
                                             <link linkend="gpointer">gpointer</link> act_impl_ptr,
                                             <link linkend="GClosure">GClosure</link> *closure);</programlisting>
<para>
Initializes <parameter>c_factory</parameter> with the supplied data.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>factory</parameter>&nbsp;:</entry>
<entry> The object to be initialized.
</entry></row>
<row><entry align="right"><parameter>component_id</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>poa</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>act_impl_ptr</parameter>&nbsp;:</entry>
<entry> Activation shlib handle
</entry></row>
<row><entry align="right"><parameter>closure</parameter>&nbsp;:</entry>
<entry> The closure used to create new GnomeShlib object instances.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> The initialized BonoboShlibFactory object.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-shlib-factory-new">bonobo_shlib_factory_new ()</title>
<programlisting><link linkend="BonoboShlibFactory">BonoboShlibFactory</link>* bonobo_shlib_factory_new
                                            (const char *component_id,
                                             <link linkend="PortableServer-POA">PortableServer_POA</link> poa,
                                             <link linkend="gpointer">gpointer</link> act_impl_ptr,
                                             <link linkend="BonoboFactoryCallback">BonoboFactoryCallback</link> factory_cb,
                                             <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
This is a helper routine that simplifies the creation of factory
objects for GNOME objects.  The <parameter>factory</parameter> function will be
invoked by the CORBA server when a request arrives to create a new
instance of an object supporting the Bonobo::Shlib interface.
The factory callback routine is passed the <parameter>data</parameter> pointer to provide
the creation function with some state information.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>component_id</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>poa</parameter>&nbsp;:</entry>
<entry> the poa.
</entry></row>
<row><entry align="right"><parameter>act_impl_ptr</parameter>&nbsp;:</entry>
<entry> Activation shlib handle
</entry></row>
<row><entry align="right"><parameter>factory_cb</parameter>&nbsp;:</entry>
<entry> A callback which is used to create new BonoboObject instances.
</entry></row>
<row><entry align="right"><parameter>user_data</parameter>&nbsp;:</entry>
<entry> The closure data to be passed to the <parameter>factory</parameter> callback routine.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> A BonoboShlibFactory object that has an activated
Bonobo::ShlibFactory object that has registered with the GNOME
name server.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-shlib-factory-new-closure">bonobo_shlib_factory_new_closure ()</title>
<programlisting><link linkend="BonoboShlibFactory">BonoboShlibFactory</link>* bonobo_shlib_factory_new_closure
                                            (const char *component_id,
                                             <link linkend="PortableServer-POA">PortableServer_POA</link> poa,
                                             <link linkend="gpointer">gpointer</link> act_impl_ptr,
                                             <link linkend="GClosure">GClosure</link> *factory_closure);</programlisting>
<para>
This is a helper routine that simplifies the creation of factory
objects for GNOME objects.  The <parameter>factory_closure</parameter> closure will be
invoked by the CORBA server when a request arrives to create a new
instance of an object supporting the Bonobo::Shlib interface.
The factory callback routine is passed the <parameter>data</parameter> pointer to provide
the creation function with some state information.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>component_id</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>poa</parameter>&nbsp;:</entry>
<entry> the poa.
</entry></row>
<row><entry align="right"><parameter>act_impl_ptr</parameter>&nbsp;:</entry>
<entry> Activation shlib handle
</entry></row>
<row><entry align="right"><parameter>factory_closure</parameter>&nbsp;:</entry>
<entry> A closure which is used to create new BonoboObject instances.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> A BonoboShlibFactory object that has an activated
Bonobo::ShlibFactory object that has registered with the GNOME
name server.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-shlib-factory-std">bonobo_shlib_factory_std ()</title>
<programlisting><link linkend="Bonobo-Unknown">Bonobo_Unknown</link> bonobo_shlib_factory_std     (const char *component_id,
                                             <link linkend="PortableServer-POA">PortableServer_POA</link> poa,
                                             <link linkend="gpointer">gpointer</link> act_impl_ptr,
                                             <link linkend="BonoboFactoryCallback">BonoboFactoryCallback</link> factory_cb,
                                             <link linkend="gpointer">gpointer</link> user_data,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *ev);</programlisting>
<para>
A Generic std shlib routine so we don't stick a load of code
inside a public macro.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>component_id</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>poa</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>act_impl_ptr</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>factory_cb</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>user_data</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>ev</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> 0 on success, 1 on failure.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BONOBO-OAF-SHLIB-FACTORY-CAPS">BONOBO_OAF_SHLIB_FACTORY()</title>
<programlisting>#define     BONOBO_OAF_SHLIB_FACTORY(oafiid, descr, fn, data)</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>oafiid</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>descr</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>fn</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>data</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BONOBO-OAF-SHLIB-FACTORY-MULTI-CAPS">BONOBO_OAF_SHLIB_FACTORY_MULTI()</title>
<programlisting>#define     BONOBO_OAF_SHLIB_FACTORY_MULTI(oafiid, descr, fn, data)</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>oafiid</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>descr</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>fn</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>data</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BONOBO-ACTIVATION-SHLIB-FACTORY-CAPS">BONOBO_ACTIVATION_SHLIB_FACTORY()</title>
<programlisting>#define     BONOBO_ACTIVATION_SHLIB_FACTORY(oafiid, descr, fn, data)</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>oafiid</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>descr</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>fn</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>data</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>




</refentry>
