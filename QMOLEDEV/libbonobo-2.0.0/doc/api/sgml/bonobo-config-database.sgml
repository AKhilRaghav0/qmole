<refentry id="libbonobo-bonobo-config-database">
<refmeta>
<refentrytitle>bonobo-config-database</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBBONOBO Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>bonobo-config-database</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



<link linkend="gchar">gchar</link>*      <link linkend="bonobo-config-get-string">bonobo_config_get_string</link>        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="gchar">gchar</link>*      <link linkend="bonobo-config-get-string-with-default">bonobo_config_get_string_with_default</link>
                                            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gchar">gchar</link> *defval,
                                             <link linkend="gboolean">gboolean</link> *def);
<link linkend="gint16">gint16</link>      <link linkend="bonobo-config-get-short">bonobo_config_get_short</link>         (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="gint16">gint16</link>      <link linkend="bonobo-config-get-short-with-default">bonobo_config_get_short_with_default</link>
                                            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gint16">gint16</link> defval,
                                             <link linkend="gboolean">gboolean</link> *def);
<link linkend="guint16">guint16</link>     <link linkend="bonobo-config-get-ushort">bonobo_config_get_ushort</link>        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="guint16">guint16</link>     <link linkend="bonobo-config-get-ushort-with-default">bonobo_config_get_ushort_with_default</link>
                                            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="guint16">guint16</link> defval,
                                             <link linkend="gboolean">gboolean</link> *def);
<link linkend="gint32">gint32</link>      <link linkend="bonobo-config-get-long">bonobo_config_get_long</link>          (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="gint32">gint32</link>      <link linkend="bonobo-config-get-long-with-default">bonobo_config_get_long_with_default</link>
                                            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gint32">gint32</link> defval,
                                             <link linkend="gboolean">gboolean</link> *def);
<link linkend="guint32">guint32</link>     <link linkend="bonobo-config-get-ulong">bonobo_config_get_ulong</link>         (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="guint32">guint32</link>     <link linkend="bonobo-config-get-ulong-with-default">bonobo_config_get_ulong_with_default</link>
                                            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="guint32">guint32</link> defval,
                                             <link linkend="gboolean">gboolean</link> *def);
<link linkend="gfloat">gfloat</link>      <link linkend="bonobo-config-get-float">bonobo_config_get_float</link>         (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="gfloat">gfloat</link>      <link linkend="bonobo-config-get-float-with-default">bonobo_config_get_float_with_default</link>
                                            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gfloat">gfloat</link> defval,
                                             <link linkend="gboolean">gboolean</link> *def);
<link linkend="gdouble">gdouble</link>     <link linkend="bonobo-config-get-double">bonobo_config_get_double</link>        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="gdouble">gdouble</link>     <link linkend="bonobo-config-get-double-with-default">bonobo_config_get_double_with_default</link>
                                            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gdouble">gdouble</link> defval,
                                             <link linkend="gboolean">gboolean</link> *def);
<link linkend="gboolean">gboolean</link>    <link linkend="bonobo-config-get-boolean">bonobo_config_get_boolean</link>       (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="gboolean">gboolean</link>    <link linkend="bonobo-config-get-boolean-with-default">bonobo_config_get_boolean_with_default</link>
                                            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gboolean">gboolean</link> defval,
                                             <link linkend="gboolean">gboolean</link> *def);
<link linkend="gchar">gchar</link>       <link linkend="bonobo-config-get-char">bonobo_config_get_char</link>          (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="gchar">gchar</link>       <link linkend="bonobo-config-get-char-with-default">bonobo_config_get_char_with_default</link>
                                            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gchar">gchar</link> defval,
                                             <link linkend="gboolean">gboolean</link> *def);
<link linkend="CORBA-any">CORBA_any</link>*  <link linkend="bonobo-config-get-value">bonobo_config_get_value</link>         (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="CORBA-TypeCode">CORBA_TypeCode</link> opt_tc,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
void        <link linkend="bonobo-config-set-string">bonobo_config_set_string</link>        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             const char *value,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
void        <link linkend="bonobo-config-set-short">bonobo_config_set_short</link>         (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gint16">gint16</link> value,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
void        <link linkend="bonobo-config-set-ushort">bonobo_config_set_ushort</link>        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="guint16">guint16</link> value,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
void        <link linkend="bonobo-config-set-long">bonobo_config_set_long</link>          (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gint32">gint32</link> value,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
void        <link linkend="bonobo-config-set-ulong">bonobo_config_set_ulong</link>         (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="guint32">guint32</link> value,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
void        <link linkend="bonobo-config-set-float">bonobo_config_set_float</link>         (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gfloat">gfloat</link> value,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
void        <link linkend="bonobo-config-set-double">bonobo_config_set_double</link>        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gdouble">gdouble</link> value,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
void        <link linkend="bonobo-config-set-boolean">bonobo_config_set_boolean</link>       (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gboolean">gboolean</link> value,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
void        <link linkend="bonobo-config-set-char">bonobo_config_set_char</link>          (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gchar">gchar</link> value,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
void        <link linkend="bonobo-config-set-value">bonobo_config_set_value</link>         (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="CORBA-any">CORBA_any</link> *value,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="bonobo-config-get-string">bonobo_config_get_string ()</title>
<programlisting><link linkend="gchar">gchar</link>*      bonobo_config_get_string        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Get a string from the configuration database</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry> a reference to the database object
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry> key of the value to get
</entry></row>
<row><entry align="right"><parameter>opt_ev</parameter>&nbsp;:</entry>
<entry> an optional CORBA_Environment to return failure codes
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> the value contained in the database, or zero on error.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-get-string-with-default">bonobo_config_get_string_with_default ()</title>
<programlisting><link linkend="gchar">gchar</link>*      bonobo_config_get_string_with_default
                                            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gchar">gchar</link> *defval,
                                             <link linkend="gboolean">gboolean</link> *def);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>defval</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>def</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-get-short">bonobo_config_get_short ()</title>
<programlisting><link linkend="gint16">gint16</link>      bonobo_config_get_short         (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Get a 16 bit integer from the configuration database</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry> a reference to the database object
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry> key of the value to get
</entry></row>
<row><entry align="right"><parameter>opt_ev</parameter>&nbsp;:</entry>
<entry> an optional CORBA_Environment to return failure codes
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> the value contained in the database.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-get-short-with-default">bonobo_config_get_short_with_default ()</title>
<programlisting><link linkend="gint16">gint16</link>      bonobo_config_get_short_with_default
                                            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gint16">gint16</link> defval,
                                             <link linkend="gboolean">gboolean</link> *def);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>defval</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>def</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-get-ushort">bonobo_config_get_ushort ()</title>
<programlisting><link linkend="guint16">guint16</link>     bonobo_config_get_ushort        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Get a 16 bit unsigned integer from the configuration database</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry> a reference to the database object
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry> key of the value to get
</entry></row>
<row><entry align="right"><parameter>opt_ev</parameter>&nbsp;:</entry>
<entry> an optional CORBA_Environment to return failure codes
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> the value contained in the database.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-get-ushort-with-default">bonobo_config_get_ushort_with_default ()</title>
<programlisting><link linkend="guint16">guint16</link>     bonobo_config_get_ushort_with_default
                                            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="guint16">guint16</link> defval,
                                             <link linkend="gboolean">gboolean</link> *def);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>defval</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>def</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-get-long">bonobo_config_get_long ()</title>
<programlisting><link linkend="gint32">gint32</link>      bonobo_config_get_long          (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Get a 32 bit integer from the configuration database</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry> a reference to the database object
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry> key of the value to get
</entry></row>
<row><entry align="right"><parameter>opt_ev</parameter>&nbsp;:</entry>
<entry> an optional CORBA_Environment to return failure codes
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> the value contained in the database.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-get-long-with-default">bonobo_config_get_long_with_default ()</title>
<programlisting><link linkend="gint32">gint32</link>      bonobo_config_get_long_with_default
                                            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gint32">gint32</link> defval,
                                             <link linkend="gboolean">gboolean</link> *def);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>defval</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>def</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-get-ulong">bonobo_config_get_ulong ()</title>
<programlisting><link linkend="guint32">guint32</link>     bonobo_config_get_ulong         (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Get a 32 bit unsigned integer from the configuration database</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry> a reference to the database object
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry> key of the value to get
</entry></row>
<row><entry align="right"><parameter>opt_ev</parameter>&nbsp;:</entry>
<entry> an optional CORBA_Environment to return failure codes
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> the value contained in the database.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-get-ulong-with-default">bonobo_config_get_ulong_with_default ()</title>
<programlisting><link linkend="guint32">guint32</link>     bonobo_config_get_ulong_with_default
                                            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="guint32">guint32</link> defval,
                                             <link linkend="gboolean">gboolean</link> *def);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>defval</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>def</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-get-float">bonobo_config_get_float ()</title>
<programlisting><link linkend="gfloat">gfloat</link>      bonobo_config_get_float         (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Get a single precision floating point value from the configuration database</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry> a reference to the database object
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry> key of the value to get
</entry></row>
<row><entry align="right"><parameter>opt_ev</parameter>&nbsp;:</entry>
<entry> an optional CORBA_Environment to return failure codes
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> the value contained in the database.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-get-float-with-default">bonobo_config_get_float_with_default ()</title>
<programlisting><link linkend="gfloat">gfloat</link>      bonobo_config_get_float_with_default
                                            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gfloat">gfloat</link> defval,
                                             <link linkend="gboolean">gboolean</link> *def);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>defval</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>def</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-get-double">bonobo_config_get_double ()</title>
<programlisting><link linkend="gdouble">gdouble</link>     bonobo_config_get_double        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Get a double precision floating point value from the configuration database</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry> a reference to the database object
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry> key of the value to get
</entry></row>
<row><entry align="right"><parameter>opt_ev</parameter>&nbsp;:</entry>
<entry> an optional CORBA_Environment to return failure codes
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> the value contained in the database.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-get-double-with-default">bonobo_config_get_double_with_default ()</title>
<programlisting><link linkend="gdouble">gdouble</link>     bonobo_config_get_double_with_default
                                            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gdouble">gdouble</link> defval,
                                             <link linkend="gboolean">gboolean</link> *def);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>defval</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>def</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-get-boolean">bonobo_config_get_boolean ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    bonobo_config_get_boolean       (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Get a boolean value from the configuration database</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry> a reference to the database object
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry> key of the value to get
</entry></row>
<row><entry align="right"><parameter>opt_ev</parameter>&nbsp;:</entry>
<entry> an optional CORBA_Environment to return failure codes
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> the value contained in the database.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-get-boolean-with-default">bonobo_config_get_boolean_with_default ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    bonobo_config_get_boolean_with_default
                                            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gboolean">gboolean</link> defval,
                                             <link linkend="gboolean">gboolean</link> *def);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>defval</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>def</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-get-char">bonobo_config_get_char ()</title>
<programlisting><link linkend="gchar">gchar</link>       bonobo_config_get_char          (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Get a 8 bit character value from the configuration database</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry> a reference to the database object
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry> key of the value to get
</entry></row>
<row><entry align="right"><parameter>opt_ev</parameter>&nbsp;:</entry>
<entry> an optional CORBA_Environment to return failure codes
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> the value contained in the database.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-get-char-with-default">bonobo_config_get_char_with_default ()</title>
<programlisting><link linkend="gchar">gchar</link>       bonobo_config_get_char_with_default
                                            (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gchar">gchar</link> defval,
                                             <link linkend="gboolean">gboolean</link> *def);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>defval</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>def</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-get-value">bonobo_config_get_value ()</title>
<programlisting><link linkend="CORBA-any">CORBA_any</link>*  bonobo_config_get_value         (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="CORBA-TypeCode">CORBA_TypeCode</link> opt_tc,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Get a value from the configuration database</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry> a reference to the database object
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry> key of the value to get
</entry></row>
<row><entry align="right"><parameter>opt_tc</parameter>&nbsp;:</entry>
<entry> the type of the value, optional
</entry></row>
<row><entry align="right"><parameter>opt_ev</parameter>&nbsp;:</entry>
<entry> an optional CORBA_Environment to return failure codes
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> the value contained in the database, or zero on error.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-set-string">bonobo_config_set_string ()</title>
<programlisting>void        bonobo_config_set_string        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             const char *value,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Set a string value in the configuration database.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry> a reference to the database object
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry> key of the value to set
</entry></row>
<row><entry align="right"><parameter>value</parameter>&nbsp;:</entry>
<entry> the new value
</entry></row>
<row><entry align="right"><parameter>opt_ev</parameter>&nbsp;:</entry>
<entry> an optional CORBA_Environment to return failure codes
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-set-short">bonobo_config_set_short ()</title>
<programlisting>void        bonobo_config_set_short         (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gint16">gint16</link> value,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Set a 16 bit integer value in the configuration database.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry> a reference to the database object
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry> key of the value to set
</entry></row>
<row><entry align="right"><parameter>value</parameter>&nbsp;:</entry>
<entry> the new value
</entry></row>
<row><entry align="right"><parameter>opt_ev</parameter>&nbsp;:</entry>
<entry> an optional CORBA_Environment to return failure codes
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-set-ushort">bonobo_config_set_ushort ()</title>
<programlisting>void        bonobo_config_set_ushort        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="guint16">guint16</link> value,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Set a 16 bit unsigned integer value in the configuration database.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry> a reference to the database object
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry> key of the value to set
</entry></row>
<row><entry align="right"><parameter>value</parameter>&nbsp;:</entry>
<entry> the new value
</entry></row>
<row><entry align="right"><parameter>opt_ev</parameter>&nbsp;:</entry>
<entry> an optional CORBA_Environment to return failure codes
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-set-long">bonobo_config_set_long ()</title>
<programlisting>void        bonobo_config_set_long          (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gint32">gint32</link> value,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Set a 32 bit integer value in the configuration database.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry> a reference to the database object
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry> key of the value to set
</entry></row>
<row><entry align="right"><parameter>value</parameter>&nbsp;:</entry>
<entry> the new value
</entry></row>
<row><entry align="right"><parameter>opt_ev</parameter>&nbsp;:</entry>
<entry> an optional CORBA_Environment to return failure codes
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-set-ulong">bonobo_config_set_ulong ()</title>
<programlisting>void        bonobo_config_set_ulong         (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="guint32">guint32</link> value,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Set a 32 bit unsigned integer value in the configuration database.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry> a reference to the database object
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry> key of the value to set
</entry></row>
<row><entry align="right"><parameter>value</parameter>&nbsp;:</entry>
<entry> the new value
</entry></row>
<row><entry align="right"><parameter>opt_ev</parameter>&nbsp;:</entry>
<entry> an optional CORBA_Environment to return failure codes
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-set-float">bonobo_config_set_float ()</title>
<programlisting>void        bonobo_config_set_float         (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gfloat">gfloat</link> value,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Set a single precision floating point value in the configuration database.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry> a reference to the database object
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry> key of the value to set
</entry></row>
<row><entry align="right"><parameter>value</parameter>&nbsp;:</entry>
<entry> the new value
</entry></row>
<row><entry align="right"><parameter>opt_ev</parameter>&nbsp;:</entry>
<entry> an optional CORBA_Environment to return failure codes
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-set-double">bonobo_config_set_double ()</title>
<programlisting>void        bonobo_config_set_double        (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gdouble">gdouble</link> value,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Set a double precision floating point value in the configuration database.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry> a reference to the database object
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry> key of the value to set
</entry></row>
<row><entry align="right"><parameter>value</parameter>&nbsp;:</entry>
<entry> the new value
</entry></row>
<row><entry align="right"><parameter>opt_ev</parameter>&nbsp;:</entry>
<entry> an optional CORBA_Environment to return failure codes
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-set-boolean">bonobo_config_set_boolean ()</title>
<programlisting>void        bonobo_config_set_boolean       (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gboolean">gboolean</link> value,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Set a boolean value in the configuration database.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry> a reference to the database object
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry> key of the value to set
</entry></row>
<row><entry align="right"><parameter>value</parameter>&nbsp;:</entry>
<entry> the new value
</entry></row>
<row><entry align="right"><parameter>opt_ev</parameter>&nbsp;:</entry>
<entry> an optional CORBA_Environment to return failure codes
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-set-char">bonobo_config_set_char ()</title>
<programlisting>void        bonobo_config_set_char          (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="gchar">gchar</link> value,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Set a 8 bit characte value in the configuration database.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry> a reference to the database object
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry> key of the value to set
</entry></row>
<row><entry align="right"><parameter>value</parameter>&nbsp;:</entry>
<entry> the new value
</entry></row>
<row><entry align="right"><parameter>opt_ev</parameter>&nbsp;:</entry>
<entry> an optional CORBA_Environment to return failure codes
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-config-set-value">bonobo_config_set_value ()</title>
<programlisting>void        bonobo_config_set_value         (<link linkend="Bonobo-ConfigDatabase">Bonobo_ConfigDatabase</link> db,
                                             const char *key,
                                             <link linkend="CORBA-any">CORBA_any</link> *value,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Set a value in the configuration database.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>db</parameter>&nbsp;:</entry>
<entry> a reference to the database object
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry> key of the value to set
</entry></row>
<row><entry align="right"><parameter>value</parameter>&nbsp;:</entry>
<entry> the new value
</entry></row>
<row><entry align="right"><parameter>opt_ev</parameter>&nbsp;:</entry>
<entry> an optional CORBA_Environment to return failure codes
</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>




</refentry>
