diff -urN classpath-0.98/gnu/java/awt/peer/x/GLGraphics.java classpath-0.98+escher-0.3/gnu/java/awt/peer/x/GLGraphics.java
--- classpath-0.98/gnu/java/awt/peer/x/GLGraphics.java	2008-06-15 21:14:55.000000000 +0300
+++ classpath-0.98+escher-0.3/gnu/java/awt/peer/x/GLGraphics.java	2009-08-08 13:41:05.000000000 +0300
@@ -73,7 +73,7 @@
   {
     super.setBackground(b);
     
-    gl.clearColor(b.getRed() / 255.F, b.getGreen() / 255.F,
+    gl.clear_color(b.getRed() / 255.F, b.getGreen() / 255.F,
                    b.getBlue() / 255.F, b.getAlpha() / 255.F);
   }
 
diff -urN classpath-0.98/gnu/java/awt/peer/x/XEventPump.java classpath-0.98+escher-0.3/gnu/java/awt/peer/x/XEventPump.java
--- classpath-0.98/gnu/java/awt/peer/x/XEventPump.java	2008-06-15 21:14:55.000000000 +0300
+++ classpath-0.98+escher-0.3/gnu/java/awt/peer/x/XEventPump.java	2009-08-08 13:41:05.000000000 +0300
@@ -161,7 +161,7 @@
 
   private void handleButtonPress(ButtonPress event)
   {
-    Integer key = new Integer(event.getEventWindowID());
+    Integer key = new Integer(event.event_window_id);
     Window awtWindow = (Window) windows.get(key);
 
     // Create and post the mouse event.
@@ -173,7 +173,7 @@
     drag = button;
 
     Component target =
-      findMouseEventTarget(awtWindow, event.getEventX(), event.getEventY());
+      findMouseEventTarget(awtWindow, event.event_x(), event.event_y());
     if(target == null)
       {
         target = awtWindow;
@@ -181,16 +181,16 @@
     
     MouseEvent mp = new MouseEvent(target, MouseEvent.MOUSE_PRESSED,
                                    System.currentTimeMillis(),
-                                   KeyboardMapping.mapModifiers(event.getState())
+                                   KeyboardMapping.mapModifiers(event.state())
                                      | buttonToModifier(button),
-                                   event.getEventX(), event.getEventY(),
+                                   event.event_x(), event.event_y(),
                                    1, false, button);
     Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(mp);
   }
   
   private void handleButtonRelease(ButtonRelease event)
   {
-    Integer key = new Integer(event.getEventWindowID());
+    Integer key = new Integer(event.event_window_id);
     Window awtWindow = (Window) windows.get(key);
 
     int button = event.detail();
@@ -201,7 +201,7 @@
     drag = -1;
     
     Component target =
-      findMouseEventTarget(awtWindow, event.getEventX(), event.getEventY());
+      findMouseEventTarget(awtWindow, event.event_x(), event.event_y());
     if(target == null)
       {
         target = awtWindow;
@@ -209,9 +209,9 @@
     
     MouseEvent mr = new MouseEvent(target, MouseEvent.MOUSE_RELEASED,
                                    System.currentTimeMillis(),
-                                   KeyboardMapping.mapModifiers(event.getState())
+                                   KeyboardMapping.mapModifiers(event.state())
                                      | buttonToModifier(button),
-                                   event.getEventX(), event.getEventY(),
+                                   event.event_x(), event.event_y(),
                                    1, false, button);
     Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(mr);
   }
@@ -219,7 +219,7 @@
   
   private void handleMotionNotify(MotionNotify event)
   {
-    Integer key = new Integer(event.getEventWindowID());
+    Integer key = new Integer(event.event_window_id);
     Window awtWindow = (Window) windows.get(key);
 
     int button = event.detail();
@@ -233,9 +233,9 @@
       {
         mm = new MouseEvent(awtWindow, MouseEvent.MOUSE_MOVED,
                             System.currentTimeMillis(),
-                            KeyboardMapping.mapModifiers(event.getState())
+                            KeyboardMapping.mapModifiers(event.state())
                               | buttonToModifier(button),
-                            event.getEventX(), event.getEventY(),
+                            event.event_x(), event.event_y(),
                             1, false);
 
       }
@@ -243,9 +243,9 @@
       {
         mm = new MouseEvent(awtWindow, MouseEvent.MOUSE_DRAGGED,
                             System.currentTimeMillis(),
-                            KeyboardMapping.mapModifiers(event.getState())
+                            KeyboardMapping.mapModifiers(event.state())
                               | buttonToModifier(drag),
-                            event.getEventX(), event.getEventY(),
+                            event.event_x(), event.event_y(),
                             1, false);
       }
     Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(mm);
@@ -354,7 +354,7 @@
       break;
     case KeyPress.CODE:
     case KeyRelease.CODE:
-      Integer key = new Integer(((Input) xEvent).getEventWindowID());
+      Integer key = new Integer(((Input) xEvent).event_window_id);
       Window awtWindow = (Window) windows.get(key);
       handleKeyEvent(xEvent, awtWindow);
       break;
@@ -365,7 +365,7 @@
       this.handleClientMessage((ClientMessage) xEvent);
       break;
     case PropertyNotify.CODE:
-      key = new Integer (((PropertyNotify) xEvent).getWindowID());
+      key = new Integer (((PropertyNotify) xEvent).window_id);
       awtWindow = (Window) windows.get(key);
       AWTEvent event = new WindowEvent(awtWindow, WindowEvent.WINDOW_STATE_CHANGED);
       Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(event);
@@ -386,7 +386,7 @@
   {
     Input keyEvent = (Input) xEvent;
     int xKeyCode = keyEvent.detail();
-    int xMods = keyEvent.getState();
+    int xMods = keyEvent.state();
     int keyCode = KeyboardMapping.mapToKeyCode(xEvent.display.input, xKeyCode,
                                                xMods);
     char keyChar = KeyboardMapping.mapToKeyChar(xEvent.display.input, xKeyCode,
diff -urN classpath-0.98/gnu/java/awt/peer/x/XGraphicsDevice.java classpath-0.98+escher-0.3/gnu/java/awt/peer/x/XGraphicsDevice.java
--- classpath-0.98/gnu/java/awt/peer/x/XGraphicsDevice.java	2008-09-01 19:07:30.000000000 +0300
+++ classpath-0.98+escher-0.3/gnu/java/awt/peer/x/XGraphicsDevice.java	2009-08-08 13:41:05.000000000 +0300
@@ -39,7 +39,7 @@
 
 import gnu.classpath.SystemProperties;
 import gnu.x11.Display;
-import gnu.x11.EscherServerConnectionException;
+//import gnu.x11.EscherServerConnectionException;
 
 import java.awt.GraphicsConfiguration;
 import java.awt.GraphicsDevice;
@@ -128,6 +128,7 @@
             Socket socket = createLocalSocket();
             if (socket != null)
               {
+		/* TODO X11 hack - no exception happen from escher-0.3
                 try
                   {
                     display = new Display(socket, "localhost",
@@ -138,6 +139,10 @@
                   {
                     throw new RuntimeException(e.getCause()); 
                   }
+		  */
+		display = new Display(socket, "localhost",
+     				displayName.display_no,
+				displayName.screen_no);
               }
           }
 
@@ -146,6 +151,8 @@
         // the LocalSocket class stuff.
         if (display == null)
           {
+
+	/* TODO X11 hacks	
             try
               {
                 display = new Display(displayName);
@@ -154,6 +161,8 @@
               {
                 throw new RuntimeException(e.getCause());
               }
+	      */
+	    display = new Display(displayName);
           }
         
         eventPump = new XEventPump(display);
