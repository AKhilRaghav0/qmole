# 35 "libs/ocaml-compiler/approx/approx_lexer.mll"
 

module Make(Tokens : Approx_tokens.Sig) = struct

  open Tokens
open OcpLang
open Lexing
open Approx_common

let comment_stack = ref []
let lines_starts = ref []

let init () =
  comment_stack := [];
  lines_starts := []

let comments () =
  List.rev !comment_stack

(* The table of keywords *)

let create_hashtable n list =
  let t = Hashtbl.create n in
  List.iter (fun (x,y) -> Hashtbl.add t x y) list;
  t

let keyword_table =
  create_hashtable 149 [
    "and", AND;
    "as", AS;
    "assert", ASSERT;
    "begin", BEGIN;
    "class", CLASS;
    "constraint", CONSTRAINT;
    "do", DO;
    "done", DONE;
    "downto", DOWNTO;
    "else", ELSE;
    "end", END;
    "exception", EXCEPTION;
    "external", EXTERNAL;
    "false", FALSE;
    "for", FOR;
    "fun", FUN;
    "function", FUNCTION;
    "functor", FUNCTOR;
    "if", IF;
    "in", IN;
    "include", INCLUDE;
    "inherit", INHERIT;
    "initializer", INITIALIZER;
    "lazy", LAZY;
    "let", LET;
    "match", MATCH;
    "method", METHOD;
    "module", MODULE;
    "mutable", MUTABLE;
    "new", NEW;
    "object", OBJECT;
    "of", OF;
    "open", OPEN;
    "or", OR;
(*  "parser", PARSER; *)
    "private", PRIVATE;
    "rec", REC;
    "sig", SIG;
    "struct", STRUCT;
    "then", THEN;
    "to", TO;
    "true", TRUE;
    "try", TRY;
    "type", TYPE;
    "val", VAL;
    "virtual", VIRTUAL;
    "when", WHEN;
    "while", WHILE;
    "with", WITH;

    "mod", INFIXOP3("mod");
    "land", INFIXOP3("land");
    "lor", INFIXOP3("lor");
    "lxor", INFIXOP3("lxor");
    "lsl", INFIXOP4("lsl");
    "lsr", INFIXOP4("lsr");
    "asr", INFIXOP4("asr")
]

(* To buffer string literals *)

let initial_string_buffer = String.create 256
let string_buff = ref initial_string_buffer
let string_index = ref 0

let reset_string_buffer () =
  string_buff := initial_string_buffer;
  string_index := 0

let store_string_char c =
  if !string_index >= String.length (!string_buff) then begin
    let new_buff = String.create (String.length (!string_buff) * 2) in
      String.blit (!string_buff) 0 new_buff 0 (String.length (!string_buff));
      string_buff := new_buff
  end;
  String.unsafe_set (!string_buff) (!string_index) c;
  incr string_index

let get_stored_string () =
  let s = String.sub (!string_buff) 0 (!string_index) in
  string_buff := initial_string_buffer;
  s

(* To store the position of the beginning of a string and comment *)
let string_start_loc = ref (-1);;
let comment_start_loc = ref [];;
let in_comment () = !comment_start_loc <> [];;

(* To translate escape sequences *)

let char_for_backslash = function
  | 'n' -> '\010'
  | 'r' -> '\013'
  | 'b' -> '\008'
  | 't' -> '\009'
  | c   -> c

let can_overflow f lexbuf =
  let s = Lexing.lexeme lexbuf in
  try InRange (f s) with Failure _ -> Overflow s

let char_for_decimal_code i s =
  let c = 100 * (Char.code(s.[i]) - 48) +
           10 * (Char.code(s.[i+1]) - 48) +
                (Char.code(s.[i+2]) - 48) in
  if (c < 0 || c > 255) then
    failwith "Bad escaped decimal char"
  else Char.chr c

let char_for_hexadecimal_code lexbuf i =
  let d1 = Char.code (Lexing.lexeme_char lexbuf i) in
  let val1 = if d1 >= 97 then d1 - 87
    else if d1 >= 65 then d1 - 55
    else d1 - 48
  in
  let d2 = Char.code (Lexing.lexeme_char lexbuf (i+1)) in
  let val2 = if d2 >= 97 then d2 - 87
    else if d2 >= 65 then d2 - 55
    else d2 - 48
  in
  Char.chr (val1 * 16 + val2)

(* To convert integer literals, allowing max_int + 1 (PR#4210) *)

let cvt_int_literal s =
  - int_of_string ("-" ^ s)
let cvt_int32_literal s =
  Int32.neg (Int32.of_string ("-" ^ String.sub s 0 (String.length s - 1)))
let cvt_int64_literal s =
  Int64.neg (Int64.of_string ("-" ^ String.sub s 0 (String.length s - 1)))
let cvt_nativeint_literal s =
  Nativeint.neg (Nativeint.of_string ("-" ^ String.sub s 0 (String.length s - 1)))

(* Remove underscores from float literals *)

let remove_underscores s =
  let l = String.length s in
  let rec remove src dst =
    if src >= l then
      if dst >= l then s else String.sub s 0 dst
    else
      match s.[src] with
          '_' -> remove (src + 1) dst
        |  c  -> s.[dst] <- c; remove (src + 1) (dst + 1)
  in remove 0 0

(* Update the current location with file name and line number. *)

let update_loc lexbuf file line absolute chars =
  let pos = lexbuf.lex_curr_p in
  let new_file = match file with
    | None -> pos.pos_fname
    | Some s -> s
  in
  lexbuf.lex_curr_p <- { pos with
    pos_fname = new_file;
    pos_lnum = if absolute then line else pos.pos_lnum + line;
    pos_bol = pos.pos_cnum - chars;
  };
  lines_starts := (lexbuf.lex_curr_p.pos_lnum, lexbuf.lex_curr_p.pos_bol) :: !lines_starts;
;;


# 194 "libs/ocaml-compiler/approx/approx_lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\181\255\182\255\224\000\003\001\038\001\073\001\108\001\
    \197\255\143\001\180\001\032\000\205\255\067\000\217\001\252\001\
    \069\000\072\000\085\000\031\002\222\255\224\255\227\255\066\002\
    \123\000\101\002\093\000\047\001\240\255\120\002\153\002\226\002\
    \178\003\145\004\237\004\189\005\127\000\001\000\255\255\156\006\
    \186\006\251\255\138\007\105\008\248\255\241\255\242\255\243\255\
    \095\000\045\003\093\000\112\000\055\003\253\003\008\006\103\002\
    \173\004\133\000\122\008\098\000\237\000\114\000\239\255\238\255\
    \234\255\097\005\078\003\115\000\237\255\026\004\117\000\236\255\
    \022\006\118\000\235\255\233\255\147\008\232\255\044\007\016\005\
    \004\000\231\255\007\000\009\001\045\001\008\000\005\000\231\255\
    \214\008\249\008\030\009\065\009\219\255\215\255\216\255\217\255\
    \213\255\100\009\206\255\207\255\208\255\203\255\200\255\135\009\
    \196\255\198\255\170\009\205\009\240\009\103\003\244\255\006\000\
    \245\255\246\255\062\002\253\255\117\000\126\000\255\255\254\255\
    \002\010\130\000\255\000\131\000\252\255\251\255\250\255\014\007\
    \145\004\176\000\249\255\162\004\219\000\248\255\213\007\220\000\
    \247\255\077\004\247\255\248\255\009\000\249\255\075\010\255\255\
    \250\255\109\010\237\004\253\255\015\001\003\001\001\005\252\255\
    \148\010\251\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\072\000\069\000\068\000\062\000\060\000\
    \255\255\056\000\053\000\051\000\255\255\046\000\045\000\043\000\
    \041\000\037\000\035\000\064\000\255\255\255\255\255\255\026\000\
    \025\000\032\000\030\000\029\000\255\255\010\000\010\000\009\000\
    \008\000\005\000\003\000\002\000\001\000\000\000\255\255\067\000\
    \255\255\255\255\255\255\006\000\255\255\255\255\255\255\255\255\
    \255\255\011\000\255\255\255\255\255\255\010\000\010\000\010\000\
    \011\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\021\000\021\000\021\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\071\000\255\255\255\255\255\255\
    \024\000\255\255\255\255\255\255\255\255\255\255\024\000\255\255\
    \027\000\070\000\065\000\034\000\255\255\255\255\255\255\255\255\
    \255\255\044\000\255\255\255\255\255\255\255\255\255\255\054\000\
    \255\255\255\255\066\000\061\000\063\000\255\255\255\255\010\000\
    \255\255\255\255\011\000\255\255\011\000\011\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\006\000\255\255\008\000\255\255\
    \255\255\005\000\005\000\255\255\001\000\001\000\255\255\255\255\
    \255\255\255\255";
  Lexing.lex_default = 
   "\001\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\000\000\000\000\255\255\
    \255\255\255\255\255\255\059\000\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\000\000\255\255\255\255\000\000\000\000\000\000\000\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\064\000\255\255\255\255\255\255\000\000\000\000\
    \000\000\255\255\255\255\255\255\000\000\255\255\255\255\000\000\
    \255\255\255\255\000\000\000\000\255\255\000\000\082\000\255\255\
    \255\255\000\000\082\000\083\000\082\000\085\000\255\255\000\000\
    \255\255\255\255\255\255\255\255\000\000\000\000\000\000\000\000\
    \000\000\255\255\000\000\000\000\000\000\000\000\000\000\255\255\
    \000\000\000\000\255\255\255\255\255\255\110\000\000\000\255\255\
    \000\000\000\000\121\000\000\000\255\255\255\255\000\000\000\000\
    \255\255\255\255\255\255\255\255\000\000\000\000\000\000\255\255\
    \255\255\255\255\000\000\255\255\255\255\000\000\255\255\255\255\
    \000\000\138\000\000\000\000\000\255\255\000\000\144\000\000\000\
    \000\000\255\255\255\255\000\000\255\255\255\255\255\255\000\000\
    \255\255\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\036\000\038\000\038\000\036\000\037\000\081\000\087\000\
    \112\000\081\000\087\000\141\000\080\000\086\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \036\000\007\000\028\000\024\000\005\000\003\000\023\000\027\000\
    \026\000\021\000\025\000\006\000\020\000\019\000\018\000\003\000\
    \030\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\017\000\016\000\015\000\014\000\009\000\033\000\
    \004\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\013\000\101\000\012\000\004\000\035\000\
    \022\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\011\000\010\000\008\000\034\000\099\000\
    \096\000\098\000\095\000\092\000\079\000\094\000\093\000\075\000\
    \036\000\063\000\057\000\036\000\057\000\055\000\055\000\056\000\
    \056\000\056\000\056\000\056\000\056\000\056\000\056\000\056\000\
    \056\000\062\000\068\000\079\000\071\000\074\000\119\000\036\000\
    \054\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
    \118\000\126\000\125\000\078\000\078\000\078\000\078\000\078\000\
    \078\000\078\000\078\000\078\000\078\000\056\000\056\000\056\000\
    \056\000\056\000\056\000\056\000\056\000\056\000\056\000\100\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\130\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\061\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \002\000\003\000\133\000\136\000\003\000\003\000\003\000\255\255\
    \255\255\123\000\003\000\003\000\149\000\003\000\003\000\003\000\
    \000\000\000\000\000\000\081\000\062\000\000\000\080\000\000\000\
    \149\000\149\000\003\000\000\000\003\000\003\000\003\000\003\000\
    \003\000\000\000\000\000\149\000\004\000\000\000\125\000\004\000\
    \004\000\004\000\000\000\085\000\000\000\004\000\004\000\149\000\
    \004\000\004\000\004\000\000\000\000\000\000\000\084\000\081\000\
    \000\000\061\000\080\000\000\000\060\000\004\000\003\000\004\000\
    \004\000\004\000\004\000\004\000\000\000\000\000\000\000\005\000\
    \000\000\000\000\005\000\005\000\005\000\084\000\000\000\083\000\
    \005\000\005\000\000\000\005\000\005\000\005\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\003\000\000\000\003\000\000\000\
    \005\000\004\000\005\000\005\000\005\000\005\000\005\000\000\000\
    \000\000\000\000\089\000\000\000\000\000\089\000\089\000\089\000\
    \000\000\000\000\000\000\089\000\089\000\000\000\089\000\108\000\
    \089\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\
    \000\000\004\000\000\000\089\000\005\000\089\000\089\000\089\000\
    \089\000\089\000\000\000\058\000\000\000\106\000\000\000\000\000\
    \106\000\106\000\106\000\000\000\000\000\000\000\106\000\106\000\
    \000\000\106\000\106\000\106\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\005\000\000\000\005\000\000\000\106\000\089\000\
    \106\000\107\000\106\000\106\000\106\000\000\000\000\000\000\000\
    \005\000\000\000\000\000\005\000\005\000\005\000\000\000\000\000\
    \000\000\005\000\005\000\000\000\005\000\005\000\005\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\089\000\000\000\089\000\
    \000\000\005\000\106\000\005\000\005\000\005\000\005\000\005\000\
    \000\000\000\000\000\000\000\000\000\000\005\000\000\000\000\000\
    \005\000\005\000\005\000\000\000\000\000\000\000\005\000\005\000\
    \000\000\005\000\005\000\005\000\000\000\000\000\000\000\000\000\
    \106\000\000\000\106\000\000\000\105\000\005\000\005\000\000\000\
    \005\000\005\000\005\000\005\000\005\000\000\000\000\000\000\000\
    \000\000\000\000\005\000\000\000\000\000\005\000\005\000\005\000\
    \000\000\000\000\000\000\005\000\005\000\000\000\005\000\005\000\
    \005\000\255\255\000\000\005\000\104\000\005\000\000\000\000\000\
    \000\000\102\000\005\000\005\000\000\000\005\000\005\000\005\000\
    \005\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\
    \005\000\005\000\005\000\000\000\000\000\000\000\005\000\005\000\
    \000\000\097\000\005\000\005\000\000\000\255\255\000\000\255\255\
    \103\000\000\000\005\000\000\000\000\000\000\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\000\000\000\000\000\000\
    \089\000\000\000\000\000\089\000\089\000\089\000\000\000\000\000\
    \123\000\089\000\089\000\122\000\089\000\090\000\089\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\005\000\000\000\005\000\
    \000\000\089\000\005\000\089\000\089\000\091\000\089\000\089\000\
    \000\000\000\000\000\000\005\000\000\000\124\000\005\000\005\000\
    \088\000\000\000\000\000\000\000\005\000\005\000\000\000\005\000\
    \005\000\005\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \005\000\000\000\005\000\000\000\005\000\089\000\005\000\005\000\
    \005\000\005\000\005\000\000\000\000\000\000\000\003\000\000\000\
    \000\000\003\000\003\000\003\000\000\000\000\000\077\000\076\000\
    \003\000\000\000\003\000\003\000\003\000\000\000\000\000\055\000\
    \055\000\000\000\120\000\089\000\000\000\089\000\000\000\003\000\
    \005\000\003\000\003\000\003\000\003\000\003\000\049\000\000\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\000\000\046\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\048\000\005\000\000\000\
    \005\000\000\000\000\000\003\000\046\000\000\000\055\000\049\000\
    \000\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\047\000\000\000\045\000\000\000\029\000\
    \000\000\000\000\000\000\050\000\000\000\048\000\048\000\000\000\
    \000\000\003\000\000\000\003\000\047\000\046\000\045\000\000\000\
    \051\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\052\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \029\000\000\000\000\000\050\000\000\000\000\000\048\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\047\000\000\000\045\000\
    \051\000\031\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\052\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\000\000\255\255\000\000\
    \000\000\031\000\000\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\053\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
    \053\000\112\000\048\000\000\000\111\000\000\000\000\000\000\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \000\000\115\000\000\000\000\000\049\000\000\000\114\000\117\000\
    \000\000\116\000\048\000\000\000\000\000\000\000\000\000\000\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\000\000\000\000\
    \000\000\000\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\000\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\032\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\000\000\000\000\000\000\
    \000\000\032\000\000\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\053\000\053\000\053\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\053\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\053\000\053\000\
    \053\000\053\000\053\000\053\000\000\000\000\000\000\000\000\000\
    \000\000\046\000\070\000\070\000\070\000\070\000\070\000\070\000\
    \070\000\070\000\070\000\070\000\000\000\000\000\000\000\141\000\
    \000\000\000\000\140\000\000\000\053\000\000\000\053\000\053\000\
    \053\000\053\000\053\000\053\000\000\000\000\000\000\000\113\000\
    \000\000\047\000\000\000\045\000\000\000\000\000\000\000\143\000\
    \000\000\000\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\000\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\142\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\039\000\000\000\000\000\039\000\039\000\039\000\
    \000\000\000\000\000\000\039\000\039\000\000\000\039\000\039\000\
    \039\000\131\000\131\000\131\000\131\000\131\000\131\000\131\000\
    \131\000\131\000\131\000\039\000\000\000\039\000\039\000\039\000\
    \043\000\039\000\132\000\132\000\132\000\132\000\132\000\132\000\
    \132\000\132\000\132\000\132\000\000\000\056\000\056\000\056\000\
    \056\000\056\000\056\000\056\000\056\000\056\000\056\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\039\000\
    \042\000\000\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\056\000\039\000\039\000\039\000\
    \000\000\039\000\039\000\039\000\000\000\000\000\000\000\039\000\
    \039\000\079\000\039\000\039\000\039\000\150\000\150\000\150\000\
    \150\000\150\000\150\000\150\000\150\000\150\000\150\000\039\000\
    \000\000\039\000\039\000\039\000\039\000\039\000\000\000\000\000\
    \079\000\151\000\151\000\151\000\151\000\151\000\151\000\151\000\
    \151\000\151\000\151\000\000\000\000\000\000\000\000\000\000\000\
    \078\000\078\000\078\000\078\000\078\000\078\000\078\000\078\000\
    \078\000\078\000\000\000\039\000\040\000\139\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \000\000\039\000\000\000\039\000\000\000\000\000\000\000\000\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \000\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \000\000\000\000\000\000\000\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\032\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \000\000\000\000\000\000\000\000\032\000\000\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \054\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \000\000\000\000\000\000\000\000\046\000\000\000\000\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\054\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\047\000\000\000\045\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\000\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\000\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\039\000\000\000\000\000\
    \039\000\039\000\039\000\000\000\000\000\000\000\039\000\039\000\
    \000\000\039\000\039\000\039\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\039\000\000\000\
    \039\000\039\000\039\000\039\000\039\000\000\000\000\000\000\000\
    \000\000\040\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\041\000\000\000\000\000\000\000\
    \000\000\000\000\039\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\000\000\000\000\000\000\
    \039\000\040\000\039\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\084\000\081\000\000\000\
    \000\000\080\000\000\000\000\000\000\000\000\000\134\000\134\000\
    \134\000\134\000\134\000\134\000\134\000\134\000\134\000\134\000\
    \000\000\000\000\000\000\000\000\084\000\000\000\083\000\134\000\
    \134\000\134\000\134\000\134\000\134\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\078\000\078\000\078\000\078\000\
    \078\000\078\000\078\000\078\000\078\000\078\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\134\000\
    \134\000\134\000\134\000\134\000\134\000\000\000\000\000\000\000\
    \000\000\000\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\000\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\042\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\044\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\000\000\000\000\000\000\
    \000\000\042\000\000\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\135\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\255\255\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\000\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\000\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\039\000\000\000\000\000\039\000\039\000\039\000\
    \000\000\000\000\000\000\039\000\039\000\000\000\039\000\039\000\
    \039\000\000\000\067\000\000\000\067\000\000\000\000\000\000\000\
    \000\000\067\000\000\000\039\000\000\000\039\000\039\000\039\000\
    \039\000\039\000\066\000\066\000\066\000\066\000\066\000\066\000\
    \066\000\066\000\066\000\066\000\076\000\000\000\000\000\076\000\
    \076\000\076\000\000\000\000\000\000\000\076\000\076\000\000\000\
    \076\000\076\000\076\000\000\000\000\000\000\000\000\000\039\000\
    \000\000\000\000\000\000\000\000\000\000\076\000\000\000\076\000\
    \076\000\076\000\076\000\076\000\000\000\000\000\067\000\000\000\
    \000\000\000\000\000\000\000\000\067\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\039\000\000\000\039\000\
    \067\000\000\000\000\000\000\000\067\000\000\000\067\000\000\000\
    \000\000\076\000\065\000\000\000\000\000\000\000\000\000\005\000\
    \000\000\000\000\005\000\005\000\005\000\000\000\000\000\000\000\
    \005\000\005\000\000\000\005\000\005\000\005\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\076\000\
    \005\000\076\000\005\000\005\000\005\000\005\000\005\000\000\000\
    \000\000\000\000\089\000\000\000\000\000\089\000\089\000\089\000\
    \000\000\000\000\000\000\089\000\089\000\000\000\089\000\089\000\
    \089\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\089\000\005\000\089\000\089\000\089\000\
    \089\000\089\000\000\000\000\000\000\000\000\000\000\000\089\000\
    \000\000\000\000\089\000\089\000\089\000\000\000\000\000\000\000\
    \089\000\089\000\000\000\089\000\089\000\089\000\000\000\000\000\
    \000\000\000\000\005\000\000\000\005\000\000\000\000\000\089\000\
    \089\000\000\000\089\000\089\000\089\000\089\000\089\000\000\000\
    \000\000\000\000\089\000\000\000\000\000\089\000\089\000\089\000\
    \000\000\000\000\000\000\089\000\089\000\000\000\089\000\089\000\
    \089\000\000\000\000\000\000\000\000\000\089\000\000\000\089\000\
    \000\000\000\000\255\255\089\000\089\000\089\000\089\000\089\000\
    \089\000\089\000\000\000\000\000\000\000\005\000\000\000\000\000\
    \005\000\005\000\005\000\000\000\000\000\000\000\005\000\005\000\
    \000\000\005\000\005\000\005\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\089\000\000\000\089\000\000\000\005\000\089\000\
    \005\000\005\000\005\000\005\000\005\000\000\000\000\000\000\000\
    \005\000\000\000\000\000\005\000\005\000\005\000\000\000\000\000\
    \000\000\005\000\005\000\000\000\005\000\005\000\005\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\089\000\000\000\089\000\
    \000\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \000\000\000\000\000\000\106\000\000\000\000\000\106\000\106\000\
    \106\000\000\000\000\000\000\000\106\000\106\000\000\000\106\000\
    \106\000\106\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \005\000\000\000\005\000\000\000\106\000\005\000\106\000\106\000\
    \106\000\106\000\106\000\000\000\000\000\000\000\106\000\000\000\
    \000\000\106\000\106\000\106\000\000\000\000\000\000\000\106\000\
    \106\000\000\000\106\000\106\000\106\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\005\000\000\000\005\000\000\000\106\000\
    \106\000\106\000\106\000\106\000\106\000\106\000\000\000\000\000\
    \000\000\089\000\000\000\000\000\089\000\089\000\089\000\000\000\
    \000\000\000\000\089\000\089\000\000\000\089\000\089\000\089\000\
    \000\000\000\000\129\000\000\000\129\000\000\000\106\000\000\000\
    \106\000\129\000\089\000\106\000\089\000\089\000\089\000\089\000\
    \089\000\000\000\128\000\128\000\128\000\128\000\128\000\128\000\
    \128\000\128\000\128\000\128\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\106\000\000\000\106\000\000\000\000\000\089\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\149\000\000\000\000\000\
    \148\000\000\000\000\000\000\000\000\000\000\000\129\000\000\000\
    \000\000\000\000\000\000\000\000\129\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\147\000\089\000\147\000\089\000\000\000\
    \129\000\000\000\147\000\000\000\129\000\000\000\129\000\000\000\
    \000\000\000\000\127\000\146\000\146\000\146\000\146\000\146\000\
    \146\000\146\000\146\000\146\000\146\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\152\000\152\000\152\000\
    \152\000\152\000\152\000\152\000\152\000\152\000\152\000\147\000\
    \000\000\000\000\000\000\000\000\000\000\147\000\152\000\152\000\
    \152\000\152\000\152\000\152\000\000\000\000\000\000\000\000\000\
    \000\000\147\000\000\000\000\000\000\000\147\000\000\000\147\000\
    \000\000\000\000\000\000\145\000\153\000\153\000\153\000\153\000\
    \153\000\153\000\153\000\153\000\153\000\153\000\152\000\152\000\
    \152\000\152\000\152\000\152\000\000\000\153\000\153\000\153\000\
    \153\000\153\000\153\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\153\000\153\000\153\000\
    \153\000\153\000\153\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\037\000\000\000\000\000\080\000\086\000\
    \111\000\082\000\085\000\140\000\082\000\085\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\011\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\000\
    \016\000\013\000\017\000\018\000\024\000\017\000\017\000\026\000\
    \036\000\059\000\048\000\036\000\048\000\050\000\050\000\048\000\
    \048\000\048\000\048\000\048\000\048\000\048\000\048\000\048\000\
    \048\000\061\000\067\000\024\000\070\000\073\000\116\000\036\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \117\000\121\000\123\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\057\000\057\000\057\000\
    \057\000\057\000\057\000\057\000\057\000\057\000\057\000\013\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\129\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\060\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\003\000\132\000\135\000\003\000\003\000\003\000\082\000\
    \085\000\122\000\003\000\003\000\149\000\003\000\003\000\003\000\
    \255\255\255\255\255\255\083\000\060\000\255\255\083\000\255\255\
    \148\000\148\000\003\000\255\255\003\000\003\000\003\000\003\000\
    \003\000\255\255\255\255\149\000\004\000\255\255\122\000\004\000\
    \004\000\004\000\255\255\083\000\255\255\004\000\004\000\148\000\
    \004\000\004\000\004\000\255\255\255\255\255\255\084\000\084\000\
    \255\255\027\000\084\000\255\255\027\000\004\000\003\000\004\000\
    \004\000\004\000\004\000\004\000\255\255\255\255\255\255\005\000\
    \255\255\255\255\005\000\005\000\005\000\084\000\255\255\084\000\
    \005\000\005\000\255\255\005\000\005\000\005\000\027\000\255\255\
    \255\255\255\255\255\255\255\255\003\000\255\255\003\000\255\255\
    \005\000\004\000\005\000\005\000\005\000\005\000\005\000\255\255\
    \255\255\255\255\006\000\255\255\255\255\006\000\006\000\006\000\
    \255\255\255\255\255\255\006\000\006\000\255\255\006\000\006\000\
    \006\000\255\255\255\255\255\255\255\255\255\255\255\255\004\000\
    \255\255\004\000\255\255\006\000\005\000\006\000\006\000\006\000\
    \006\000\006\000\255\255\027\000\255\255\007\000\255\255\255\255\
    \007\000\007\000\007\000\255\255\255\255\255\255\007\000\007\000\
    \255\255\007\000\007\000\007\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\005\000\255\255\005\000\255\255\007\000\006\000\
    \007\000\007\000\007\000\007\000\007\000\255\255\255\255\255\255\
    \009\000\255\255\255\255\009\000\009\000\009\000\255\255\255\255\
    \255\255\009\000\009\000\255\255\009\000\009\000\009\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\006\000\255\255\006\000\
    \255\255\009\000\007\000\009\000\009\000\009\000\009\000\009\000\
    \255\255\255\255\255\255\255\255\255\255\010\000\255\255\255\255\
    \010\000\010\000\010\000\255\255\255\255\255\255\010\000\010\000\
    \255\255\010\000\010\000\010\000\255\255\255\255\255\255\255\255\
    \007\000\255\255\007\000\255\255\009\000\009\000\010\000\255\255\
    \010\000\010\000\010\000\010\000\010\000\255\255\255\255\255\255\
    \255\255\255\255\014\000\255\255\255\255\014\000\014\000\014\000\
    \255\255\255\255\255\255\014\000\014\000\255\255\014\000\014\000\
    \014\000\083\000\255\255\009\000\009\000\009\000\255\255\255\255\
    \255\255\010\000\010\000\014\000\255\255\014\000\014\000\014\000\
    \014\000\014\000\255\255\255\255\255\255\015\000\255\255\255\255\
    \015\000\015\000\015\000\255\255\255\255\255\255\015\000\015\000\
    \255\255\015\000\015\000\015\000\255\255\084\000\255\255\027\000\
    \010\000\255\255\010\000\255\255\255\255\255\255\015\000\014\000\
    \015\000\015\000\015\000\015\000\015\000\255\255\255\255\255\255\
    \019\000\255\255\255\255\019\000\019\000\019\000\255\255\255\255\
    \114\000\019\000\019\000\114\000\019\000\019\000\019\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\014\000\255\255\014\000\
    \255\255\019\000\015\000\019\000\019\000\019\000\019\000\019\000\
    \255\255\255\255\255\255\023\000\255\255\114\000\023\000\023\000\
    \023\000\255\255\255\255\255\255\023\000\023\000\255\255\023\000\
    \023\000\023\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \015\000\255\255\015\000\255\255\023\000\019\000\023\000\023\000\
    \023\000\023\000\023\000\255\255\255\255\255\255\025\000\255\255\
    \255\255\025\000\025\000\025\000\255\255\255\255\025\000\025\000\
    \025\000\255\255\025\000\025\000\025\000\255\255\255\255\055\000\
    \055\000\255\255\114\000\019\000\255\255\019\000\255\255\025\000\
    \023\000\025\000\025\000\025\000\025\000\025\000\029\000\255\255\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\255\255\055\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\029\000\023\000\255\255\
    \023\000\255\255\255\255\025\000\029\000\255\255\055\000\030\000\
    \255\255\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\055\000\255\255\055\000\255\255\029\000\
    \255\255\255\255\255\255\030\000\255\255\029\000\030\000\255\255\
    \255\255\025\000\255\255\025\000\029\000\030\000\029\000\255\255\
    \030\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\030\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \030\000\255\255\255\255\030\000\255\255\255\255\030\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\030\000\255\255\030\000\
    \030\000\031\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\030\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\255\255\114\000\255\255\
    \255\255\031\000\255\255\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\052\000\
    \052\000\052\000\052\000\052\000\052\000\052\000\052\000\052\000\
    \052\000\109\000\049\000\255\255\109\000\255\255\255\255\255\255\
    \052\000\052\000\052\000\052\000\052\000\052\000\066\000\066\000\
    \066\000\066\000\066\000\066\000\066\000\066\000\066\000\066\000\
    \255\255\109\000\255\255\255\255\049\000\255\255\109\000\109\000\
    \255\255\109\000\049\000\255\255\255\255\255\255\255\255\255\255\
    \052\000\052\000\052\000\052\000\052\000\052\000\255\255\255\255\
    \255\255\255\255\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\255\255\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\032\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\255\255\255\255\255\255\
    \255\255\032\000\255\255\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\053\000\053\000\053\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\053\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\053\000\053\000\
    \053\000\053\000\053\000\053\000\255\255\255\255\255\255\255\255\
    \255\255\053\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\255\255\255\255\255\255\137\000\
    \255\255\255\255\137\000\255\255\053\000\255\255\053\000\053\000\
    \053\000\053\000\053\000\053\000\255\255\255\255\255\255\109\000\
    \255\255\053\000\255\255\053\000\255\255\255\255\255\255\137\000\
    \255\255\255\255\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\255\255\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\137\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\033\000\255\255\255\255\033\000\033\000\033\000\
    \255\255\255\255\255\255\033\000\033\000\255\255\033\000\033\000\
    \033\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\
    \128\000\128\000\128\000\033\000\255\255\033\000\033\000\033\000\
    \033\000\033\000\131\000\131\000\131\000\131\000\131\000\131\000\
    \131\000\131\000\131\000\131\000\255\255\056\000\056\000\056\000\
    \056\000\056\000\056\000\056\000\056\000\056\000\056\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\033\000\
    \033\000\255\255\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\056\000\033\000\034\000\033\000\
    \255\255\034\000\034\000\034\000\255\255\255\255\255\255\034\000\
    \034\000\079\000\034\000\034\000\034\000\146\000\146\000\146\000\
    \146\000\146\000\146\000\146\000\146\000\146\000\146\000\034\000\
    \255\255\034\000\034\000\034\000\034\000\034\000\255\255\255\255\
    \079\000\150\000\150\000\150\000\150\000\150\000\150\000\150\000\
    \150\000\150\000\150\000\255\255\255\255\255\255\255\255\255\255\
    \079\000\079\000\079\000\079\000\079\000\079\000\079\000\079\000\
    \079\000\079\000\255\255\034\000\034\000\137\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \255\255\034\000\255\255\034\000\255\255\255\255\255\255\255\255\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \255\255\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\065\000\065\000\065\000\065\000\065\000\065\000\065\000\
    \065\000\065\000\065\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\065\000\065\000\065\000\065\000\065\000\065\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\065\000\065\000\065\000\065\000\065\000\065\000\
    \255\255\255\255\255\255\255\255\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\035\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \255\255\255\255\255\255\255\255\035\000\255\255\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \054\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\072\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \255\255\255\255\255\255\255\255\054\000\255\255\255\255\072\000\
    \072\000\072\000\072\000\072\000\072\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\054\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\054\000\255\255\054\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\255\255\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\255\255\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\039\000\255\255\255\255\
    \039\000\039\000\039\000\255\255\255\255\255\255\039\000\039\000\
    \255\255\039\000\039\000\039\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\039\000\255\255\
    \039\000\039\000\039\000\039\000\039\000\255\255\255\255\255\255\
    \255\255\040\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\255\255\255\255\255\255\
    \255\255\255\255\039\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\255\255\255\255\255\255\
    \039\000\040\000\039\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\078\000\078\000\255\255\
    \255\255\078\000\255\255\255\255\255\255\255\255\127\000\127\000\
    \127\000\127\000\127\000\127\000\127\000\127\000\127\000\127\000\
    \255\255\255\255\255\255\255\255\078\000\255\255\078\000\127\000\
    \127\000\127\000\127\000\127\000\127\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\078\000\078\000\078\000\078\000\
    \078\000\078\000\078\000\078\000\078\000\078\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\127\000\
    \127\000\127\000\127\000\127\000\127\000\255\255\255\255\255\255\
    \255\255\255\255\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\255\255\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\042\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\255\255\255\255\255\255\
    \255\255\042\000\255\255\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\134\000\134\000\134\000\
    \134\000\134\000\134\000\134\000\134\000\134\000\134\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\134\000\134\000\
    \134\000\134\000\134\000\134\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\078\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\134\000\134\000\
    \134\000\134\000\134\000\134\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\255\255\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\255\255\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\043\000\255\255\255\255\043\000\043\000\043\000\
    \255\255\255\255\255\255\043\000\043\000\255\255\043\000\043\000\
    \043\000\255\255\058\000\255\255\058\000\255\255\255\255\255\255\
    \255\255\058\000\255\255\043\000\255\255\043\000\043\000\043\000\
    \043\000\043\000\058\000\058\000\058\000\058\000\058\000\058\000\
    \058\000\058\000\058\000\058\000\076\000\255\255\255\255\076\000\
    \076\000\076\000\255\255\255\255\255\255\076\000\076\000\255\255\
    \076\000\076\000\076\000\255\255\255\255\255\255\255\255\043\000\
    \255\255\255\255\255\255\255\255\255\255\076\000\255\255\076\000\
    \076\000\076\000\076\000\076\000\255\255\255\255\058\000\255\255\
    \255\255\255\255\255\255\255\255\058\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\043\000\255\255\043\000\
    \058\000\255\255\255\255\255\255\058\000\255\255\058\000\255\255\
    \255\255\076\000\058\000\255\255\255\255\255\255\255\255\088\000\
    \255\255\255\255\088\000\088\000\088\000\255\255\255\255\255\255\
    \088\000\088\000\255\255\088\000\088\000\088\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\076\000\
    \088\000\076\000\088\000\088\000\088\000\088\000\088\000\255\255\
    \255\255\255\255\089\000\255\255\255\255\089\000\089\000\089\000\
    \255\255\255\255\255\255\089\000\089\000\255\255\089\000\089\000\
    \089\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\089\000\088\000\089\000\089\000\089\000\
    \089\000\089\000\255\255\255\255\255\255\255\255\255\255\090\000\
    \255\255\255\255\090\000\090\000\090\000\255\255\255\255\255\255\
    \090\000\090\000\255\255\090\000\090\000\090\000\255\255\255\255\
    \255\255\255\255\088\000\255\255\088\000\255\255\255\255\089\000\
    \090\000\255\255\090\000\090\000\090\000\090\000\090\000\255\255\
    \255\255\255\255\091\000\255\255\255\255\091\000\091\000\091\000\
    \255\255\255\255\255\255\091\000\091\000\255\255\091\000\091\000\
    \091\000\255\255\255\255\255\255\255\255\089\000\255\255\089\000\
    \255\255\255\255\058\000\091\000\090\000\091\000\091\000\091\000\
    \091\000\091\000\255\255\255\255\255\255\097\000\255\255\255\255\
    \097\000\097\000\097\000\255\255\255\255\255\255\097\000\097\000\
    \255\255\097\000\097\000\097\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\090\000\255\255\090\000\255\255\097\000\091\000\
    \097\000\097\000\097\000\097\000\097\000\255\255\255\255\255\255\
    \103\000\255\255\255\255\103\000\103\000\103\000\255\255\255\255\
    \255\255\103\000\103\000\255\255\103\000\103\000\103\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\091\000\255\255\091\000\
    \255\255\103\000\097\000\103\000\103\000\103\000\103\000\103\000\
    \255\255\255\255\255\255\106\000\255\255\255\255\106\000\106\000\
    \106\000\255\255\255\255\255\255\106\000\106\000\255\255\106\000\
    \106\000\106\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \097\000\255\255\097\000\255\255\106\000\103\000\106\000\106\000\
    \106\000\106\000\106\000\255\255\255\255\255\255\107\000\255\255\
    \255\255\107\000\107\000\107\000\255\255\255\255\255\255\107\000\
    \107\000\255\255\107\000\107\000\107\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\103\000\255\255\103\000\255\255\107\000\
    \106\000\107\000\107\000\107\000\107\000\107\000\255\255\255\255\
    \255\255\108\000\255\255\255\255\108\000\108\000\108\000\255\255\
    \255\255\255\255\108\000\108\000\255\255\108\000\108\000\108\000\
    \255\255\255\255\120\000\255\255\120\000\255\255\106\000\255\255\
    \106\000\120\000\108\000\107\000\108\000\108\000\108\000\108\000\
    \108\000\255\255\120\000\120\000\120\000\120\000\120\000\120\000\
    \120\000\120\000\120\000\120\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\107\000\255\255\107\000\255\255\255\255\108\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\142\000\255\255\255\255\
    \142\000\255\255\255\255\255\255\255\255\255\255\120\000\255\255\
    \255\255\255\255\255\255\255\255\120\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\142\000\108\000\142\000\108\000\255\255\
    \120\000\255\255\142\000\255\255\120\000\255\255\120\000\255\255\
    \255\255\255\255\120\000\142\000\142\000\142\000\142\000\142\000\
    \142\000\142\000\142\000\142\000\142\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\142\000\
    \255\255\255\255\255\255\255\255\255\255\142\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\255\255\255\255\255\255\255\255\
    \255\255\142\000\255\255\255\255\255\255\142\000\255\255\142\000\
    \255\255\255\255\255\255\142\000\152\000\152\000\152\000\152\000\
    \152\000\152\000\152\000\152\000\152\000\152\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\255\255\152\000\152\000\152\000\
    \152\000\152\000\152\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\152\000\152\000\152\000\
    \152\000\152\000\152\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\142\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\010\000\036\000\
    \000\000\012\000\000\000\000\000\002\000\000\000\000\000\027\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\
    \000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\
    \000\000\000\000";
  Lexing.lex_backtrk_code = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \012\000\000\000\000\000\000\000\000\000\000\000\027\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\039\000\039\000\000\000\000\000\
    \000\000\000\000";
  Lexing.lex_default_code = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\019\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000";
  Lexing.lex_trans_code = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\001\000\000\000\036\000\036\000\000\000\036\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\000\000\000\000\001\000\022\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\007\000\001\000\000\000\000\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\001\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check_code = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\024\000\083\000\142\000\148\000\083\000\142\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \024\000\255\255\083\000\000\000\084\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\078\000\079\000\255\255\255\255\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\078\000\078\000\078\000\078\000\078\000\078\000\
    \078\000\078\000\078\000\078\000\079\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\079\000\079\000\079\000\079\000\
    \079\000\079\000\079\000\079\000\079\000\079\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \083\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_code = 
   "\255\004\255\255\005\255\255\007\255\006\255\255\003\255\000\004\
    \001\005\255\007\255\255\006\255\007\255\255\000\004\001\005\003\
    \006\002\007\255\001\255\255\000\001\255";
}

let rec token lexbuf =
lexbuf.Lexing.lex_mem <- Array.create 8 (-1) ;   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.new_engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 252 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( update_loc lexbuf None 1 false 0;
            token lexbuf
          )
# 1157 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 1 ->
# 256 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( token lexbuf )
# 1162 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 2 ->
# 258 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( UNDERSCORE )
# 1167 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 3 ->
# 260 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( TILDE )
# 1172 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 4 ->
# 262 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( let s = Lexing.lexeme lexbuf in
            let name = String.sub s 1 (String.length s - 2) in
            (*
              if Hashtbl.mem keyword_table name then
              raise (Error(Keyword_as_label name, Location.curr lexbuf));
            *)
            LABEL name )
# 1183 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 5 ->
# 269 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( QUESTION )
# 1188 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 6 ->
# 270 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( QUESTIONQUESTION )
# 1193 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 7 ->
# 272 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( let s = Lexing.lexeme lexbuf in
            let name = String.sub s 1 (String.length s - 2) in
            (*
              if Hashtbl.mem keyword_table name then
              raise (Error(Keyword_as_label name, Location.curr lexbuf));
            *)
            OPTLABEL name )
# 1204 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 8 ->
# 280 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( let s = Lexing.lexeme lexbuf in
            try
              Hashtbl.find keyword_table s
            with Not_found ->
              LIDENT s )
# 1213 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 9 ->
# 286 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( UIDENT(Lexing.lexeme lexbuf) )
# 1218 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 10 ->
# 288 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( INT (can_overflow cvt_int_literal lexbuf) )
# 1223 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 11 ->
# 290 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( FLOAT (remove_underscores(Lexing.lexeme lexbuf)) )
# 1228 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 12 ->
# 292 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( INT32 (can_overflow cvt_int32_literal lexbuf) )
# 1233 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 13 ->
# 294 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( INT64 (can_overflow cvt_int64_literal lexbuf) )
# 1238 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 14 ->
# 296 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( NATIVEINT (can_overflow cvt_nativeint_literal lexbuf) )
# 1243 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 15 ->
# 298 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( reset_string_buffer();
            let string_start = lexbuf.lex_start_p in
            string_start_loc := Lexing.lexeme_start lexbuf;
            let token = string lexbuf in
            lexbuf.lex_start_p <- string_start;
            token )
# 1253 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 16 ->
# 305 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( update_loc lexbuf None 1 false 1;
            CHAR (InRange (Lexing.lexeme_char lexbuf 1)) )
# 1259 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 17 ->
# 308 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( CHAR( InRange (Lexing.lexeme_char lexbuf 1)) )
# 1264 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 18 ->
# 310 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( CHAR( InRange (char_for_backslash (Lexing.lexeme_char lexbuf 2))) )
# 1269 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 19 ->
# 312 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( CHAR(can_overflow (char_for_decimal_code 2) lexbuf) )
# 1274 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 20 ->
# 314 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( CHAR( InRange (char_for_hexadecimal_code lexbuf 3)) )
# 1279 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 21 ->
# 316 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( let l = Lexing.lexeme lexbuf in
            CHAR ( Overflow l )
          )
# 1286 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 22 ->
# 320 "libs/ocaml-compiler/approx/approx_lexer.mll"
          (
            let comment_start = lexbuf.lex_start_p in
            comment_start_loc := [Lexing.lexeme_start lexbuf];
            let _ (*token*) = comment lexbuf in
            lexbuf.lex_start_p <- comment_start;
            (* token *)
            token lexbuf
          )
# 1298 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 23 ->
# 329 "libs/ocaml-compiler/approx/approx_lexer.mll"
          (
        (*      let loc = Location.curr lexbuf in *)
        (*        Location.prerr_warning loc Warnings.Comment_not_end; *)
            lexbuf.Lexing.lex_curr_pos <- lexbuf.Lexing.lex_curr_pos - 1;
            let curpos = lexbuf.lex_curr_p in
            lexbuf.lex_curr_p <- { curpos with pos_cnum = curpos.pos_cnum - 1 };
            STAR
          )
# 1310 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 24 ->
let
# 337 "libs/ocaml-compiler/approx/approx_lexer.mll"
                                       num
# 1316 "libs/ocaml-compiler/approx/approx_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_mem.(0) lexbuf.Lexing.lex_mem.(1)
and
# 338 "libs/ocaml-compiler/approx/approx_lexer.mll"
                                             name
# 1321 "libs/ocaml-compiler/approx/approx_lexer.ml"
= Lexing.sub_lexeme_opt lexbuf lexbuf.Lexing.lex_mem.(3) lexbuf.Lexing.lex_mem.(2) in
# 340 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( update_loc lexbuf name (int_of_string num) true 0;
            token lexbuf
          )
# 1327 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 25 ->
# 343 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( SHARP )
# 1332 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 26 ->
# 344 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( AMPERSAND )
# 1337 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 27 ->
# 345 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( AMPERAMPER )
# 1342 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 28 ->
# 346 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( BACKQUOTE )
# 1347 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 29 ->
# 347 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( QUOTE )
# 1352 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 30 ->
# 348 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( LPAREN )
# 1357 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 31 ->
# 349 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( RPAREN )
# 1362 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 32 ->
# 350 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( STAR )
# 1367 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 33 ->
# 351 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( COMMA )
# 1372 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 34 ->
# 352 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( MINUSGREATER )
# 1377 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 35 ->
# 353 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( DOT )
# 1382 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 36 ->
# 354 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( DOTDOT )
# 1387 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 37 ->
# 355 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( COLON )
# 1392 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 38 ->
# 356 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( COLONCOLON )
# 1397 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 39 ->
# 357 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( COLONEQUAL )
# 1402 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 40 ->
# 358 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( COLONGREATER )
# 1407 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 41 ->
# 359 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( SEMI )
# 1412 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 42 ->
# 360 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( SEMISEMI )
# 1417 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 43 ->
# 361 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( LESS )
# 1422 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 44 ->
# 362 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( LESSMINUS )
# 1427 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 45 ->
# 363 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( EQUAL )
# 1432 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 46 ->
# 364 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( LBRACKET )
# 1437 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 47 ->
# 365 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( LBRACKETBAR )
# 1442 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 48 ->
# 366 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( LBRACKETLESS )
# 1447 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 49 ->
# 367 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( LBRACKETGREATER )
# 1452 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 50 ->
# 368 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( RBRACKET )
# 1457 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 51 ->
# 369 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( LBRACE )
# 1462 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 52 ->
# 370 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( LBRACELESS )
# 1467 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 53 ->
# 371 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( BAR )
# 1472 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 54 ->
# 372 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( BARBAR )
# 1477 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 55 ->
# 373 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( BARRBRACKET )
# 1482 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 56 ->
# 374 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( GREATER )
# 1487 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 57 ->
# 375 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( GREATERRBRACKET )
# 1492 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 58 ->
# 376 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( RBRACE )
# 1497 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 59 ->
# 377 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( GREATERRBRACE )
# 1502 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 60 ->
# 378 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( BANG )
# 1507 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 61 ->
# 380 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( INFIXOP0 "!=" )
# 1512 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 62 ->
# 381 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( PLUS )
# 1517 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 63 ->
# 382 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( PLUSDOT )
# 1522 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 64 ->
# 383 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( MINUS )
# 1527 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 65 ->
# 384 "libs/ocaml-compiler/approx/approx_lexer.mll"
             ( MINUSDOT )
# 1532 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 66 ->
# 387 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( PREFIXOP(Lexing.lexeme lexbuf) )
# 1537 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 67 ->
# 389 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( PREFIXOP(Lexing.lexeme lexbuf) )
# 1542 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 68 ->
# 391 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( INFIXOP0(Lexing.lexeme lexbuf) )
# 1547 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 69 ->
# 393 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( INFIXOP1(Lexing.lexeme lexbuf) )
# 1552 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 70 ->
# 395 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( INFIXOP2(Lexing.lexeme lexbuf) )
# 1557 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 71 ->
# 397 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( INFIXOP4(Lexing.lexeme lexbuf) )
# 1562 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 72 ->
# 399 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( INFIXOP3(Lexing.lexeme lexbuf) )
# 1567 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 73 ->
# 400 "libs/ocaml-compiler/approx/approx_lexer.mll"
            ( EOF )
# 1572 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 74 ->
# 402 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( ILLEGAL_CHAR (Lexing.lexeme_char lexbuf 0)      )
# 1577 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and comment lexbuf =
  __ocaml_lex_comment_rec lexbuf 109
and __ocaml_lex_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 406 "libs/ocaml-compiler/approx/approx_lexer.mll"
      ( comment_start_loc := (Lexing.lexeme_start lexbuf) :: !comment_start_loc;
        comment lexbuf;
      )
# 1590 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 1 ->
# 410 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( match !comment_start_loc with
            | [] -> assert false
            | [x] ->
              comment_start_loc := [];
              comment_stack := (x, Lexing.lexeme_end lexbuf) :: !comment_stack;
              COMMENT (x, Lexing.lexeme_end lexbuf)
            | _ :: l -> comment_start_loc := l;
              comment lexbuf;
          )
# 1603 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 2 ->
# 420 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( reset_string_buffer();
            string_start_loc := Lexing.lexeme_start lexbuf;
            let s = string lexbuf in
            reset_string_buffer ();
            match s with
              | EOF_IN_STRING _ ->
                let pos =  List.last !comment_start_loc in
                comment_start_loc := [];
                EOF_IN_COMMENT pos
              | STRING _ -> comment lexbuf
              | _ -> assert false

          )
# 1620 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 3 ->
# 434 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( comment lexbuf )
# 1625 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 4 ->
# 436 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( update_loc lexbuf None 1 false 1;
            comment lexbuf
          )
# 1632 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 5 ->
# 440 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( comment lexbuf )
# 1637 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 6 ->
# 442 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( comment lexbuf )
# 1642 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 7 ->
# 444 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( comment lexbuf )
# 1647 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 8 ->
# 446 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( comment lexbuf )
# 1652 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 9 ->
# 448 "libs/ocaml-compiler/approx/approx_lexer.mll"
          (
            let pos = List.last !comment_start_loc in
            comment_start_loc := [];
            EOF_IN_COMMENT pos
          )
# 1661 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 10 ->
# 454 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( update_loc lexbuf None 1 false 0;
            comment lexbuf
          )
# 1668 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 11 ->
# 458 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( comment lexbuf )
# 1673 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_comment_rec lexbuf __ocaml_lex_state

and string lexbuf =
lexbuf.Lexing.lex_mem <- Array.create 2 (-1) ;   __ocaml_lex_string_rec lexbuf 137
and __ocaml_lex_string_rec lexbuf __ocaml_lex_state =
  match Lexing.new_engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 462 "libs/ocaml-compiler/approx/approx_lexer.mll"
      ( STRING (get_stored_string ()) )
# 1684 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 1 ->
let
# 463 "libs/ocaml-compiler/approx/approx_lexer.mll"
                                      space
# 1690 "libs/ocaml-compiler/approx/approx_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_mem.(0) lexbuf.Lexing.lex_curr_pos in
# 464 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( update_loc lexbuf None 1 false (String.length space);
            string lexbuf
          )
# 1696 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 2 ->
# 468 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( store_string_char(char_for_backslash(Lexing.lexeme_char lexbuf 1));
            string lexbuf )
# 1702 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 3 ->
# 471 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( store_string_char(char_for_decimal_code 1 (Lexing.lexeme lexbuf));
            string lexbuf )
# 1708 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 4 ->
# 474 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( store_string_char(char_for_hexadecimal_code lexbuf 2);
            string lexbuf )
# 1714 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 5 ->
# 477 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( if in_comment ()
            then string lexbuf
            else begin
          (*  Should be an error, but we are very lax.
              raise (Error (Illegal_escape (Lexing.lexeme lexbuf),
              Location.curr lexbuf))
          *)
              store_string_char (Lexing.lexeme_char lexbuf 0);
              store_string_char (Lexing.lexeme_char lexbuf 1);
              string lexbuf
            end
          )
# 1730 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 6 ->
# 490 "libs/ocaml-compiler/approx/approx_lexer.mll"
          (
            update_loc lexbuf None 1 false 0;
            let s = Lexing.lexeme lexbuf in
            for i = 0 to String.length s - 1 do
              store_string_char s.[i];
            done;
            string lexbuf
          )
# 1742 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 7 ->
# 499 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( EOF_IN_STRING !string_start_loc )
# 1747 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | 8 ->
# 501 "libs/ocaml-compiler/approx/approx_lexer.mll"
          ( store_string_char(Lexing.lexeme_char lexbuf 0);
            string lexbuf )
# 1753 "libs/ocaml-compiler/approx/approx_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_string_rec lexbuf __ocaml_lex_state

;;

# 504 "libs/ocaml-compiler/approx/approx_lexer.mll"
           

          let rec token_locs lexbuf =
            match token lexbuf with
                COMMENT _ -> token_locs lexbuf
              | EOF_IN_COMMENT _ ->
                EOF, ( lexbuf.lex_start_p, lexbuf.lex_start_p)
              | EOF_IN_STRING _ ->
                EOF, ( lexbuf.lex_start_p, lexbuf.lex_start_p)
              | token ->
                token, ( lexbuf.lex_start_p, lexbuf.lex_curr_p)

          let rec token_pos lexbuf =
            match token lexbuf with
                COMMENT _ -> token_pos lexbuf
              | EOF_IN_COMMENT _ ->
                EOF, ( lexbuf.lex_start_p.pos_cnum, lexbuf.lex_start_p.pos_cnum)
              | EOF_IN_STRING _ ->
                EOF, ( lexbuf.lex_start_p.pos_cnum, lexbuf.lex_start_p.pos_cnum)
              | token ->
                token, ( lexbuf.lex_start_p.pos_cnum, lexbuf.lex_curr_p.pos_cnum)


          let token_locs_and_comments lexbuf =
              let token = token lexbuf in
              token,  ( lexbuf.lex_start_p, lexbuf.lex_curr_p)

          let get_token = token

          let rec token lexbuf =
            match get_token lexbuf with
                COMMENT _ -> token lexbuf
              | EOF_IN_COMMENT _
              | EOF_IN_STRING _ -> EOF
              | tok -> tok

	  let tokens_of_file filename =
	    let ic = open_in filename in
	    try
	      init ();
	      let lexbuf = Lexing.from_channel ic in
	      let rec iter tokens =
		let token = token_pos lexbuf in
		match token with
		    (EOF, _) -> List.rev tokens
		  | _ -> iter (token :: tokens)
	      in
	      let tokens = iter [] in
	      close_in ic;
	      tokens
	    with e -> close_in ic; raise e

          let tokens_with_loc_of_string s =
	      init ();
	      let lexbuf = Lexing.from_string s in
	      let rec iter tokens =
		let token = token_pos lexbuf in
		match token with
		    (EOF, _) -> List.rev tokens
		  | _ -> iter (token :: tokens)
	      in
	      let tokens = iter [] in
	      tokens

          let tokens_of_string s =
	      init ();
	      let lexbuf = Lexing.from_string s in
	      let rec iter tokens =
		let token = token lexbuf in
		match token with
		    (EOF) -> List.rev tokens
		  | _ -> iter (token :: tokens)
	      in
	      let tokens = iter [] in
	      tokens

	  let lines () = List.rev ( !lines_starts )

          include Approx_tokens.StringOfToken(Tokens)

	   end

    include Approx_tokens.Struct
    include (Make(Approx_tokens.Struct))

# 1845 "libs/ocaml-compiler/approx/approx_lexer.ml"
