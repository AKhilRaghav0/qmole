#! /bin/sh
# Generated by configure.
# Run this file to recreate the current configuration.
# Compiler output produced by configure, useful for debugging
# configure, is in config.log if it exists.

debug=false
ac_cs_recheck=false
ac_cs_silent=false
SHELL=${CONFIG_SHELL-/bin/sh}
## --------------------- ##
## M4sh Initialization.  ##
## --------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
  emulate sh
  NULLCMD=:
  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in
  *posix*) set -o posix ;;
esac

fi




# PATH needs CR
# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  echo "#! /bin/sh" >conf$$.sh
  echo  "exit 0"   >>conf$$.sh
  chmod +x conf$$.sh
  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
    PATH_SEPARATOR=';'
  else
    PATH_SEPARATOR=:
  fi
  rm -f conf$$.sh
fi

# Support unset when possible.
if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
  as_unset=unset
else
  as_unset=false
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
as_nl='
'
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
case $0 in
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  { (exit 1); exit 1; }
fi

# Work around bugs in pre-3.0 UWIN ksh.
for as_var in ENV MAIL MAILPATH
do ($as_unset $as_var) >/dev/null 2>&1 && $as_unset $as_var
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
for as_var in \
  LANG LANGUAGE LC_ADDRESS LC_ALL LC_COLLATE LC_CTYPE LC_IDENTIFICATION \
  LC_MEASUREMENT LC_MESSAGES LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER \
  LC_TELEPHONE LC_TIME
do
  if (set +x; test -z "`(eval $as_var=C; export $as_var) 2>&1`"); then
    eval $as_var=C; export $as_var
  else
    ($as_unset $as_var) >/dev/null 2>&1 && $as_unset $as_var
  fi
done

# Required to use basename.
if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi


# Name of the executable.
as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# CDPATH.
$as_unset CDPATH



  as_lineno_1=$LINENO
  as_lineno_2=$LINENO
  test "x$as_lineno_1" != "x$as_lineno_2" &&
  test "x`expr $as_lineno_1 + 1`" = "x$as_lineno_2" || {

  # Create $as_me.lineno as a copy of $as_myself, but with $LINENO
  # uniformly replaced by the line number.  The first 'sed' inserts a
  # line-number line after each line using $LINENO; the second 'sed'
  # does the real work.  The second script uses 'N' to pair each
  # line-number line with the line containing $LINENO, and appends
  # trailing '-' during substitution so that $LINENO is not a special
  # case at line end.
  # (Raja R Harinath suggested sed '=', and Paul Eggert wrote the
  # scripts with optimization help from Paolo Bonzini.  Blame Lee
  # E. McMahon (1931-1989) for sed's syntax.  :-)
  sed -n '
    p
    /[$]LINENO/=
  ' <$as_myself |
    sed '
      s/[$]LINENO.*/&-/
      t lineno
      b
      :lineno
      N
      :loop
      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
      t loop
      s/-\n.*//
    ' >$as_me.lineno &&
  chmod +x "$as_me.lineno" ||
    { echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2
   { (exit 1); exit 1; }; }

  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensitive to this).
  . "./$as_me.lineno"
  # Exit status is that of the last command.
  exit
}


if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in
-n*)
  case `echo 'x\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  *)   ECHO_C='\c';;
  esac;;
*)
  ECHO_N='-n';;
esac

if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir
fi
echo >conf$$.file
if ln -s conf$$.file conf$$ 2>/dev/null; then
  as_ln_s='ln -s'
  # ... but there are two gotchas:
  # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
  # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
  # In both cases, we have to default to `cp -p'.
  ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
    as_ln_s='cp -p'
elif ln conf$$.file conf$$ 2>/dev/null; then
  as_ln_s=ln
else
  as_ln_s='cp -p'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null

if mkdir -p . 2>/dev/null; then
  as_mkdir_p=:
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

if test -x / >/dev/null 2>&1; then
  as_test_x='test -x'
else
  if ls -dL / >/dev/null 2>&1; then
    as_ls_L_option=L
  else
    as_ls_L_option=
  fi
  as_test_x='
    eval sh -c '\''
      if test -d "$1"; then
        test -d "$1/.";
      else
	case $1 in
        -*)set "./$1";;
	esac;
	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in
	???[sx]*):;;*)false;;esac;fi
    '\'' sh
  '
fi
as_executable_p=$as_test_x

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


exec 6>&1

# Save the log message, to keep $[0] and so on meaningful, and to
# report actual input values of CONFIG_FILES etc. instead of their
# values after options handling.
ac_log="
This file was extended by cairo $as_me 1.8.0, which was
generated by GNU Autoconf 2.61.  Invocation command line was

  CONFIG_FILES    = $CONFIG_FILES
  CONFIG_HEADERS  = $CONFIG_HEADERS
  CONFIG_LINKS    = $CONFIG_LINKS
  CONFIG_COMMANDS = $CONFIG_COMMANDS
  $ $0 $@

on `(hostname || uname -n) 2>/dev/null | sed 1q`
"

# Files that config.status was made for.
config_files=" src/cairo.pc cairo-uninstalled.pc:src/cairo-uninstalled.pc.in src/cairo-xlib.pc:src/cairo-features.pc.in cairo-xlib-uninstalled.pc:src/cairo-features-uninstalled.pc.in src/cairo-xlib-xrender.pc:src/cairo-features.pc.in cairo-xlib-xrender-uninstalled.pc:src/cairo-features-uninstalled.pc.in src/cairo-xcb.pc:src/cairo-features.pc.in cairo-xcb-uninstalled.pc:src/cairo-features-uninstalled.pc.in src/cairo-png.pc:src/cairo-features.pc.in cairo-png-uninstalled.pc:src/cairo-features-uninstalled.pc.in src/cairo-ft.pc:src/cairo-features.pc.in cairo-ft-uninstalled.pc:src/cairo-features-uninstalled.pc.in src/cairo-ps.pc:src/cairo-features.pc.in cairo-ps-uninstalled.pc:src/cairo-features-uninstalled.pc.in src/cairo-pdf.pc:src/cairo-features.pc.in cairo-pdf-uninstalled.pc:src/cairo-features-uninstalled.pc.in src/cairo-svg.pc:src/cairo-features.pc.in cairo-svg-uninstalled.pc:src/cairo-features-uninstalled.pc.in Makefile boilerplate/Makefile src/Makefile test/Makefile test/pdiff/Makefile perf/Makefile util/Makefile doc/Makefile doc/public/Makefile"
config_headers=" config.h"
config_commands=" depfiles ./build/Makefile.win32.features ./src/Makefile.am.features ./src/Makefile.win32.features ./boilerplate/Makefile.am.features ./boilerplate/Makefile.win32.features src/cairo-features.h ./src/cairo-supported-features.h ./build/Makefile.win32.features-h"

ac_cs_usage="\
\`$as_me' instantiates files from templates according to the
current configuration.

Usage: $0 [OPTIONS] [FILE]...

  -h, --help       print this help, then exit
  -V, --version    print version number and configuration settings, then exit
  -q, --quiet      do not print progress messages
  -d, --debug      don't remove temporary files
      --recheck    update $as_me by reconfiguring in the same conditions
  --file=FILE[:TEMPLATE]
		   instantiate the configuration file FILE
  --header=FILE[:TEMPLATE]
		   instantiate the configuration header FILE

Configuration files:
$config_files

Configuration headers:
$config_headers

Configuration commands:
$config_commands

Report bugs to <bug-autoconf@gnu.org>."

ac_cs_version="\
cairo config.status 1.8.0
configured by ./configure, generated by GNU Autoconf 2.61,
  with options \"'--enable-xcb' 'CC=/usr/bin/gcc'\"

Copyright (C) 2006 Free Software Foundation, Inc.
This config.status script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it."

ac_pwd='/home/chris/cairo-1.8.0'
srcdir='.'
INSTALL='/usr/bin/install -c'
MKDIR_P='/bin/mkdir -p'
# If no file are specified by the user, then we need to provide default
# value.  By we need to know if files were specified by the user.
ac_need_defaults=:
while test $# != 0
do
  case $1 in
  --*=*)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
    ac_shift=:
    ;;
  *)
    ac_option=$1
    ac_optarg=$2
    ac_shift=shift
    ;;
  esac

  case $ac_option in
  # Handling of the options.
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    ac_cs_recheck=: ;;
  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
    echo "$ac_cs_version"; exit ;;
  --debug | --debu | --deb | --de | --d | -d )
    debug=: ;;
  --file | --fil | --fi | --f )
    $ac_shift
    CONFIG_FILES="$CONFIG_FILES $ac_optarg"
    ac_need_defaults=false;;
  --header | --heade | --head | --hea )
    $ac_shift
    CONFIG_HEADERS="$CONFIG_HEADERS $ac_optarg"
    ac_need_defaults=false;;
  --he | --h)
    # Conflict between --help and --header
    { echo "$as_me: error: ambiguous option: $1
Try \`$0 --help' for more information." >&2
   { (exit 1); exit 1; }; };;
  --help | --hel | -h )
    echo "$ac_cs_usage"; exit ;;
  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil | --si | --s)
    ac_cs_silent=: ;;

  # This is an error.
  -*) { echo "$as_me: error: unrecognized option: $1
Try \`$0 --help' for more information." >&2
   { (exit 1); exit 1; }; } ;;

  *) ac_config_targets="$ac_config_targets $1"
     ac_need_defaults=false ;;

  esac
  shift
done

ac_configure_extra_args=

if $ac_cs_silent; then
  exec 6>/dev/null
  ac_configure_extra_args="$ac_configure_extra_args --silent"
fi

if $ac_cs_recheck; then
  echo "running CONFIG_SHELL=/bin/sh /bin/sh ./configure " '--enable-xcb' 'CC=/usr/bin/gcc' $ac_configure_extra_args " --no-create --no-recursion" >&6
  CONFIG_SHELL=/bin/sh
  export CONFIG_SHELL
  exec /bin/sh "./configure" '--enable-xcb' 'CC=/usr/bin/gcc' $ac_configure_extra_args --no-create --no-recursion
fi

exec 5>>config.log
{
  echo
  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## Running $as_me. ##
_ASBOX
  echo "$ac_log"
} >&5

#
# INIT-COMMANDS
#
AMDEP_TRUE="" ac_aux_dir="build"
CAIRO_MAKEFILE___WIN32='# Generated by configure.  Modify to customize.

CAIRO_HAS_XLIB_SURFACE=0
CAIRO_HAS_XLIB_XRENDER_SURFACE=0
CAIRO_HAS_XCB_SURFACE=0
CAIRO_HAS_QUARTZ_SURFACE=0
CAIRO_HAS_QUARTZ_FONT=0
CAIRO_HAS_QUARTZ_IMAGE_SURFACE=0
CAIRO_HAS_WIN32_SURFACE=1
CAIRO_HAS_WIN32_FONT=1
CAIRO_HAS_OS2_SURFACE=0
CAIRO_HAS_BEOS_SURFACE=0
CAIRO_HAS_PNG_FUNCTIONS=1
CAIRO_HAS_GLITZ_SURFACE=0
CAIRO_HAS_DIRECTFB_SURFACE=0
CAIRO_HAS_FT_FONT=0
CAIRO_HAS_PS_SURFACE=1
CAIRO_HAS_PDF_SURFACE=1
CAIRO_HAS_SVG_SURFACE=1
CAIRO_HAS_TEST_SURFACES=0'
CAIRO_MAKEFILE_cairo_AMAKE='# Generated by configure.  Do not edit.

include $(top_srcdir)/src/Makefile.sources

supported_cairo_headers = $(cairo_headers)
unsupported_cairo_headers =
all_cairo_files = $(all_cairo_headers) $(all_cairo_private) $(all_cairo_sources)
all_cairo_headers = $(cairo_headers)
all_cairo_private = $(cairo_private)
all_cairo_sources = $(cairo_sources)

enabled_cairo_files = $(enabled_cairo_headers) $(enabled_cairo_private) $(enabled_cairo_sources)
enabled_cairo_headers = $(cairo_headers)
enabled_cairo_private = $(cairo_private)
enabled_cairo_sources = $(cairo_sources)

all_cairo_pkgconf = cairo.pc
enabled_cairo_pkgconf = cairo.pc

supported_cairo_headers += $(cairo_xlib_headers)
all_cairo_headers += $(cairo_xlib_headers)
all_cairo_private += $(cairo_xlib_private)
all_cairo_sources += $(cairo_xlib_sources)
if CAIRO_HAS_XLIB_SURFACE
enabled_cairo_headers += $(cairo_xlib_headers)
enabled_cairo_private += $(cairo_xlib_private)
enabled_cairo_sources += $(cairo_xlib_sources)
endif
all_cairo_pkgconf += cairo-xlib.pc
if CAIRO_HAS_XLIB_SURFACE
enabled_cairo_pkgconf += cairo-xlib.pc
endif

supported_cairo_headers += $(cairo_xlib_xrender_headers)
all_cairo_headers += $(cairo_xlib_xrender_headers)
all_cairo_private += $(cairo_xlib_xrender_private)
all_cairo_sources += $(cairo_xlib_xrender_sources)
if CAIRO_HAS_XLIB_XRENDER_SURFACE
enabled_cairo_headers += $(cairo_xlib_xrender_headers)
enabled_cairo_private += $(cairo_xlib_xrender_private)
enabled_cairo_sources += $(cairo_xlib_xrender_sources)
endif
all_cairo_pkgconf += cairo-xlib-xrender.pc
if CAIRO_HAS_XLIB_XRENDER_SURFACE
enabled_cairo_pkgconf += cairo-xlib-xrender.pc
endif

unsupported_cairo_headers += $(cairo_xcb_headers)
all_cairo_headers += $(cairo_xcb_headers)
all_cairo_private += $(cairo_xcb_private)
all_cairo_sources += $(cairo_xcb_sources)
if CAIRO_HAS_XCB_SURFACE
enabled_cairo_headers += $(cairo_xcb_headers)
enabled_cairo_private += $(cairo_xcb_private)
enabled_cairo_sources += $(cairo_xcb_sources)
endif
all_cairo_pkgconf += cairo-xcb.pc
if CAIRO_HAS_XCB_SURFACE
enabled_cairo_pkgconf += cairo-xcb.pc
endif

supported_cairo_headers += $(cairo_quartz_headers)
all_cairo_headers += $(cairo_quartz_headers)
all_cairo_private += $(cairo_quartz_private)
all_cairo_sources += $(cairo_quartz_sources)
if CAIRO_HAS_QUARTZ_SURFACE
enabled_cairo_headers += $(cairo_quartz_headers)
enabled_cairo_private += $(cairo_quartz_private)
enabled_cairo_sources += $(cairo_quartz_sources)
endif
all_cairo_pkgconf += cairo-quartz.pc
if CAIRO_HAS_QUARTZ_SURFACE
enabled_cairo_pkgconf += cairo-quartz.pc
endif

supported_cairo_headers += $(cairo_quartz_font_headers)
all_cairo_headers += $(cairo_quartz_font_headers)
all_cairo_private += $(cairo_quartz_font_private)
all_cairo_sources += $(cairo_quartz_font_sources)
if CAIRO_HAS_QUARTZ_FONT
enabled_cairo_headers += $(cairo_quartz_font_headers)
enabled_cairo_private += $(cairo_quartz_font_private)
enabled_cairo_sources += $(cairo_quartz_font_sources)
endif
all_cairo_pkgconf += cairo-quartz-font.pc
if CAIRO_HAS_QUARTZ_FONT
enabled_cairo_pkgconf += cairo-quartz-font.pc
endif

unsupported_cairo_headers += $(cairo_quartz_image_headers)
all_cairo_headers += $(cairo_quartz_image_headers)
all_cairo_private += $(cairo_quartz_image_private)
all_cairo_sources += $(cairo_quartz_image_sources)
if CAIRO_HAS_QUARTZ_IMAGE_SURFACE
enabled_cairo_headers += $(cairo_quartz_image_headers)
enabled_cairo_private += $(cairo_quartz_image_private)
enabled_cairo_sources += $(cairo_quartz_image_sources)
endif
all_cairo_pkgconf += cairo-quartz-image.pc
if CAIRO_HAS_QUARTZ_IMAGE_SURFACE
enabled_cairo_pkgconf += cairo-quartz-image.pc
endif

supported_cairo_headers += $(cairo_win32_headers)
all_cairo_headers += $(cairo_win32_headers)
all_cairo_private += $(cairo_win32_private)
all_cairo_sources += $(cairo_win32_sources)
if CAIRO_HAS_WIN32_SURFACE
enabled_cairo_headers += $(cairo_win32_headers)
enabled_cairo_private += $(cairo_win32_private)
enabled_cairo_sources += $(cairo_win32_sources)
endif
all_cairo_pkgconf += cairo-win32.pc
if CAIRO_HAS_WIN32_SURFACE
enabled_cairo_pkgconf += cairo-win32.pc
endif

supported_cairo_headers += $(cairo_win32_font_headers)
all_cairo_headers += $(cairo_win32_font_headers)
all_cairo_private += $(cairo_win32_font_private)
all_cairo_sources += $(cairo_win32_font_sources)
if CAIRO_HAS_WIN32_FONT
enabled_cairo_headers += $(cairo_win32_font_headers)
enabled_cairo_private += $(cairo_win32_font_private)
enabled_cairo_sources += $(cairo_win32_font_sources)
endif
all_cairo_pkgconf += cairo-win32-font.pc
if CAIRO_HAS_WIN32_FONT
enabled_cairo_pkgconf += cairo-win32-font.pc
endif

unsupported_cairo_headers += $(cairo_os2_headers)
all_cairo_headers += $(cairo_os2_headers)
all_cairo_private += $(cairo_os2_private)
all_cairo_sources += $(cairo_os2_sources)
if CAIRO_HAS_OS2_SURFACE
enabled_cairo_headers += $(cairo_os2_headers)
enabled_cairo_private += $(cairo_os2_private)
enabled_cairo_sources += $(cairo_os2_sources)
endif
all_cairo_pkgconf += cairo-os2.pc
if CAIRO_HAS_OS2_SURFACE
enabled_cairo_pkgconf += cairo-os2.pc
endif

unsupported_cairo_headers += $(cairo_beos_headers)
all_cairo_headers += $(cairo_beos_headers)
all_cairo_private += $(cairo_beos_private)
all_cairo_sources += $(cairo_beos_sources)
if CAIRO_HAS_BEOS_SURFACE
enabled_cairo_headers += $(cairo_beos_headers)
enabled_cairo_private += $(cairo_beos_private)
enabled_cairo_sources += $(cairo_beos_sources)
endif
all_cairo_pkgconf += cairo-beos.pc
if CAIRO_HAS_BEOS_SURFACE
enabled_cairo_pkgconf += cairo-beos.pc
endif

supported_cairo_headers += $(cairo_png_headers)
all_cairo_headers += $(cairo_png_headers)
all_cairo_private += $(cairo_png_private)
all_cairo_sources += $(cairo_png_sources)
if CAIRO_HAS_PNG_FUNCTIONS
enabled_cairo_headers += $(cairo_png_headers)
enabled_cairo_private += $(cairo_png_private)
enabled_cairo_sources += $(cairo_png_sources)
endif
all_cairo_pkgconf += cairo-png.pc
if CAIRO_HAS_PNG_FUNCTIONS
enabled_cairo_pkgconf += cairo-png.pc
endif

unsupported_cairo_headers += $(cairo_glitz_headers)
all_cairo_headers += $(cairo_glitz_headers)
all_cairo_private += $(cairo_glitz_private)
all_cairo_sources += $(cairo_glitz_sources)
if CAIRO_HAS_GLITZ_SURFACE
enabled_cairo_headers += $(cairo_glitz_headers)
enabled_cairo_private += $(cairo_glitz_private)
enabled_cairo_sources += $(cairo_glitz_sources)
endif
all_cairo_pkgconf += cairo-glitz.pc
if CAIRO_HAS_GLITZ_SURFACE
enabled_cairo_pkgconf += cairo-glitz.pc
endif

unsupported_cairo_headers += $(cairo_directfb_headers)
all_cairo_headers += $(cairo_directfb_headers)
all_cairo_private += $(cairo_directfb_private)
all_cairo_sources += $(cairo_directfb_sources)
if CAIRO_HAS_DIRECTFB_SURFACE
enabled_cairo_headers += $(cairo_directfb_headers)
enabled_cairo_private += $(cairo_directfb_private)
enabled_cairo_sources += $(cairo_directfb_sources)
endif
all_cairo_pkgconf += cairo-directfb.pc
if CAIRO_HAS_DIRECTFB_SURFACE
enabled_cairo_pkgconf += cairo-directfb.pc
endif

supported_cairo_headers += $(cairo_ft_headers)
all_cairo_headers += $(cairo_ft_headers)
all_cairo_private += $(cairo_ft_private)
all_cairo_sources += $(cairo_ft_sources)
if CAIRO_HAS_FT_FONT
enabled_cairo_headers += $(cairo_ft_headers)
enabled_cairo_private += $(cairo_ft_private)
enabled_cairo_sources += $(cairo_ft_sources)
endif
all_cairo_pkgconf += cairo-ft.pc
if CAIRO_HAS_FT_FONT
enabled_cairo_pkgconf += cairo-ft.pc
endif

supported_cairo_headers += $(cairo_ps_headers)
all_cairo_headers += $(cairo_ps_headers)
all_cairo_private += $(cairo_ps_private)
all_cairo_sources += $(cairo_ps_sources)
if CAIRO_HAS_PS_SURFACE
enabled_cairo_headers += $(cairo_ps_headers)
enabled_cairo_private += $(cairo_ps_private)
enabled_cairo_sources += $(cairo_ps_sources)
endif
all_cairo_pkgconf += cairo-ps.pc
if CAIRO_HAS_PS_SURFACE
enabled_cairo_pkgconf += cairo-ps.pc
endif

supported_cairo_headers += $(cairo_pdf_headers)
all_cairo_headers += $(cairo_pdf_headers)
all_cairo_private += $(cairo_pdf_private)
all_cairo_sources += $(cairo_pdf_sources)
if CAIRO_HAS_PDF_SURFACE
enabled_cairo_headers += $(cairo_pdf_headers)
enabled_cairo_private += $(cairo_pdf_private)
enabled_cairo_sources += $(cairo_pdf_sources)
endif
all_cairo_pkgconf += cairo-pdf.pc
if CAIRO_HAS_PDF_SURFACE
enabled_cairo_pkgconf += cairo-pdf.pc
endif

supported_cairo_headers += $(cairo_svg_headers)
all_cairo_headers += $(cairo_svg_headers)
all_cairo_private += $(cairo_svg_private)
all_cairo_sources += $(cairo_svg_sources)
if CAIRO_HAS_SVG_SURFACE
enabled_cairo_headers += $(cairo_svg_headers)
enabled_cairo_private += $(cairo_svg_private)
enabled_cairo_sources += $(cairo_svg_sources)
endif
all_cairo_pkgconf += cairo-svg.pc
if CAIRO_HAS_SVG_SURFACE
enabled_cairo_pkgconf += cairo-svg.pc
endif

all_cairo_private += $(cairo_test_surfaces_private) $(cairo_test_surfaces_headers)
all_cairo_sources += $(cairo_test_surfaces_sources)
if CAIRO_HAS_TEST_SURFACES
enabled_cairo_private += $(cairo_test_surfaces_private) $(cairo_test_surfaces_headers)
enabled_cairo_sources += $(cairo_test_surfaces_sources)
endif

supported_cairo_headers += $(cairo_image_headers)
all_cairo_headers += $(cairo_image_headers)
all_cairo_private += $(cairo_image_private)
all_cairo_sources += $(cairo_image_sources)
enabled_cairo_headers += $(cairo_image_headers)
enabled_cairo_private += $(cairo_image_private)
enabled_cairo_sources += $(cairo_image_sources)

supported_cairo_headers += $(cairo_user_headers)
all_cairo_headers += $(cairo_user_headers)
all_cairo_private += $(cairo_user_private)
all_cairo_sources += $(cairo_user_sources)
enabled_cairo_headers += $(cairo_user_headers)
enabled_cairo_private += $(cairo_user_private)
enabled_cairo_sources += $(cairo_user_sources)'
CAIRO_MAKEFILE_cairo_WIN32='# Generated by configure.  Do not edit.

ifeq ($(top_srcdir),)
include Makefile.sources
else
include $(top_srcdir)/src/Makefile.sources
endif

supported_cairo_headers = $(cairo_headers)
unsupported_cairo_headers =
all_cairo_files = $(all_cairo_headers) $(all_cairo_private) $(all_cairo_sources)
all_cairo_headers = $(cairo_headers)
all_cairo_private = $(cairo_private)
all_cairo_sources = $(cairo_sources)

enabled_cairo_files = $(enabled_cairo_headers) $(enabled_cairo_private) $(enabled_cairo_sources)
enabled_cairo_headers = $(cairo_headers)
enabled_cairo_private = $(cairo_private)
enabled_cairo_sources = $(cairo_sources)

all_cairo_pkgconf = cairo.pc
enabled_cairo_pkgconf = cairo.pc

supported_cairo_headers += $(cairo_xlib_headers)
all_cairo_headers += $(cairo_xlib_headers)
all_cairo_private += $(cairo_xlib_private)
all_cairo_sources += $(cairo_xlib_sources)
ifeq ($(CAIRO_HAS_XLIB_SURFACE),1)
enabled_cairo_headers += $(cairo_xlib_headers)
enabled_cairo_private += $(cairo_xlib_private)
enabled_cairo_sources += $(cairo_xlib_sources)
endif
all_cairo_pkgconf += cairo-xlib.pc
ifeq ($(CAIRO_HAS_XLIB_SURFACE),1)
enabled_cairo_pkgconf += cairo-xlib.pc
endif

supported_cairo_headers += $(cairo_xlib_xrender_headers)
all_cairo_headers += $(cairo_xlib_xrender_headers)
all_cairo_private += $(cairo_xlib_xrender_private)
all_cairo_sources += $(cairo_xlib_xrender_sources)
ifeq ($(CAIRO_HAS_XLIB_XRENDER_SURFACE),1)
enabled_cairo_headers += $(cairo_xlib_xrender_headers)
enabled_cairo_private += $(cairo_xlib_xrender_private)
enabled_cairo_sources += $(cairo_xlib_xrender_sources)
endif
all_cairo_pkgconf += cairo-xlib-xrender.pc
ifeq ($(CAIRO_HAS_XLIB_XRENDER_SURFACE),1)
enabled_cairo_pkgconf += cairo-xlib-xrender.pc
endif

unsupported_cairo_headers += $(cairo_xcb_headers)
all_cairo_headers += $(cairo_xcb_headers)
all_cairo_private += $(cairo_xcb_private)
all_cairo_sources += $(cairo_xcb_sources)
ifeq ($(CAIRO_HAS_XCB_SURFACE),1)
enabled_cairo_headers += $(cairo_xcb_headers)
enabled_cairo_private += $(cairo_xcb_private)
enabled_cairo_sources += $(cairo_xcb_sources)
endif
all_cairo_pkgconf += cairo-xcb.pc
ifeq ($(CAIRO_HAS_XCB_SURFACE),1)
enabled_cairo_pkgconf += cairo-xcb.pc
endif

supported_cairo_headers += $(cairo_quartz_headers)
all_cairo_headers += $(cairo_quartz_headers)
all_cairo_private += $(cairo_quartz_private)
all_cairo_sources += $(cairo_quartz_sources)
ifeq ($(CAIRO_HAS_QUARTZ_SURFACE),1)
enabled_cairo_headers += $(cairo_quartz_headers)
enabled_cairo_private += $(cairo_quartz_private)
enabled_cairo_sources += $(cairo_quartz_sources)
endif
all_cairo_pkgconf += cairo-quartz.pc
ifeq ($(CAIRO_HAS_QUARTZ_SURFACE),1)
enabled_cairo_pkgconf += cairo-quartz.pc
endif

supported_cairo_headers += $(cairo_quartz_font_headers)
all_cairo_headers += $(cairo_quartz_font_headers)
all_cairo_private += $(cairo_quartz_font_private)
all_cairo_sources += $(cairo_quartz_font_sources)
ifeq ($(CAIRO_HAS_QUARTZ_FONT),1)
enabled_cairo_headers += $(cairo_quartz_font_headers)
enabled_cairo_private += $(cairo_quartz_font_private)
enabled_cairo_sources += $(cairo_quartz_font_sources)
endif
all_cairo_pkgconf += cairo-quartz-font.pc
ifeq ($(CAIRO_HAS_QUARTZ_FONT),1)
enabled_cairo_pkgconf += cairo-quartz-font.pc
endif

unsupported_cairo_headers += $(cairo_quartz_image_headers)
all_cairo_headers += $(cairo_quartz_image_headers)
all_cairo_private += $(cairo_quartz_image_private)
all_cairo_sources += $(cairo_quartz_image_sources)
ifeq ($(CAIRO_HAS_QUARTZ_IMAGE_SURFACE),1)
enabled_cairo_headers += $(cairo_quartz_image_headers)
enabled_cairo_private += $(cairo_quartz_image_private)
enabled_cairo_sources += $(cairo_quartz_image_sources)
endif
all_cairo_pkgconf += cairo-quartz-image.pc
ifeq ($(CAIRO_HAS_QUARTZ_IMAGE_SURFACE),1)
enabled_cairo_pkgconf += cairo-quartz-image.pc
endif

supported_cairo_headers += $(cairo_win32_headers)
all_cairo_headers += $(cairo_win32_headers)
all_cairo_private += $(cairo_win32_private)
all_cairo_sources += $(cairo_win32_sources)
ifeq ($(CAIRO_HAS_WIN32_SURFACE),1)
enabled_cairo_headers += $(cairo_win32_headers)
enabled_cairo_private += $(cairo_win32_private)
enabled_cairo_sources += $(cairo_win32_sources)
endif
all_cairo_pkgconf += cairo-win32.pc
ifeq ($(CAIRO_HAS_WIN32_SURFACE),1)
enabled_cairo_pkgconf += cairo-win32.pc
endif

supported_cairo_headers += $(cairo_win32_font_headers)
all_cairo_headers += $(cairo_win32_font_headers)
all_cairo_private += $(cairo_win32_font_private)
all_cairo_sources += $(cairo_win32_font_sources)
ifeq ($(CAIRO_HAS_WIN32_FONT),1)
enabled_cairo_headers += $(cairo_win32_font_headers)
enabled_cairo_private += $(cairo_win32_font_private)
enabled_cairo_sources += $(cairo_win32_font_sources)
endif
all_cairo_pkgconf += cairo-win32-font.pc
ifeq ($(CAIRO_HAS_WIN32_FONT),1)
enabled_cairo_pkgconf += cairo-win32-font.pc
endif

unsupported_cairo_headers += $(cairo_os2_headers)
all_cairo_headers += $(cairo_os2_headers)
all_cairo_private += $(cairo_os2_private)
all_cairo_sources += $(cairo_os2_sources)
ifeq ($(CAIRO_HAS_OS2_SURFACE),1)
enabled_cairo_headers += $(cairo_os2_headers)
enabled_cairo_private += $(cairo_os2_private)
enabled_cairo_sources += $(cairo_os2_sources)
endif
all_cairo_pkgconf += cairo-os2.pc
ifeq ($(CAIRO_HAS_OS2_SURFACE),1)
enabled_cairo_pkgconf += cairo-os2.pc
endif

unsupported_cairo_headers += $(cairo_beos_headers)
all_cairo_headers += $(cairo_beos_headers)
all_cairo_private += $(cairo_beos_private)
all_cairo_sources += $(cairo_beos_sources)
ifeq ($(CAIRO_HAS_BEOS_SURFACE),1)
enabled_cairo_headers += $(cairo_beos_headers)
enabled_cairo_private += $(cairo_beos_private)
enabled_cairo_sources += $(cairo_beos_sources)
endif
all_cairo_pkgconf += cairo-beos.pc
ifeq ($(CAIRO_HAS_BEOS_SURFACE),1)
enabled_cairo_pkgconf += cairo-beos.pc
endif

supported_cairo_headers += $(cairo_png_headers)
all_cairo_headers += $(cairo_png_headers)
all_cairo_private += $(cairo_png_private)
all_cairo_sources += $(cairo_png_sources)
ifeq ($(CAIRO_HAS_PNG_FUNCTIONS),1)
enabled_cairo_headers += $(cairo_png_headers)
enabled_cairo_private += $(cairo_png_private)
enabled_cairo_sources += $(cairo_png_sources)
endif
all_cairo_pkgconf += cairo-png.pc
ifeq ($(CAIRO_HAS_PNG_FUNCTIONS),1)
enabled_cairo_pkgconf += cairo-png.pc
endif

unsupported_cairo_headers += $(cairo_glitz_headers)
all_cairo_headers += $(cairo_glitz_headers)
all_cairo_private += $(cairo_glitz_private)
all_cairo_sources += $(cairo_glitz_sources)
ifeq ($(CAIRO_HAS_GLITZ_SURFACE),1)
enabled_cairo_headers += $(cairo_glitz_headers)
enabled_cairo_private += $(cairo_glitz_private)
enabled_cairo_sources += $(cairo_glitz_sources)
endif
all_cairo_pkgconf += cairo-glitz.pc
ifeq ($(CAIRO_HAS_GLITZ_SURFACE),1)
enabled_cairo_pkgconf += cairo-glitz.pc
endif

unsupported_cairo_headers += $(cairo_directfb_headers)
all_cairo_headers += $(cairo_directfb_headers)
all_cairo_private += $(cairo_directfb_private)
all_cairo_sources += $(cairo_directfb_sources)
ifeq ($(CAIRO_HAS_DIRECTFB_SURFACE),1)
enabled_cairo_headers += $(cairo_directfb_headers)
enabled_cairo_private += $(cairo_directfb_private)
enabled_cairo_sources += $(cairo_directfb_sources)
endif
all_cairo_pkgconf += cairo-directfb.pc
ifeq ($(CAIRO_HAS_DIRECTFB_SURFACE),1)
enabled_cairo_pkgconf += cairo-directfb.pc
endif

supported_cairo_headers += $(cairo_ft_headers)
all_cairo_headers += $(cairo_ft_headers)
all_cairo_private += $(cairo_ft_private)
all_cairo_sources += $(cairo_ft_sources)
ifeq ($(CAIRO_HAS_FT_FONT),1)
enabled_cairo_headers += $(cairo_ft_headers)
enabled_cairo_private += $(cairo_ft_private)
enabled_cairo_sources += $(cairo_ft_sources)
endif
all_cairo_pkgconf += cairo-ft.pc
ifeq ($(CAIRO_HAS_FT_FONT),1)
enabled_cairo_pkgconf += cairo-ft.pc
endif

supported_cairo_headers += $(cairo_ps_headers)
all_cairo_headers += $(cairo_ps_headers)
all_cairo_private += $(cairo_ps_private)
all_cairo_sources += $(cairo_ps_sources)
ifeq ($(CAIRO_HAS_PS_SURFACE),1)
enabled_cairo_headers += $(cairo_ps_headers)
enabled_cairo_private += $(cairo_ps_private)
enabled_cairo_sources += $(cairo_ps_sources)
endif
all_cairo_pkgconf += cairo-ps.pc
ifeq ($(CAIRO_HAS_PS_SURFACE),1)
enabled_cairo_pkgconf += cairo-ps.pc
endif

supported_cairo_headers += $(cairo_pdf_headers)
all_cairo_headers += $(cairo_pdf_headers)
all_cairo_private += $(cairo_pdf_private)
all_cairo_sources += $(cairo_pdf_sources)
ifeq ($(CAIRO_HAS_PDF_SURFACE),1)
enabled_cairo_headers += $(cairo_pdf_headers)
enabled_cairo_private += $(cairo_pdf_private)
enabled_cairo_sources += $(cairo_pdf_sources)
endif
all_cairo_pkgconf += cairo-pdf.pc
ifeq ($(CAIRO_HAS_PDF_SURFACE),1)
enabled_cairo_pkgconf += cairo-pdf.pc
endif

supported_cairo_headers += $(cairo_svg_headers)
all_cairo_headers += $(cairo_svg_headers)
all_cairo_private += $(cairo_svg_private)
all_cairo_sources += $(cairo_svg_sources)
ifeq ($(CAIRO_HAS_SVG_SURFACE),1)
enabled_cairo_headers += $(cairo_svg_headers)
enabled_cairo_private += $(cairo_svg_private)
enabled_cairo_sources += $(cairo_svg_sources)
endif
all_cairo_pkgconf += cairo-svg.pc
ifeq ($(CAIRO_HAS_SVG_SURFACE),1)
enabled_cairo_pkgconf += cairo-svg.pc
endif

all_cairo_private += $(cairo_test_surfaces_private) $(cairo_test_surfaces_headers)
all_cairo_sources += $(cairo_test_surfaces_sources)
ifeq ($(CAIRO_HAS_TEST_SURFACES),1)
enabled_cairo_private += $(cairo_test_surfaces_private) $(cairo_test_surfaces_headers)
enabled_cairo_sources += $(cairo_test_surfaces_sources)
endif

supported_cairo_headers += $(cairo_image_headers)
all_cairo_headers += $(cairo_image_headers)
all_cairo_private += $(cairo_image_private)
all_cairo_sources += $(cairo_image_sources)
enabled_cairo_headers += $(cairo_image_headers)
enabled_cairo_private += $(cairo_image_private)
enabled_cairo_sources += $(cairo_image_sources)

supported_cairo_headers += $(cairo_user_headers)
all_cairo_headers += $(cairo_user_headers)
all_cairo_private += $(cairo_user_private)
all_cairo_sources += $(cairo_user_sources)
enabled_cairo_headers += $(cairo_user_headers)
enabled_cairo_private += $(cairo_user_private)
enabled_cairo_sources += $(cairo_user_sources)'
CAIRO_MAKEFILE_cairo_boilerplate_AMAKE='# Generated by configure.  Do not edit.

include $(top_srcdir)/boilerplate/Makefile.sources

supported_cairo_boilerplate_headers = $(cairo_boilerplate_headers)
unsupported_cairo_boilerplate_headers =
all_cairo_boilerplate_files = $(all_cairo_boilerplate_headers) $(all_cairo_boilerplate_private) $(all_cairo_boilerplate_sources)
all_cairo_boilerplate_headers = $(cairo_boilerplate_headers)
all_cairo_boilerplate_private = $(cairo_boilerplate_private)
all_cairo_boilerplate_sources = $(cairo_boilerplate_sources)

enabled_cairo_boilerplate_files = $(enabled_cairo_boilerplate_headers) $(enabled_cairo_boilerplate_private) $(enabled_cairo_boilerplate_sources)
enabled_cairo_boilerplate_headers = $(cairo_boilerplate_headers)
enabled_cairo_boilerplate_private = $(cairo_boilerplate_private)
enabled_cairo_boilerplate_sources = $(cairo_boilerplate_sources)


supported_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_xlib_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_xlib_sources)
if CAIRO_HAS_XLIB_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_xlib_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_xlib_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_xrender_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_xrender_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_xlib_xrender_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_xlib_xrender_sources)
if CAIRO_HAS_XLIB_XRENDER_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_xrender_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_xlib_xrender_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_xlib_xrender_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_xcb_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_xcb_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_xcb_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_xcb_sources)
if CAIRO_HAS_XCB_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_xcb_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_xcb_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_xcb_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_quartz_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_quartz_sources)
if CAIRO_HAS_QUARTZ_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_quartz_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_quartz_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_font_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_font_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_quartz_font_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_quartz_font_sources)
if CAIRO_HAS_QUARTZ_FONT
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_font_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_quartz_font_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_quartz_font_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_image_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_image_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_quartz_image_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_quartz_image_sources)
if CAIRO_HAS_QUARTZ_IMAGE_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_image_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_quartz_image_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_quartz_image_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_win32_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_win32_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_win32_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_win32_sources)
if CAIRO_HAS_WIN32_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_win32_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_win32_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_win32_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_win32_font_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_win32_font_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_win32_font_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_win32_font_sources)
if CAIRO_HAS_WIN32_FONT
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_win32_font_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_win32_font_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_win32_font_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_os2_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_os2_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_os2_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_os2_sources)
if CAIRO_HAS_OS2_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_os2_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_os2_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_os2_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_beos_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_beos_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_beos_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_beos_sources)
if CAIRO_HAS_BEOS_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_beos_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_beos_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_beos_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_png_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_png_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_png_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_png_sources)
if CAIRO_HAS_PNG_FUNCTIONS
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_png_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_png_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_png_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_glitz_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_glitz_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_glitz_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_glitz_sources)
if CAIRO_HAS_GLITZ_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_glitz_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_glitz_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_glitz_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_directfb_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_directfb_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_directfb_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_directfb_sources)
if CAIRO_HAS_DIRECTFB_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_directfb_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_directfb_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_directfb_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_ft_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_ft_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_ft_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_ft_sources)
if CAIRO_HAS_FT_FONT
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_ft_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_ft_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_ft_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_ps_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_ps_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_ps_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_ps_sources)
if CAIRO_HAS_PS_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_ps_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_ps_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_ps_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_pdf_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_pdf_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_pdf_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_pdf_sources)
if CAIRO_HAS_PDF_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_pdf_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_pdf_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_pdf_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_svg_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_svg_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_svg_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_svg_sources)
if CAIRO_HAS_SVG_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_svg_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_svg_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_svg_sources)
endif

all_cairo_boilerplate_private += $(cairo_boilerplate_test_surfaces_private) $(cairo_boilerplate_test_surfaces_headers)
all_cairo_boilerplate_sources += $(cairo_boilerplate_test_surfaces_sources)
if CAIRO_HAS_TEST_SURFACES
enabled_cairo_boilerplate_private += $(cairo_boilerplate_test_surfaces_private) $(cairo_boilerplate_test_surfaces_headers)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_test_surfaces_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_image_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_image_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_image_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_image_sources)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_image_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_image_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_image_sources)

supported_cairo_boilerplate_headers += $(cairo_boilerplate_user_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_user_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_user_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_user_sources)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_user_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_user_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_user_sources)'
CAIRO_MAKEFILE_cairo_boilerplate_WIN32='# Generated by configure.  Do not edit.

ifeq ($(top_srcdir),)
include Makefile.sources
else
include $(top_srcdir)/boilerplate/Makefile.sources
endif

supported_cairo_boilerplate_headers = $(cairo_boilerplate_headers)
unsupported_cairo_boilerplate_headers =
all_cairo_boilerplate_files = $(all_cairo_boilerplate_headers) $(all_cairo_boilerplate_private) $(all_cairo_boilerplate_sources)
all_cairo_boilerplate_headers = $(cairo_boilerplate_headers)
all_cairo_boilerplate_private = $(cairo_boilerplate_private)
all_cairo_boilerplate_sources = $(cairo_boilerplate_sources)

enabled_cairo_boilerplate_files = $(enabled_cairo_boilerplate_headers) $(enabled_cairo_boilerplate_private) $(enabled_cairo_boilerplate_sources)
enabled_cairo_boilerplate_headers = $(cairo_boilerplate_headers)
enabled_cairo_boilerplate_private = $(cairo_boilerplate_private)
enabled_cairo_boilerplate_sources = $(cairo_boilerplate_sources)


supported_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_xlib_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_xlib_sources)
ifeq ($(CAIRO_HAS_XLIB_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_xlib_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_xlib_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_xrender_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_xrender_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_xlib_xrender_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_xlib_xrender_sources)
ifeq ($(CAIRO_HAS_XLIB_XRENDER_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_xrender_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_xlib_xrender_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_xlib_xrender_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_xcb_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_xcb_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_xcb_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_xcb_sources)
ifeq ($(CAIRO_HAS_XCB_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_xcb_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_xcb_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_xcb_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_quartz_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_quartz_sources)
ifeq ($(CAIRO_HAS_QUARTZ_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_quartz_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_quartz_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_font_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_font_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_quartz_font_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_quartz_font_sources)
ifeq ($(CAIRO_HAS_QUARTZ_FONT),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_font_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_quartz_font_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_quartz_font_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_image_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_image_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_quartz_image_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_quartz_image_sources)
ifeq ($(CAIRO_HAS_QUARTZ_IMAGE_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_image_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_quartz_image_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_quartz_image_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_win32_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_win32_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_win32_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_win32_sources)
ifeq ($(CAIRO_HAS_WIN32_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_win32_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_win32_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_win32_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_win32_font_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_win32_font_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_win32_font_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_win32_font_sources)
ifeq ($(CAIRO_HAS_WIN32_FONT),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_win32_font_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_win32_font_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_win32_font_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_os2_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_os2_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_os2_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_os2_sources)
ifeq ($(CAIRO_HAS_OS2_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_os2_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_os2_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_os2_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_beos_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_beos_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_beos_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_beos_sources)
ifeq ($(CAIRO_HAS_BEOS_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_beos_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_beos_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_beos_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_png_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_png_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_png_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_png_sources)
ifeq ($(CAIRO_HAS_PNG_FUNCTIONS),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_png_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_png_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_png_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_glitz_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_glitz_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_glitz_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_glitz_sources)
ifeq ($(CAIRO_HAS_GLITZ_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_glitz_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_glitz_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_glitz_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_directfb_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_directfb_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_directfb_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_directfb_sources)
ifeq ($(CAIRO_HAS_DIRECTFB_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_directfb_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_directfb_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_directfb_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_ft_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_ft_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_ft_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_ft_sources)
ifeq ($(CAIRO_HAS_FT_FONT),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_ft_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_ft_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_ft_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_ps_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_ps_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_ps_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_ps_sources)
ifeq ($(CAIRO_HAS_PS_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_ps_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_ps_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_ps_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_pdf_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_pdf_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_pdf_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_pdf_sources)
ifeq ($(CAIRO_HAS_PDF_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_pdf_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_pdf_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_pdf_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_svg_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_svg_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_svg_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_svg_sources)
ifeq ($(CAIRO_HAS_SVG_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_svg_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_svg_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_svg_sources)
endif

all_cairo_boilerplate_private += $(cairo_boilerplate_test_surfaces_private) $(cairo_boilerplate_test_surfaces_headers)
all_cairo_boilerplate_sources += $(cairo_boilerplate_test_surfaces_sources)
ifeq ($(CAIRO_HAS_TEST_SURFACES),1)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_test_surfaces_private) $(cairo_boilerplate_test_surfaces_headers)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_test_surfaces_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_image_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_image_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_image_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_image_sources)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_image_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_image_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_image_sources)

supported_cairo_boilerplate_headers += $(cairo_boilerplate_user_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_user_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_user_private)
all_cairo_boilerplate_sources += $(cairo_boilerplate_user_sources)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_user_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_user_private)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_user_sources)'
	CAIRO_FEATURES=' CAIRO_HAS_XLIB_SURFACE CAIRO_HAS_XLIB_XRENDER_SURFACE CAIRO_HAS_XCB_SURFACE CAIRO_HAS_PNG_FUNCTIONS CAIRO_HAS_FT_FONT CAIRO_HAS_PS_SURFACE CAIRO_HAS_PDF_SURFACE CAIRO_HAS_SVG_SURFACE CAIRO_HAS_IMAGE_SURFACE CAIRO_HAS_USER_FONT'
	CAIRO_NO_FEATURES=' CAIRO_HAS_QUARTZ_SURFACE CAIRO_HAS_QUARTZ_FONT CAIRO_HAS_WIN32_SURFACE CAIRO_HAS_WIN32_FONT'

	CAIRO_SUPPORTED_FEATURES=' CAIRO_HAS_XLIB_SURFACE CAIRO_HAS_XLIB_XRENDER_SURFACE CAIRO_HAS_QUARTZ_SURFACE CAIRO_HAS_QUARTZ_FONT CAIRO_HAS_WIN32_SURFACE CAIRO_HAS_WIN32_FONT CAIRO_HAS_PNG_FUNCTIONS CAIRO_HAS_FT_FONT CAIRO_HAS_PS_SURFACE CAIRO_HAS_PDF_SURFACE CAIRO_HAS_SVG_SURFACE CAIRO_HAS_IMAGE_SURFACE CAIRO_HAS_USER_FONT'

CAIRO_MAKEFILE_win32_features_h_WIN32='# Generated by configure.  Do not edit.

src/cairo-features.h: build/Makefile.win32.features
	@echo "Generating src/cairo-features.h"
	@echo "/* Generated by Makefile.win32.  Do not edit. */" > src/cairo-features.h
	@echo "#ifndef CAIRO_FEATURES_H" >> src/cairo-features.h
	@echo "#define CAIRO_FEATURES_H 1" >> src/cairo-features.h
ifeq ($(CAIRO_HAS_XLIB_SURFACE),1)
	@echo "#define CAIRO_HAS_XLIB_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_XLIB_XRENDER_SURFACE),1)
	@echo "#define CAIRO_HAS_XLIB_XRENDER_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_XCB_SURFACE),1)
	@echo "#define CAIRO_HAS_XCB_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_QUARTZ_SURFACE),1)
	@echo "#define CAIRO_HAS_QUARTZ_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_QUARTZ_FONT),1)
	@echo "#define CAIRO_HAS_QUARTZ_FONT 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_QUARTZ_IMAGE_SURFACE),1)
	@echo "#define CAIRO_HAS_QUARTZ_IMAGE_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_WIN32_SURFACE),1)
	@echo "#define CAIRO_HAS_WIN32_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_WIN32_FONT),1)
	@echo "#define CAIRO_HAS_WIN32_FONT 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_OS2_SURFACE),1)
	@echo "#define CAIRO_HAS_OS2_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_BEOS_SURFACE),1)
	@echo "#define CAIRO_HAS_BEOS_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_PNG_FUNCTIONS),1)
	@echo "#define CAIRO_HAS_PNG_FUNCTIONS 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_GLITZ_SURFACE),1)
	@echo "#define CAIRO_HAS_GLITZ_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_DIRECTFB_SURFACE),1)
	@echo "#define CAIRO_HAS_DIRECTFB_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_FT_FONT),1)
	@echo "#define CAIRO_HAS_FT_FONT 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_PS_SURFACE),1)
	@echo "#define CAIRO_HAS_PS_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_PDF_SURFACE),1)
	@echo "#define CAIRO_HAS_PDF_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_SVG_SURFACE),1)
	@echo "#define CAIRO_HAS_SVG_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_TEST_SURFACES),1)
	@echo "#define CAIRO_HAS_TEST_SURFACES 1" >> src/cairo-features.h
endif
	@echo "#define CAIRO_HAS_IMAGE_SURFACE 1" >> src/cairo-features.h
	@echo "#define CAIRO_HAS_USER_FONT 1" >> src/cairo-features.h
	@echo "#endif" >>  src/cairo-features.h'
		SED='/bin/sed'
		xlib_BASE='cairo'
		xlib_REQUIRES='x11'
		xlib_NONPKGCONFIG_LIBS=''
		xlib_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		xlib_BASE='cairo'
		xlib_REQUIRES='x11'
		xlib_NONPKGCONFIG_LIBS=''
		xlib_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		xlib_xrender_BASE='cairo-xlib'
		xlib_xrender_REQUIRES='xrender >= 0.6'
		xlib_xrender_NONPKGCONFIG_LIBS=''
		xlib_xrender_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		xlib_xrender_BASE='cairo-xlib'
		xlib_xrender_REQUIRES='xrender >= 0.6'
		xlib_xrender_NONPKGCONFIG_LIBS=''
		xlib_xrender_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		xcb_BASE='cairo'
		xcb_REQUIRES='xcb >= 0.9.92 xcb-render >= 0.9.92 xcb-renderutil'
		xcb_NONPKGCONFIG_LIBS=''
		xcb_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		xcb_BASE='cairo'
		xcb_REQUIRES='xcb >= 0.9.92 xcb-render >= 0.9.92 xcb-renderutil'
		xcb_NONPKGCONFIG_LIBS=''
		xcb_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		quartz_BASE='cairo'
		quartz_REQUIRES=''
		quartz_NONPKGCONFIG_LIBS=''
		quartz_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		quartz_BASE='cairo'
		quartz_REQUIRES=''
		quartz_NONPKGCONFIG_LIBS=''
		quartz_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		quartz_font_BASE='cairo'
		quartz_font_REQUIRES=''
		quartz_font_NONPKGCONFIG_LIBS=''
		quartz_font_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		quartz_font_BASE='cairo'
		quartz_font_REQUIRES=''
		quartz_font_NONPKGCONFIG_LIBS=''
		quartz_font_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		quartz_image_BASE=''
		quartz_image_REQUIRES=''
		quartz_image_NONPKGCONFIG_LIBS=''
		quartz_image_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		quartz_image_BASE=''
		quartz_image_REQUIRES=''
		quartz_image_NONPKGCONFIG_LIBS=''
		quartz_image_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		win32_BASE='cairo'
		win32_REQUIRES=''
		win32_NONPKGCONFIG_LIBS=''
		win32_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		win32_BASE='cairo'
		win32_REQUIRES=''
		win32_NONPKGCONFIG_LIBS=''
		win32_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		win32_font_BASE='cairo'
		win32_font_REQUIRES=''
		win32_font_NONPKGCONFIG_LIBS=''
		win32_font_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		win32_font_BASE='cairo'
		win32_font_REQUIRES=''
		win32_font_NONPKGCONFIG_LIBS=''
		win32_font_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		os2_BASE=''
		os2_REQUIRES=''
		os2_NONPKGCONFIG_LIBS=''
		os2_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		os2_BASE=''
		os2_REQUIRES=''
		os2_NONPKGCONFIG_LIBS=''
		os2_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		beos_BASE=''
		beos_REQUIRES=''
		beos_NONPKGCONFIG_LIBS=''
		beos_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		beos_BASE=''
		beos_REQUIRES=''
		beos_NONPKGCONFIG_LIBS=''
		beos_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		png_BASE='cairo'
		png_REQUIRES='libpng12'
		png_NONPKGCONFIG_LIBS=''
		png_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		png_BASE='cairo'
		png_REQUIRES='libpng12'
		png_NONPKGCONFIG_LIBS=''
		png_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		glitz_BASE=''
		glitz_REQUIRES=''
		glitz_NONPKGCONFIG_LIBS=''
		glitz_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		glitz_BASE=''
		glitz_REQUIRES=''
		glitz_NONPKGCONFIG_LIBS=''
		glitz_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		directfb_BASE=''
		directfb_REQUIRES=''
		directfb_NONPKGCONFIG_LIBS=''
		directfb_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		directfb_BASE=''
		directfb_REQUIRES=''
		directfb_NONPKGCONFIG_LIBS=''
		directfb_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		ft_BASE='cairo'
		ft_REQUIRES='freetype2 >= 9.7.3 fontconfig'
		ft_NONPKGCONFIG_LIBS=''
		ft_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		ft_BASE='cairo'
		ft_REQUIRES='freetype2 >= 9.7.3 fontconfig'
		ft_NONPKGCONFIG_LIBS=''
		ft_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		ps_BASE='cairo'
		ps_REQUIRES=''
		ps_NONPKGCONFIG_LIBS='-lz'
		ps_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		ps_BASE='cairo'
		ps_REQUIRES=''
		ps_NONPKGCONFIG_LIBS='-lz'
		ps_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		pdf_BASE='cairo'
		pdf_REQUIRES=''
		pdf_NONPKGCONFIG_LIBS='-lz'
		pdf_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		pdf_BASE='cairo'
		pdf_REQUIRES=''
		pdf_NONPKGCONFIG_LIBS='-lz'
		pdf_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		svg_BASE='cairo'
		svg_REQUIRES=''
		svg_NONPKGCONFIG_LIBS=''
		svg_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		svg_BASE='cairo'
		svg_REQUIRES=''
		svg_NONPKGCONFIG_LIBS=''
		svg_NONPKGCONFIG_CFLAGS=''



# Handling of arguments.
for ac_config_target in $ac_config_targets
do
  case $ac_config_target in
    "config.h") CONFIG_HEADERS="$CONFIG_HEADERS config.h" ;;
    "depfiles") CONFIG_COMMANDS="$CONFIG_COMMANDS depfiles" ;;
    "$srcdir/build/Makefile.win32.features") CONFIG_COMMANDS="$CONFIG_COMMANDS $srcdir/build/Makefile.win32.features" ;;
    "$srcdir/src/Makefile.am.features") CONFIG_COMMANDS="$CONFIG_COMMANDS $srcdir/src/Makefile.am.features" ;;
    "$srcdir/src/Makefile.win32.features") CONFIG_COMMANDS="$CONFIG_COMMANDS $srcdir/src/Makefile.win32.features" ;;
    "$srcdir/boilerplate/Makefile.am.features") CONFIG_COMMANDS="$CONFIG_COMMANDS $srcdir/boilerplate/Makefile.am.features" ;;
    "$srcdir/boilerplate/Makefile.win32.features") CONFIG_COMMANDS="$CONFIG_COMMANDS $srcdir/boilerplate/Makefile.win32.features" ;;
    "src/cairo.pc") CONFIG_FILES="$CONFIG_FILES src/cairo.pc" ;;
    "cairo-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-uninstalled.pc:src/cairo-uninstalled.pc.in" ;;
    "src/cairo-features.h") CONFIG_COMMANDS="$CONFIG_COMMANDS src/cairo-features.h" ;;
    "$srcdir/src/cairo-supported-features.h") CONFIG_COMMANDS="$CONFIG_COMMANDS $srcdir/src/cairo-supported-features.h" ;;
    "$srcdir/build/Makefile.win32.features-h") CONFIG_COMMANDS="$CONFIG_COMMANDS $srcdir/build/Makefile.win32.features-h" ;;
    "src/cairo-xlib.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-xlib.pc:src/cairo-features.pc.in" ;;
    "cairo-xlib-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-xlib-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-xlib-xrender.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-xlib-xrender.pc:src/cairo-features.pc.in" ;;
    "cairo-xlib-xrender-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-xlib-xrender-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-xcb.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-xcb.pc:src/cairo-features.pc.in" ;;
    "cairo-xcb-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-xcb-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-quartz.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-quartz.pc:src/cairo-features.pc.in" ;;
    "cairo-quartz-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-quartz-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-quartz-font.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-quartz-font.pc:src/cairo-features.pc.in" ;;
    "cairo-quartz-font-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-quartz-font-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-quartz-image.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-quartz-image.pc:src/cairo-features.pc.in" ;;
    "cairo-quartz-image-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-quartz-image-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-win32.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-win32.pc:src/cairo-features.pc.in" ;;
    "cairo-win32-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-win32-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-win32-font.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-win32-font.pc:src/cairo-features.pc.in" ;;
    "cairo-win32-font-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-win32-font-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-os2.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-os2.pc:src/cairo-features.pc.in" ;;
    "cairo-os2-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-os2-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-beos.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-beos.pc:src/cairo-features.pc.in" ;;
    "cairo-beos-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-beos-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-png.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-png.pc:src/cairo-features.pc.in" ;;
    "cairo-png-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-png-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-glitz.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-glitz.pc:src/cairo-features.pc.in" ;;
    "cairo-glitz-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-glitz-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-directfb.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-directfb.pc:src/cairo-features.pc.in" ;;
    "cairo-directfb-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-directfb-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-ft.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-ft.pc:src/cairo-features.pc.in" ;;
    "cairo-ft-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-ft-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-ps.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-ps.pc:src/cairo-features.pc.in" ;;
    "cairo-ps-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-ps-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-pdf.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-pdf.pc:src/cairo-features.pc.in" ;;
    "cairo-pdf-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-pdf-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-svg.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-svg.pc:src/cairo-features.pc.in" ;;
    "cairo-svg-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-svg-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
    "boilerplate/Makefile") CONFIG_FILES="$CONFIG_FILES boilerplate/Makefile" ;;
    "src/Makefile") CONFIG_FILES="$CONFIG_FILES src/Makefile" ;;
    "test/Makefile") CONFIG_FILES="$CONFIG_FILES test/Makefile" ;;
    "test/pdiff/Makefile") CONFIG_FILES="$CONFIG_FILES test/pdiff/Makefile" ;;
    "perf/Makefile") CONFIG_FILES="$CONFIG_FILES perf/Makefile" ;;
    "util/Makefile") CONFIG_FILES="$CONFIG_FILES util/Makefile" ;;
    "doc/Makefile") CONFIG_FILES="$CONFIG_FILES doc/Makefile" ;;
    "doc/public/Makefile") CONFIG_FILES="$CONFIG_FILES doc/public/Makefile" ;;

  *) { { echo "$as_me:$LINENO: error: invalid argument: $ac_config_target" >&5
echo "$as_me: error: invalid argument: $ac_config_target" >&2;}
   { (exit 1); exit 1; }; };;
  esac
done


# If the user did not use the arguments to specify the items to instantiate,
# then the envvar interface is used.  Set only those that are not.
# We use the long form for the default assignment because of an extremely
# bizarre bug on SunOS 4.1.3.
if $ac_need_defaults; then
  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
  test "${CONFIG_COMMANDS+set}" = set || CONFIG_COMMANDS=$config_commands
fi

# Have a temporary directory for convenience.  Make it in the build tree
# simply because there is no reason against having it here, and in addition,
# creating and moving files from /tmp can sometimes cause problems.
# Hook for its removal unless debugging.
# Note that there is a small window in which the directory will not be cleaned:
# after its creation but before its name has been assigned to `$tmp'.
$debug ||
{
  tmp=
  trap 'exit_status=$?
  { test -z "$tmp" || test ! -d "$tmp" || rm -fr "$tmp"; } && exit $exit_status
' 0
  trap '{ (exit 1); exit 1; }' 1 2 13 15
}
# Create a (secure) tmp directory for tmp files.

{
  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
  test -n "$tmp" && test -d "$tmp"
}  ||
{
  tmp=./conf$$-$RANDOM
  (umask 077 && mkdir "$tmp")
} ||
{
   echo "$me: cannot create a temporary directory in ." >&2
   { (exit 1); exit 1; }
}

#
# Set up the sed scripts for CONFIG_FILES section.
#

# No need to generate the scripts if there are no CONFIG_FILES.
# This happens for instance when ./config.status config.h
if test -n "$CONFIG_FILES"; then

cat >"$tmp/subs-1.sed" <<\CEOF
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s,@SHELL@,|#_!!_#|/bin/sh,g
s,@PATH_SEPARATOR@,|#_!!_#|:,g
s,@PACKAGE_NAME@,|#_!!_#|cairo,g
s,@PACKAGE_TARNAME@,|#_!!_#|cairo,g
s,@PACKAGE_VERSION@,|#_!!_#|1.8.0,g
s,@PACKAGE_STRING@,|#_!!_#|cairo 1.8.0,g
s,@PACKAGE_BUGREPORT@,|#_!!_#|http://bugs.freedesktop.org/enter_bug.cgi?product=cairo,g
s,@exec_prefix@,|#_!!_#|${prefix},g
s,@prefix@,|#_!!_#|/usr/local,g
s,@program_transform_name@,|#_!!_#|s\,x\,x\,,g
s,@bindir@,|#_!!_#|${exec_prefix}/bin,g
s,@sbindir@,|#_!!_#|${exec_prefix}/sbin,g
s,@libexecdir@,|#_!!_#|${exec_prefix}/libexec,g
s,@datarootdir@,|#_!!_#|${prefix}/share,g
s,@datadir@,|#_!!_#|${datarootdir},g
s,@sysconfdir@,|#_!!_#|${prefix}/etc,g
s,@sharedstatedir@,|#_!!_#|${prefix}/com,g
s,@localstatedir@,|#_!!_#|${prefix}/var,g
s,@includedir@,|#_!!_#|${prefix}/include,g
s,@oldincludedir@,|#_!!_#|/usr/include,g
s,@docdir@,|#_!!_#|${datarootdir}/doc/${PACKAGE_TARNAME},g
s,@infodir@,|#_!!_#|${datarootdir}/info,g
s,@htmldir@,|#_!!_#|${docdir},g
s,@dvidir@,|#_!!_#|${docdir},g
s,@pdfdir@,|#_!!_#|${docdir},g
s,@psdir@,|#_!!_#|${docdir},g
s,@libdir@,|#_!!_#|${exec_prefix}/lib,g
s,@localedir@,|#_!!_#|${datarootdir}/locale,g
s,@mandir@,|#_!!_#|${datarootdir}/man,g
s,@DEFS@,|#_!!_#|-DHAVE_CONFIG_H,g
s,@ECHO_C@,|#_!!_#|,g
s,@ECHO_N@,|#_!!_#|-n,g
s,@ECHO_T@,|#_!!_#|,g
s,@LIBS@,|#_!!_#| ,g
s,@build_alias@,|#_!!_#|,g
s,@host_alias@,|#_!!_#|,g
s,@target_alias@,|#_!!_#|,g
s,@INSTALL_PROGRAM@,|#_!!_#|${INSTALL},g
s,@INSTALL_SCRIPT@,|#_!!_#|${INSTALL},g
s,@INSTALL_DATA@,|#_!!_#|${INSTALL} -m 644,g
s,@am__isrc@,|#_!!_#|,g
s,@CYGPATH_W@,|#_!!_#|echo,g
s,@PACKAGE@,|#_!!_#|cairo,g
s,@VERSION@,|#_!!_#|1.8.0,g
s,@ACLOCAL@,|#_!!_#|${SHELL} /home/chris/cairo-1.8.0/build/missing --run aclocal-1.10,g
s,@AUTOCONF@,|#_!!_#|${SHELL} /home/chris/cairo-1.8.0/build/missing --run autoconf,g
s,@AUTOMAKE@,|#_!!_#|${SHELL} /home/chris/cairo-1.8.0/build/missing --run automake-1.10,g
s,@AUTOHEADER@,|#_!!_#|${SHELL} /home/chris/cairo-1.8.0/build/missing --run autoheader,g
s,@MAKEINFO@,|#_!!_#|${SHELL} /home/chris/cairo-1.8.0/build/missing --run makeinfo,g
s,@install_sh@,|#_!!_#|$(SHELL) /home/chris/cairo-1.8.0/build/install-sh,g
s,@STRIP@,|#_!!_#|strip,g
s,@INSTALL_STRIP_PROGRAM@,|#_!!_#|$(install_sh) -c -s,g
s,@mkdir_p@,|#_!!_#|/bin/mkdir -p,g
s,@AWK@,|#_!!_#|gawk,g
s,@SET_MAKE@,|#_!!_#|,g
s,@am__leading_dot@,|#_!!_#|.,g
s,@AMTAR@,|#_!!_#|${SHELL} /home/chris/cairo-1.8.0/build/missing --run tar,g
s,@am__tar@,|#_!!_#|${AMTAR} chof - "$$tardir",g
s,@am__untar@,|#_!!_#|${AMTAR} xf -,g
s,@build@,|#_!!_#|arm-apple-darwin11.0.0,g
s,@build_cpu@,|#_!!_#|arm,g
s,@build_vendor@,|#_!!_#|apple,g
s,@build_os@,|#_!!_#|darwin11.0.0,g
s,@host@,|#_!!_#|arm-apple-darwin11.0.0,g
s,@host_cpu@,|#_!!_#|arm,g
s,@host_vendor@,|#_!!_#|apple,g
s,@host_os@,|#_!!_#|darwin11.0.0,g
s,@CC@,|#_!!_#|/usr/bin/gcc,g
s,@CFLAGS@,|#_!!_#|-g -O2,g
s,@LDFLAGS@,|#_!!_#|,g
s,@CPPFLAGS@,|#_!!_#|,g
s,@ac_ct_CC@,|#_!!_#|/usr/bin/gcc,g
s,@EXEEXT@,|#_!!_#|,g
s,@OBJEXT@,|#_!!_#|o,g
s,@DEPDIR@,|#_!!_#|.deps,g
s,@am__include@,|#_!!_#|include,g
s,@am__quote@,|#_!!_#|,g
s,@AMDEP_TRUE@,|#_!!_#|,g
s,@AMDEP_FALSE@,|#_!!_#|#,g
s,@AMDEPBACKSLASH@,|#_!!_#|\\,g
s,@CCDEPMODE@,|#_!!_#|depmode=gcc3,g
s,@am__fastdepCC_TRUE@,|#_!!_#|,g
s,@am__fastdepCC_FALSE@,|#_!!_#|#,g
s,@SED@,|#_!!_#|/bin/sed,g
s,@GREP@,|#_!!_#|/bin/grep,g
s,@EGREP@,|#_!!_#|/bin/grep -E,g
s,@LN_S@,|#_!!_#|ln -s,g
s,@ECHO@,|#_!!_#|echo,g
s,@AR@,|#_!!_#|ar,g
s,@RANLIB@,|#_!!_#|ranlib,g
s,@DSYMUTIL@,|#_!!_#|:,g
s,@NMEDIT@,|#_!!_#|nmedit,g
s,@DLLTOOL@,|#_!!_#|dlltool,g
s,@AS@,|#_!!_#|as,g
s,@OBJDUMP@,|#_!!_#|objdump,g
s,@CPP@,|#_!!_#|/usr/bin/gcc -E,g
s,@CXX@,|#_!!_#|g++,g
CEOF
cat >"$tmp/subs-2.sed" <<\CEOF
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s,@CXXFLAGS@,|#_!!_#|-g -O2,g
s,@ac_ct_CXX@,|#_!!_#|g++,g
s,@CXXDEPMODE@,|#_!!_#|depmode=gcc3,g
s,@am__fastdepCXX_TRUE@,|#_!!_#|,g
s,@am__fastdepCXX_FALSE@,|#_!!_#|#,g
s,@CXXCPP@,|#_!!_#|g++ -E,g
s,@F77@,|#_!!_#|,g
s,@FFLAGS@,|#_!!_#|,g
s,@ac_ct_F77@,|#_!!_#|,g
s,@LIBTOOL@,|#_!!_#|$(SHELL) $(top_builddir)/libtool,g
s,@HTML_DIR@,|#_!!_#|${datadir}/gtk-doc/html,g
s,@PKG_CONFIG@,|#_!!_#|/usr/local/bin/pkg-config,g
s,@GTKDOC_CHECK@,|#_!!_#|,g
s,@ENABLE_GTK_DOC_TRUE@,|#_!!_#|#,g
s,@ENABLE_GTK_DOC_FALSE@,|#_!!_#|,g
s,@GTK_DOC_USE_LIBTOOL_TRUE@,|#_!!_#|,g
s,@GTK_DOC_USE_LIBTOOL_FALSE@,|#_!!_#|#,g
s,@CAIRO_VERSION_MAJOR@,|#_!!_#|1,g
s,@CAIRO_VERSION_MINOR@,|#_!!_#|8,g
s,@CAIRO_VERSION_MICRO@,|#_!!_#|0,g
s,@CAIRO_VERSION_SONUM@,|#_!!_#|2,g
s,@CAIRO_RELEASE_STATUS@,|#_!!_#|release,g
s,@CAIRO_LIBTOOL_VERSION_INFO@,|#_!!_#|10802:0:10800,g
s,@FIND@,|#_!!_#|/usr/bin/find,g
s,@XARGS@,|#_!!_#|/usr/bin/xargs,g
s,@PKGCONFIG_REQUIRES@,|#_!!_#|Requires.private,g
s,@CROSS_COMPILING_TRUE@,|#_!!_#|#,g
s,@CROSS_COMPILING_FALSE@,|#_!!_#|,g
s,@OS_WIN32_TRUE@,|#_!!_#|#,g
s,@OS_WIN32_FALSE@,|#_!!_#|,g
s,@CAIROPERF_LIBS@,|#_!!_#|,g
s,@CAIRO_REQUIRES@,|#_!!_#| pixman-1 >= 0.12.0    freetype2 >= 9.7.3 fontconfig libpng12 xcb >= 0.9.92 xcb-render >= 0.9.92 xcb-renderutil xrender >= 0.6 x11 ,g
s,@CAIRO_CFLAGS@,|#_!!_#| -I/usr/local/include/pixman-1      -I/usr/local/include/freetype2     -I/usr/include/libpng12           -Wall -Wextra -Wsign-compare -Werror-implicit-function-declaration -Wpointer-arith -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wnested-externs -Wpacked -Wswitch-enum -Wmissing-format-attribute -Wstrict-aliasing=2 -Winit-self -Wunsafe-loop-optimizations -Wdeclaration-after-statement -Wold-style-definition -Wno-missing-field-initializers -Wno-unused-parameter -Wno-attributes -Wno-long-long -Winline -fno-strict-aliasing -Wp\,-D_FORTIFY_SOURCE=2           ,g
s,@CAIRO_NONPKGCONFIG_CFLAGS@,|#_!!_#|          ,g
s,@CAIRO_LIBS@,|#_!!_#| -L/usr/local/lib -lpixman-1      -L/usr/local/lib -lfreetype   -L/usr/local/lib -lfontconfig   -lpng12   -L/usr/local/lib -lxcb-render-util -lxcb-render -lxcb   -L/usr/local/lib -lXrender -lX11   -L/usr/local/lib -lX11        -lz -lz       ,g
s,@CAIRO_NONPKGCONFIG_LIBS@,|#_!!_#|   -lz -lz       ,g
s,@CAIRO_TEST_UNDEFINED_LDFLAGS@,|#_!!_#|-Wl\,--allow-shlib-undefined,g
s,@SHTOOL@,|#_!!_#|,g
s,@LTP@,|#_!!_#|,g
s,@LTP_GENHTML@,|#_!!_#|,g
s,@CAIRO_HAS_LCOV_TRUE@,|#_!!_#|#,g
s,@CAIRO_HAS_LCOV_FALSE@,|#_!!_#|,g
s,@xlib_CFLAGS@,|#_!!_#| ,g
s,@xlib_LIBS@,|#_!!_#|-L/usr/local/lib -lX11  ,g
s,@XMKMF@,|#_!!_#|,g
s,@X_CFLAGS@,|#_!!_#|,g
s,@X_PRE_LIBS@,|#_!!_#|,g
s,@X_LIBS@,|#_!!_#|,g
s,@X_EXTRA_LIBS@,|#_!!_#|,g
s,@CAIRO_HAS_XLIB_SURFACE_TRUE@,|#_!!_#|,g
s,@CAIRO_HAS_XLIB_SURFACE_FALSE@,|#_!!_#|#,g
s,@xlib_xrender_CFLAGS@,|#_!!_#| ,g
s,@xlib_xrender_LIBS@,|#_!!_#|-L/usr/local/lib -lXrender -lX11  ,g
s,@CAIRO_HAS_XLIB_XRENDER_SURFACE_TRUE@,|#_!!_#|,g
s,@CAIRO_HAS_XLIB_XRENDER_SURFACE_FALSE@,|#_!!_#|#,g
s,@xcb_CFLAGS@,|#_!!_#| ,g
s,@xcb_LIBS@,|#_!!_#|-L/usr/local/lib -lxcb-render-util -lxcb-render -lxcb  ,g
s,@CAIRO_HAS_XCB_SURFACE_TRUE@,|#_!!_#|,g
s,@CAIRO_HAS_XCB_SURFACE_FALSE@,|#_!!_#|#,g
s,@CAIRO_HAS_QUARTZ_SURFACE_TRUE@,|#_!!_#|#,g
s,@CAIRO_HAS_QUARTZ_SURFACE_FALSE@,|#_!!_#|,g
s,@CAIRO_HAS_QUARTZ_FONT_TRUE@,|#_!!_#|#,g
s,@CAIRO_HAS_QUARTZ_FONT_FALSE@,|#_!!_#|,g
s,@CAIRO_HAS_QUARTZ_IMAGE_SURFACE_TRUE@,|#_!!_#|#,g
s,@CAIRO_HAS_QUARTZ_IMAGE_SURFACE_FALSE@,|#_!!_#|,g
s,@CAIRO_HAS_WIN32_SURFACE_TRUE@,|#_!!_#|#,g
s,@CAIRO_HAS_WIN32_SURFACE_FALSE@,|#_!!_#|,g
s,@CAIRO_HAS_WIN32_FONT_TRUE@,|#_!!_#|#,g
s,@CAIRO_HAS_WIN32_FONT_FALSE@,|#_!!_#|,g
s,@GS@,|#_!!_#|,g
s,@CAIRO_CAN_TEST_WIN32_PRINTING_SURFACE_TRUE@,|#_!!_#|#,g
s,@CAIRO_CAN_TEST_WIN32_PRINTING_SURFACE_FALSE@,|#_!!_#|,g
s,@CAIRO_HAS_OS2_SURFACE_TRUE@,|#_!!_#|#,g
s,@CAIRO_HAS_OS2_SURFACE_FALSE@,|#_!!_#|,g
s,@CAIRO_HAS_BEOS_SURFACE_TRUE@,|#_!!_#|#,g
s,@CAIRO_HAS_BEOS_SURFACE_FALSE@,|#_!!_#|,g
s,@png_REQUIRES@,|#_!!_#|libpng12,g
s,@png_CFLAGS@,|#_!!_#|-I/usr/include/libpng12  ,g
s,@png_LIBS@,|#_!!_#|-lpng12  ,g
s,@CAIRO_HAS_PNG_FUNCTIONS_TRUE@,|#_!!_#|,g
s,@CAIRO_HAS_PNG_FUNCTIONS_FALSE@,|#_!!_#|#,g
s,@glitz_CFLAGS@,|#_!!_#|,g
s,@glitz_LIBS@,|#_!!_#|,g
s,@CAIRO_HAS_GLITZ_SURFACE_TRUE@,|#_!!_#|#,g
s,@CAIRO_HAS_GLITZ_SURFACE_FALSE@,|#_!!_#|,g
s,@GLITZ_AGL_CFLAGS@,|#_!!_#|,g
s,@GLITZ_AGL_LIBS@,|#_!!_#|,g
s,@GLITZ_EGL_CFLAGS@,|#_!!_#|,g
s,@GLITZ_EGL_LIBS@,|#_!!_#|,g
s,@GLITZ_GLX_CFLAGS@,|#_!!_#|,g
s,@GLITZ_GLX_LIBS@,|#_!!_#|,g
s,@GLITZ_WGL_CFLAGS@,|#_!!_#|,g
s,@GLITZ_WGL_LIBS@,|#_!!_#|,g
s,@CAIRO_CAN_TEST_GLITZ_AGL_SURFACE_TRUE@,|#_!!_#|#,g
s,@CAIRO_CAN_TEST_GLITZ_AGL_SURFACE_FALSE@,|#_!!_#|,g
s,@CAIRO_CAN_TEST_GLITZ_EGL_SURFACE_TRUE@,|#_!!_#|#,g
s,@CAIRO_CAN_TEST_GLITZ_EGL_SURFACE_FALSE@,|#_!!_#|,g
CEOF
cat >"$tmp/subs-3.sed" <<\CEOF
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b end
s,@CAIRO_CAN_TEST_GLITZ_GLX_SURFACE_TRUE@,|#_!!_#|#,g
s,@CAIRO_CAN_TEST_GLITZ_GLX_SURFACE_FALSE@,|#_!!_#|,g
s,@CAIRO_CAN_TEST_GLITZ_WGL_SURFACE_TRUE@,|#_!!_#|#,g
s,@CAIRO_CAN_TEST_GLITZ_WGL_SURFACE_FALSE@,|#_!!_#|,g
s,@directfb_CFLAGS@,|#_!!_#|,g
s,@directfb_LIBS@,|#_!!_#|,g
s,@CAIRO_HAS_DIRECTFB_SURFACE_TRUE@,|#_!!_#|#,g
s,@CAIRO_HAS_DIRECTFB_SURFACE_FALSE@,|#_!!_#|,g
s,@FONTCONFIG_CFLAGS@,|#_!!_#| ,g
s,@FONTCONFIG_LIBS@,|#_!!_#|-L/usr/local/lib -lfontconfig  ,g
s,@FREETYPE_CFLAGS@,|#_!!_#|-I/usr/local/include/freetype2  ,g
s,@FREETYPE_LIBS@,|#_!!_#|-L/usr/local/lib -lfreetype  ,g
s,@FREETYPE_CONFIG@,|#_!!_#|,g
s,@CAIRO_HAS_FT_FONT_TRUE@,|#_!!_#|,g
s,@CAIRO_HAS_FT_FONT_FALSE@,|#_!!_#|#,g
s,@HAVE_PTHREAD_TRUE@,|#_!!_#|,g
s,@HAVE_PTHREAD_FALSE@,|#_!!_#|#,g
s,@CAIRO_HAS_PS_SURFACE_TRUE@,|#_!!_#|,g
s,@CAIRO_HAS_PS_SURFACE_FALSE@,|#_!!_#|#,g
s,@CAIRO_CAN_TEST_PS_SURFACE_TRUE@,|#_!!_#|#,g
s,@CAIRO_CAN_TEST_PS_SURFACE_FALSE@,|#_!!_#|,g
s,@CAIRO_HAS_PDF_SURFACE_TRUE@,|#_!!_#|,g
s,@CAIRO_HAS_PDF_SURFACE_FALSE@,|#_!!_#|#,g
s,@POPPLER_CFLAGS@,|#_!!_#|,g
s,@POPPLER_LIBS@,|#_!!_#|,g
s,@CAIRO_CAN_TEST_PDF_SURFACE_TRUE@,|#_!!_#|#,g
s,@CAIRO_CAN_TEST_PDF_SURFACE_FALSE@,|#_!!_#|,g
s,@CAIRO_HAS_MULTI_PAGE_SURFACES_TRUE@,|#_!!_#|,g
s,@CAIRO_HAS_MULTI_PAGE_SURFACES_FALSE@,|#_!!_#|#,g
s,@CAIRO_HAS_SVG_SURFACE_TRUE@,|#_!!_#|,g
s,@CAIRO_HAS_SVG_SURFACE_FALSE@,|#_!!_#|#,g
s,@LIBRSVG_CFLAGS@,|#_!!_#|-D_REENTRANT -I/usr/local/include/librsvg-2.0 -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/gdk-pixbuf-2.0 -I/usr/local/include/cairo -I/usr/local/include/libpng14 -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/gtk-2.0 -I/usr/local/lib/gtk-2.0/include -I/usr/local/include/pango-1.0  ,g
s,@LIBRSVG_LIBS@,|#_!!_#|-L/usr/local/lib -lrsvg-2 -lm -lgio-2.0 -lgdk-x11-2.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lpango-1.0 -lcairo -lgmodule-2.0 -lgobject-2.0 -lgthread-2.0 -lglib-2.0 -lintl  ,g
s,@CAIRO_CAN_TEST_SVG_SURFACE_TRUE@,|#_!!_#|,g
s,@CAIRO_CAN_TEST_SVG_SURFACE_FALSE@,|#_!!_#|#,g
s,@CAIRO_HAS_TEST_SURFACES_TRUE@,|#_!!_#|#,g
s,@CAIRO_HAS_TEST_SURFACES_FALSE@,|#_!!_#|,g
s,@pixman_CFLAGS@,|#_!!_#|-I/usr/local/include/pixman-1  ,g
s,@pixman_LIBS@,|#_!!_#|-L/usr/local/lib -lpixman-1  ,g
s,@BUILD_ANY2PPM_TRUE@,|#_!!_#|,g
s,@BUILD_ANY2PPM_FALSE@,|#_!!_#|#,g
s,@DISABLE_SOME_FLOATING_POINT_TRUE@,|#_!!_#|#,g
s,@DISABLE_SOME_FLOATING_POINT_FALSE@,|#_!!_#|,g
s,@LIBOBJS@,|#_!!_#|,g
s,@LTLIBOBJS@,|#_!!_#|,g
:end
s/|#_!!_#|//g
CEOF
fi # test -n "$CONFIG_FILES"


for ac_tag in  :F $CONFIG_FILES  :H $CONFIG_HEADERS    :C $CONFIG_COMMANDS
do
  case $ac_tag in
  :[FHLC]) ac_mode=$ac_tag; continue;;
  esac
  case $ac_mode$ac_tag in
  :[FHL]*:*);;
  :L* | :C*:*) { { echo "$as_me:$LINENO: error: Invalid tag $ac_tag." >&5
echo "$as_me: error: Invalid tag $ac_tag." >&2;}
   { (exit 1); exit 1; }; };;
  :[FH]-) ac_tag=-:-;;
  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
  esac
  ac_save_IFS=$IFS
  IFS=:
  set x $ac_tag
  IFS=$ac_save_IFS
  shift
  ac_file=$1
  shift

  case $ac_mode in
  :L) ac_source=$1;;
  :[FH])
    ac_file_inputs=
    for ac_f
    do
      case $ac_f in
      -) ac_f="$tmp/stdin";;
      *) # Look for the file first in the build tree, then in the source tree
	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
	 # because $ac_f cannot contain `:'.
	 test -f "$ac_f" ||
	   case $ac_f in
	   [\\/$]*) false;;
	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
	   esac ||
	   { { echo "$as_me:$LINENO: error: cannot find input file: $ac_f" >&5
echo "$as_me: error: cannot find input file: $ac_f" >&2;}
   { (exit 1); exit 1; }; };;
      esac
      ac_file_inputs="$ac_file_inputs $ac_f"
    done

    # Let's still pretend it is `configure' which instantiates (i.e., don't
    # use $as_me), people would be surprised to read:
    #    /* config.h.  Generated by config.status.  */
    configure_input="Generated from "`IFS=:
	  echo $* | sed 's|^[^:]*/||;s|:[^:]*/|, |g'`" by configure."
    if test x"$ac_file" != x-; then
      configure_input="$ac_file.  $configure_input"
      { echo "$as_me:$LINENO: creating $ac_file" >&5
echo "$as_me: creating $ac_file" >&6;}
    fi

    case $ac_tag in
    *:-:* | *:-) cat >"$tmp/stdin";;
    esac
    ;;
  esac

  ac_dir=`$as_dirname -- "$ac_file" ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
echo X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  { as_dir="$ac_dir"
  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || { $as_mkdir_p && mkdir -p "$as_dir"; } || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || { { echo "$as_me:$LINENO: error: cannot create directory $as_dir" >&5
echo "$as_me: error: cannot create directory $as_dir" >&2;}
   { (exit 1); exit 1; }; }; }
  ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`echo "$ac_dir" | sed 's,^\.[\\/],,'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`echo "$ac_dir_suffix" | sed 's,/[^\\/]*,/..,g;s,/,,'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix


  case $ac_mode in
  :F)
  #
  # CONFIG_FILE
  #

  case $INSTALL in
  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
  esac
  ac_MKDIR_P=$MKDIR_P
  case $MKDIR_P in
  [\\/$]* | ?:[\\/]* ) ;;
  */*) ac_MKDIR_P=$ac_top_build_prefix$MKDIR_P ;;
  esac
# If the template does not know about datarootdir, expand it.
# FIXME: This hack should be removed a few years after 2.60.
ac_datarootdir_hack=; ac_datarootdir_seen=

case `sed -n '/datarootdir/ {
  p
  q
}
/@datadir@/p
/@docdir@/p
/@infodir@/p
/@localedir@/p
/@mandir@/p
' $ac_file_inputs` in
*datarootdir*) ac_datarootdir_seen=yes;;
*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
  { echo "$as_me:$LINENO: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
echo "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
  ac_datarootdir_hack='
  s&@datadir@&${datarootdir}&g
  s&@docdir@&${datarootdir}/doc/${PACKAGE_TARNAME}&g
  s&@infodir@&${datarootdir}/info&g
  s&@localedir@&${datarootdir}/locale&g
  s&@mandir@&${datarootdir}/man&g
    s&\${datarootdir}&${prefix}/share&g' ;;
esac
  sed "/^[	 ]*VPATH[	 ]*=/{
s/:*\$(srcdir):*/:/
s/:*\${srcdir}:*/:/
s/:*@srcdir@:*/:/
s/^\([^=]*=[	 ]*\):*/\1/
s/:*$//
s/^[^=]*=[	 ]*$//
}

:t
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s&@configure_input@&$configure_input&;t t
s&@top_builddir@&$ac_top_builddir_sub&;t t
s&@srcdir@&$ac_srcdir&;t t
s&@abs_srcdir@&$ac_abs_srcdir&;t t
s&@top_srcdir@&$ac_top_srcdir&;t t
s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
s&@builddir@&$ac_builddir&;t t
s&@abs_builddir@&$ac_abs_builddir&;t t
s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
s&@INSTALL@&$ac_INSTALL&;t t
s&@MKDIR_P@&$ac_MKDIR_P&;t t
$ac_datarootdir_hack
" $ac_file_inputs | sed -f "$tmp/subs-1.sed" | sed -f "$tmp/subs-2.sed" | sed -f "$tmp/subs-3.sed" >$tmp/out

test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
  { ac_out=`sed -n '/\${datarootdir}/p' "$tmp/out"`; test -n "$ac_out"; } &&
  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' "$tmp/out"`; test -z "$ac_out"; } &&
  { echo "$as_me:$LINENO: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined." >&5
echo "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined." >&2;}

  rm -f "$tmp/stdin"
  case $ac_file in
  -) cat "$tmp/out"; rm -f "$tmp/out";;
  *) rm -f "$ac_file"; mv "$tmp/out" $ac_file;;
  esac
 ;;
  :H)
  #
  # CONFIG_HEADER
  #
    # First, check the format of the line:
    cat >"$tmp/defines.sed" <<\CEOF
/^[	 ]*#[	 ]*undef[	 ][	 ]*[_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]*[	 ]*$/b def
/^[	 ]*#[	 ]*define[	 ][	 ]*[_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]*[(	 ]/b def
b
:def
s/$/ /
s,^\([	 #]*\)[^	 ]*\([	 ]*PACKAGE_NAME\)[	 (].*,\1define\2 "cairo" ,
s,^\([	 #]*\)[^	 ]*\([	 ]*PACKAGE_TARNAME\)[	 (].*,\1define\2 "cairo" ,
s,^\([	 #]*\)[^	 ]*\([	 ]*PACKAGE_VERSION\)[	 (].*,\1define\2 "1.8.0" ,
s,^\([	 #]*\)[^	 ]*\([	 ]*PACKAGE_STRING\)[	 (].*,\1define\2 "cairo 1.8.0" ,
s,^\([	 #]*\)[^	 ]*\([	 ]*PACKAGE_BUGREPORT\)[	 (].*,\1define\2 "http://bugs.freedesktop.org/enter_bug.cgi?product=cairo" ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_SYS_TYPES_H\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_SYS_STAT_H\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_STDLIB_H\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_STRING_H\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_MEMORY_H\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_STRINGS_H\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_INTTYPES_H\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_STDINT_H\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_UNISTD_H\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_DLFCN_H\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*PACKAGE_VERSION\)[	 (].*,\1define\2 USE_cairo_version_OR_cairo_version_string_INSTEAD ,
s,^\([	 #]*\)[^	 ]*\([	 ]*PACKAGE_STRING\)[	 (].*,\1define\2 USE_cairo_version_OR_cairo_version_string_INSTEAD ,
s,^\([	 #]*\)[^	 ]*\([	 ]*PACKAGE_NAME\)[	 (].*,\1define\2 USE_cairo_INSTEAD ,
s,^\([	 #]*\)[^	 ]*\([	 ]*PACKAGE_TARNAME\)[	 (].*,\1define\2 USE_cairo_INSTEAD ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_INTEL_ATOMIC_PRIMITIVES\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_STDINT_H\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_INTTYPES_H\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_UINT64_T\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_FCNTL_H\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_UNISTD_H\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_SIGNAL_H\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_SYS_STAT_H\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_SYS_SOCKET_H\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_SYS_POLL_H\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_SYS_UN_H\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_SCHED_H\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_LIBGEN_H\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_SIGNAL_H\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_SETJMP_H\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_LINK\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_CTIME_R\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_DRAND48\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_FLOCKFILE\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*WARN_UNUSED_RESULT\)[	 (].*,\1define\2 __attribute__((__warn_unused_result__)) ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_FCFINI\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_FT_BITMAP_SIZE_Y_PPEM\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_FT_GLYPHSLOT_EMBOLDEN\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_FT_LOAD_SFNT_TABLE\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_FT_LIBRARY_SETLCDFILTER\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_PTHREAD_H\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*HAVE_RSVG_PIXBUF_FROM_FILE\)[	 (].*,\1define\2 1 ,
s,^\([	 #]*\)[^	 ]*\([	 ]*CAIRO_CAN_TEST_SVG_SURFACE\)[	 (].*,\1define\2 1 ,
s/ $//
s,^[	 #]*u.*,/* & */,
CEOF
    sed -f "$tmp/defines.sed" $ac_file_inputs >"$tmp/out1"
ac_result="$tmp/out1"
  if test x"$ac_file" != x-; then
    echo "/* $configure_input  */" >"$tmp/config.h"
    cat "$ac_result" >>"$tmp/config.h"
    if diff $ac_file "$tmp/config.h" >/dev/null 2>&1; then
      { echo "$as_me:$LINENO: $ac_file is unchanged" >&5
echo "$as_me: $ac_file is unchanged" >&6;}
    else
      rm -f $ac_file
      mv "$tmp/config.h" $ac_file
    fi
  else
    echo "/* $configure_input  */"
    cat "$ac_result"
  fi
  rm -f "$tmp/out12"
# Compute $ac_file's index in $config_headers.
_am_arg=$ac_file
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`$as_dirname -- "$_am_arg" ||
$as_expr X"$_am_arg" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$_am_arg" : 'X\(//\)[^/]' \| \
	 X"$_am_arg" : 'X\(//\)$' \| \
	 X"$_am_arg" : 'X\(/\)' \| . 2>/dev/null ||
echo X"$_am_arg" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`/stamp-h$_am_stamp_count
 ;;

  :C)  { echo "$as_me:$LINENO: executing $ac_file commands" >&5
echo "$as_me: executing $ac_file commands" >&6;}
 ;;
  esac


  case $ac_file$ac_mode in
    "depfiles":C) test x"$AMDEP_TRUE" != x"" || for mf in $CONFIG_FILES; do
  # Strip MF so we end up with the name of the file.
  mf=`echo "$mf" | sed -e 's/:.*$//'`
  # Check whether this is an Automake generated Makefile or not.
  # We used to match only the files named `Makefile.in', but
  # some people rename them; so instead we look at the file content.
  # Grep'ing the first line is not enough: some people post-process
  # each Makefile.in and add a new line on top of each file to say so.
  # Grep'ing the whole file is not good either: AIX grep has a line
  # limit of 2048, but all sed's we know have understand at least 4000.
  if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
    dirpart=`$as_dirname -- "$mf" ||
$as_expr X"$mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$mf" : 'X\(//\)[^/]' \| \
	 X"$mf" : 'X\(//\)$' \| \
	 X"$mf" : 'X\(/\)' \| . 2>/dev/null ||
echo X"$mf" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  else
    continue
  fi
  # Extract the definition of DEPDIR, am__include, and am__quote
  # from the Makefile without running `make'.
  DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
  test -z "$DEPDIR" && continue
  am__include=`sed -n 's/^am__include = //p' < "$mf"`
  test -z "am__include" && continue
  am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
  # When using ansi2knr, U may be empty or an underscore; expand it
  U=`sed -n 's/^U = //p' < "$mf"`
  # Find all dependency output files, they are included files with
  # $(DEPDIR) in their names.  We invoke sed twice because it is the
  # simplest approach to changing $(DEPDIR) to its actual value in the
  # expansion.
  for file in `sed -n "
    s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
       sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g' -e 's/\$U/'"$U"'/g'`; do
    # Make sure the directory exists.
    test -f "$dirpart/$file" && continue
    fdir=`$as_dirname -- "$file" ||
$as_expr X"$file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$file" : 'X\(//\)[^/]' \| \
	 X"$file" : 'X\(//\)$' \| \
	 X"$file" : 'X\(/\)' \| . 2>/dev/null ||
echo X"$file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
    { as_dir=$dirpart/$fdir
  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || { $as_mkdir_p && mkdir -p "$as_dir"; } || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || { { echo "$as_me:$LINENO: error: cannot create directory $as_dir" >&5
echo "$as_me: error: cannot create directory $as_dir" >&2;}
   { (exit 1); exit 1; }; }; }
    # echo "creating $dirpart/$file"
    echo '# dummy' > "$dirpart/$file"
  done
done
 ;;
    "$srcdir/build/Makefile.win32.features":C)
		_config_file=$srcdir/build/Makefile.win32.features
		_tmp_file=cairoconf.tmp
		{ echo "$as_me:$LINENO: creating $_config_file" >&5
echo "$as_me: creating $_config_file" >&6;}
		{
			echo "$CAIRO_MAKEFILE___WIN32"
		} >> "$_tmp_file" ||
	        { { echo "$as_me:$LINENO: error: failed to write to $_tmp_file" >&5
echo "$as_me: error: failed to write to $_tmp_file" >&2;}
   { (exit 1); exit 1; }; }

		if cmp -s "$_tmp_file" "$_config_file"; then
		  { echo "$as_me:$LINENO: $_config_file is unchanged" >&5
echo "$as_me: $_config_file is unchanged" >&6;}
		  rm -f "$_tmp_file"
		else
		  mv "$_tmp_file" "$_config_file" ||
	          { { echo "$as_me:$LINENO: error: failed to update $_config_file" >&5
echo "$as_me: error: failed to update $_config_file" >&2;}
   { (exit 1); exit 1; }; }
		fi
	 ;;
    "$srcdir/src/Makefile.am.features":C)
		_config_file=$srcdir/src/Makefile.am.features
		_tmp_file=cairoconf.tmp
		{ echo "$as_me:$LINENO: creating $_config_file" >&5
echo "$as_me: creating $_config_file" >&6;}
		{
			echo "$CAIRO_MAKEFILE_cairo_AMAKE"
		} >> "$_tmp_file" ||
	        { { echo "$as_me:$LINENO: error: failed to write to $_tmp_file" >&5
echo "$as_me: error: failed to write to $_tmp_file" >&2;}
   { (exit 1); exit 1; }; }

		if cmp -s "$_tmp_file" "$_config_file"; then
		  { echo "$as_me:$LINENO: $_config_file is unchanged" >&5
echo "$as_me: $_config_file is unchanged" >&6;}
		  rm -f "$_tmp_file"
		else
		  mv "$_tmp_file" "$_config_file" ||
	          { { echo "$as_me:$LINENO: error: failed to update $_config_file" >&5
echo "$as_me: error: failed to update $_config_file" >&2;}
   { (exit 1); exit 1; }; }
		fi
	 ;;
    "$srcdir/src/Makefile.win32.features":C)
		_config_file=$srcdir/src/Makefile.win32.features
		_tmp_file=cairoconf.tmp
		{ echo "$as_me:$LINENO: creating $_config_file" >&5
echo "$as_me: creating $_config_file" >&6;}
		{
			echo "$CAIRO_MAKEFILE_cairo_WIN32"
		} >> "$_tmp_file" ||
	        { { echo "$as_me:$LINENO: error: failed to write to $_tmp_file" >&5
echo "$as_me: error: failed to write to $_tmp_file" >&2;}
   { (exit 1); exit 1; }; }

		if cmp -s "$_tmp_file" "$_config_file"; then
		  { echo "$as_me:$LINENO: $_config_file is unchanged" >&5
echo "$as_me: $_config_file is unchanged" >&6;}
		  rm -f "$_tmp_file"
		else
		  mv "$_tmp_file" "$_config_file" ||
	          { { echo "$as_me:$LINENO: error: failed to update $_config_file" >&5
echo "$as_me: error: failed to update $_config_file" >&2;}
   { (exit 1); exit 1; }; }
		fi
	 ;;
    "$srcdir/boilerplate/Makefile.am.features":C)
		_config_file=$srcdir/boilerplate/Makefile.am.features
		_tmp_file=cairoconf.tmp
		{ echo "$as_me:$LINENO: creating $_config_file" >&5
echo "$as_me: creating $_config_file" >&6;}
		{
			echo "$CAIRO_MAKEFILE_cairo_boilerplate_AMAKE"
		} >> "$_tmp_file" ||
	        { { echo "$as_me:$LINENO: error: failed to write to $_tmp_file" >&5
echo "$as_me: error: failed to write to $_tmp_file" >&2;}
   { (exit 1); exit 1; }; }

		if cmp -s "$_tmp_file" "$_config_file"; then
		  { echo "$as_me:$LINENO: $_config_file is unchanged" >&5
echo "$as_me: $_config_file is unchanged" >&6;}
		  rm -f "$_tmp_file"
		else
		  mv "$_tmp_file" "$_config_file" ||
	          { { echo "$as_me:$LINENO: error: failed to update $_config_file" >&5
echo "$as_me: error: failed to update $_config_file" >&2;}
   { (exit 1); exit 1; }; }
		fi
	 ;;
    "$srcdir/boilerplate/Makefile.win32.features":C)
		_config_file=$srcdir/boilerplate/Makefile.win32.features
		_tmp_file=cairoconf.tmp
		{ echo "$as_me:$LINENO: creating $_config_file" >&5
echo "$as_me: creating $_config_file" >&6;}
		{
			echo "$CAIRO_MAKEFILE_cairo_boilerplate_WIN32"
		} >> "$_tmp_file" ||
	        { { echo "$as_me:$LINENO: error: failed to write to $_tmp_file" >&5
echo "$as_me: error: failed to write to $_tmp_file" >&2;}
   { (exit 1); exit 1; }; }

		if cmp -s "$_tmp_file" "$_config_file"; then
		  { echo "$as_me:$LINENO: $_config_file is unchanged" >&5
echo "$as_me: $_config_file is unchanged" >&6;}
		  rm -f "$_tmp_file"
		else
		  mv "$_tmp_file" "$_config_file" ||
	          { { echo "$as_me:$LINENO: error: failed to update $_config_file" >&5
echo "$as_me: error: failed to update $_config_file" >&2;}
   { (exit 1); exit 1; }; }
		fi
	 ;;
    "src/cairo-features.h":C)
		_config_file=src/cairo-features.h
		_tmp_file=cairoconf.tmp
		{ echo "$as_me:$LINENO: creating $_config_file" >&5
echo "$as_me: creating $_config_file" >&6;}
		{
				echo '/* Generated by configure.  Do not edit. */'
	echo '#ifndef CAIRO_FEATURES_H'
	echo '#define CAIRO_FEATURES_H'
	echo ''
	for FEATURE in $CAIRO_FEATURES; do
		echo "#define $FEATURE 1"
	done | LANG=C sort
	echo ''
	for FEATURE in $CAIRO_NO_FEATURES; do
		echo "/*#undef $FEATURE */"
	done | LANG=C sort
	echo ''
	echo '#endif'

		} >> "$_tmp_file" ||
	        { { echo "$as_me:$LINENO: error: failed to write to $_tmp_file" >&5
echo "$as_me: error: failed to write to $_tmp_file" >&2;}
   { (exit 1); exit 1; }; }

		if cmp -s "$_tmp_file" "$_config_file"; then
		  { echo "$as_me:$LINENO: $_config_file is unchanged" >&5
echo "$as_me: $_config_file is unchanged" >&6;}
		  rm -f "$_tmp_file"
		else
		  mv "$_tmp_file" "$_config_file" ||
	          { { echo "$as_me:$LINENO: error: failed to update $_config_file" >&5
echo "$as_me: error: failed to update $_config_file" >&2;}
   { (exit 1); exit 1; }; }
		fi
	 ;;
    "$srcdir/src/cairo-supported-features.h":C)
		_config_file=$srcdir/src/cairo-supported-features.h
		_tmp_file=cairoconf.tmp
		{ echo "$as_me:$LINENO: creating $_config_file" >&5
echo "$as_me: creating $_config_file" >&6;}
		{
				echo '/* Generated by configure.  Do not edit. */'
	echo '#ifndef CAIRO_SUPPORTED_FEATURES_H'
	echo '#define CAIRO_SUPPORTED_FEATURES_H'
	echo ''
	echo '/* This is a dummy header, to trick gtk-doc only */'
	echo ''
	for FEATURE in $CAIRO_SUPPORTED_FEATURES; do
		echo "#define $FEATURE 1"
	done
	echo ''
	echo '#endif'

		} >> "$_tmp_file" ||
	        { { echo "$as_me:$LINENO: error: failed to write to $_tmp_file" >&5
echo "$as_me: error: failed to write to $_tmp_file" >&2;}
   { (exit 1); exit 1; }; }

		if cmp -s "$_tmp_file" "$_config_file"; then
		  { echo "$as_me:$LINENO: $_config_file is unchanged" >&5
echo "$as_me: $_config_file is unchanged" >&6;}
		  rm -f "$_tmp_file"
		else
		  mv "$_tmp_file" "$_config_file" ||
	          { { echo "$as_me:$LINENO: error: failed to update $_config_file" >&5
echo "$as_me: error: failed to update $_config_file" >&2;}
   { (exit 1); exit 1; }; }
		fi
	 ;;
    "$srcdir/build/Makefile.win32.features-h":C)
		_config_file=$srcdir/build/Makefile.win32.features-h
		_tmp_file=cairoconf.tmp
		{ echo "$as_me:$LINENO: creating $_config_file" >&5
echo "$as_me: creating $_config_file" >&6;}
		{
			echo "$CAIRO_MAKEFILE_win32_features_h_WIN32"
		} >> "$_tmp_file" ||
	        { { echo "$as_me:$LINENO: error: failed to write to $_tmp_file" >&5
echo "$as_me: error: failed to write to $_tmp_file" >&2;}
   { (exit 1); exit 1; }; }

		if cmp -s "$_tmp_file" "$_config_file"; then
		  { echo "$as_me:$LINENO: $_config_file is unchanged" >&5
echo "$as_me: $_config_file is unchanged" >&6;}
		  rm -f "$_tmp_file"
		else
		  mv "$_tmp_file" "$_config_file" ||
	          { { echo "$as_me:$LINENO: error: failed to update $_config_file" >&5
echo "$as_me: error: failed to update $_config_file" >&2;}
   { (exit 1); exit 1; }; }
		fi
	 ;;
    "src/cairo-xlib.pc":F) 		mv "src/cairo-xlib.pc" "src/cairo-xlib.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-xlib%g;		s%@FEATURE_NAME@%Xlib surface backend%g;		s%@FEATURE_BASE@%$xlib_BASE%g;		s%@FEATURE_REQUIRES@%$xlib_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$xlib_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$xlib_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-xlib.pc.tmp" > "src/cairo-xlib.pc" && rm -f "src/cairo-xlib.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update src/cairo-xlib.pc" >&5
echo "$as_me: error: failed to update src/cairo-xlib.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "cairo-xlib-uninstalled.pc":F) 		mv "cairo-xlib-uninstalled.pc" "cairo-xlib-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-xlib%g;		s%@FEATURE_NAME@%Xlib surface backend%g;		s%@FEATURE_BASE@%$xlib_BASE%g;		s%@FEATURE_REQUIRES@%$xlib_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$xlib_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$xlib_NONPKGCONFIG_CFLAGS%g;		" < "cairo-xlib-uninstalled.pc.tmp" > "cairo-xlib-uninstalled.pc" && rm -f "cairo-xlib-uninstalled.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update cairo-xlib-uninstalled.pc" >&5
echo "$as_me: error: failed to update cairo-xlib-uninstalled.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "src/cairo-xlib-xrender.pc":F) 		mv "src/cairo-xlib-xrender.pc" "src/cairo-xlib-xrender.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-xlib-xrender%g;		s%@FEATURE_NAME@%Xlib Xrender surface backend%g;		s%@FEATURE_BASE@%$xlib_xrender_BASE%g;		s%@FEATURE_REQUIRES@%$xlib_xrender_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$xlib_xrender_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$xlib_xrender_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-xlib-xrender.pc.tmp" > "src/cairo-xlib-xrender.pc" && rm -f "src/cairo-xlib-xrender.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update src/cairo-xlib-xrender.pc" >&5
echo "$as_me: error: failed to update src/cairo-xlib-xrender.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "cairo-xlib-xrender-uninstalled.pc":F) 		mv "cairo-xlib-xrender-uninstalled.pc" "cairo-xlib-xrender-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-xlib-xrender%g;		s%@FEATURE_NAME@%Xlib Xrender surface backend%g;		s%@FEATURE_BASE@%$xlib_xrender_BASE%g;		s%@FEATURE_REQUIRES@%$xlib_xrender_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$xlib_xrender_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$xlib_xrender_NONPKGCONFIG_CFLAGS%g;		" < "cairo-xlib-xrender-uninstalled.pc.tmp" > "cairo-xlib-xrender-uninstalled.pc" && rm -f "cairo-xlib-xrender-uninstalled.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update cairo-xlib-xrender-uninstalled.pc" >&5
echo "$as_me: error: failed to update cairo-xlib-xrender-uninstalled.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "src/cairo-xcb.pc":F) 		mv "src/cairo-xcb.pc" "src/cairo-xcb.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-xcb%g;		s%@FEATURE_NAME@%XCB surface backend%g;		s%@FEATURE_BASE@%$xcb_BASE%g;		s%@FEATURE_REQUIRES@%$xcb_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$xcb_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$xcb_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-xcb.pc.tmp" > "src/cairo-xcb.pc" && rm -f "src/cairo-xcb.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update src/cairo-xcb.pc" >&5
echo "$as_me: error: failed to update src/cairo-xcb.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "cairo-xcb-uninstalled.pc":F) 		mv "cairo-xcb-uninstalled.pc" "cairo-xcb-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-xcb%g;		s%@FEATURE_NAME@%XCB surface backend%g;		s%@FEATURE_BASE@%$xcb_BASE%g;		s%@FEATURE_REQUIRES@%$xcb_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$xcb_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$xcb_NONPKGCONFIG_CFLAGS%g;		" < "cairo-xcb-uninstalled.pc.tmp" > "cairo-xcb-uninstalled.pc" && rm -f "cairo-xcb-uninstalled.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update cairo-xcb-uninstalled.pc" >&5
echo "$as_me: error: failed to update cairo-xcb-uninstalled.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "src/cairo-quartz.pc":F) 		mv "src/cairo-quartz.pc" "src/cairo-quartz.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-quartz%g;		s%@FEATURE_NAME@%Quartz surface backend%g;		s%@FEATURE_BASE@%$quartz_BASE%g;		s%@FEATURE_REQUIRES@%$quartz_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$quartz_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$quartz_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-quartz.pc.tmp" > "src/cairo-quartz.pc" && rm -f "src/cairo-quartz.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update src/cairo-quartz.pc" >&5
echo "$as_me: error: failed to update src/cairo-quartz.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "cairo-quartz-uninstalled.pc":F) 		mv "cairo-quartz-uninstalled.pc" "cairo-quartz-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-quartz%g;		s%@FEATURE_NAME@%Quartz surface backend%g;		s%@FEATURE_BASE@%$quartz_BASE%g;		s%@FEATURE_REQUIRES@%$quartz_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$quartz_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$quartz_NONPKGCONFIG_CFLAGS%g;		" < "cairo-quartz-uninstalled.pc.tmp" > "cairo-quartz-uninstalled.pc" && rm -f "cairo-quartz-uninstalled.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update cairo-quartz-uninstalled.pc" >&5
echo "$as_me: error: failed to update cairo-quartz-uninstalled.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "src/cairo-quartz-font.pc":F) 		mv "src/cairo-quartz-font.pc" "src/cairo-quartz-font.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-quartz-font%g;		s%@FEATURE_NAME@%Quartz font backend%g;		s%@FEATURE_BASE@%$quartz_font_BASE%g;		s%@FEATURE_REQUIRES@%$quartz_font_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$quartz_font_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$quartz_font_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-quartz-font.pc.tmp" > "src/cairo-quartz-font.pc" && rm -f "src/cairo-quartz-font.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update src/cairo-quartz-font.pc" >&5
echo "$as_me: error: failed to update src/cairo-quartz-font.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "cairo-quartz-font-uninstalled.pc":F) 		mv "cairo-quartz-font-uninstalled.pc" "cairo-quartz-font-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-quartz-font%g;		s%@FEATURE_NAME@%Quartz font backend%g;		s%@FEATURE_BASE@%$quartz_font_BASE%g;		s%@FEATURE_REQUIRES@%$quartz_font_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$quartz_font_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$quartz_font_NONPKGCONFIG_CFLAGS%g;		" < "cairo-quartz-font-uninstalled.pc.tmp" > "cairo-quartz-font-uninstalled.pc" && rm -f "cairo-quartz-font-uninstalled.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update cairo-quartz-font-uninstalled.pc" >&5
echo "$as_me: error: failed to update cairo-quartz-font-uninstalled.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "src/cairo-quartz-image.pc":F) 		mv "src/cairo-quartz-image.pc" "src/cairo-quartz-image.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-quartz-image%g;		s%@FEATURE_NAME@%Quartz Image surface backend%g;		s%@FEATURE_BASE@%$quartz_image_BASE%g;		s%@FEATURE_REQUIRES@%$quartz_image_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$quartz_image_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$quartz_image_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-quartz-image.pc.tmp" > "src/cairo-quartz-image.pc" && rm -f "src/cairo-quartz-image.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update src/cairo-quartz-image.pc" >&5
echo "$as_me: error: failed to update src/cairo-quartz-image.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "cairo-quartz-image-uninstalled.pc":F) 		mv "cairo-quartz-image-uninstalled.pc" "cairo-quartz-image-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-quartz-image%g;		s%@FEATURE_NAME@%Quartz Image surface backend%g;		s%@FEATURE_BASE@%$quartz_image_BASE%g;		s%@FEATURE_REQUIRES@%$quartz_image_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$quartz_image_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$quartz_image_NONPKGCONFIG_CFLAGS%g;		" < "cairo-quartz-image-uninstalled.pc.tmp" > "cairo-quartz-image-uninstalled.pc" && rm -f "cairo-quartz-image-uninstalled.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update cairo-quartz-image-uninstalled.pc" >&5
echo "$as_me: error: failed to update cairo-quartz-image-uninstalled.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "src/cairo-win32.pc":F) 		mv "src/cairo-win32.pc" "src/cairo-win32.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-win32%g;		s%@FEATURE_NAME@%Microsoft Windows surface backend%g;		s%@FEATURE_BASE@%$win32_BASE%g;		s%@FEATURE_REQUIRES@%$win32_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$win32_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$win32_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-win32.pc.tmp" > "src/cairo-win32.pc" && rm -f "src/cairo-win32.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update src/cairo-win32.pc" >&5
echo "$as_me: error: failed to update src/cairo-win32.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "cairo-win32-uninstalled.pc":F) 		mv "cairo-win32-uninstalled.pc" "cairo-win32-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-win32%g;		s%@FEATURE_NAME@%Microsoft Windows surface backend%g;		s%@FEATURE_BASE@%$win32_BASE%g;		s%@FEATURE_REQUIRES@%$win32_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$win32_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$win32_NONPKGCONFIG_CFLAGS%g;		" < "cairo-win32-uninstalled.pc.tmp" > "cairo-win32-uninstalled.pc" && rm -f "cairo-win32-uninstalled.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update cairo-win32-uninstalled.pc" >&5
echo "$as_me: error: failed to update cairo-win32-uninstalled.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "src/cairo-win32-font.pc":F) 		mv "src/cairo-win32-font.pc" "src/cairo-win32-font.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-win32-font%g;		s%@FEATURE_NAME@%Microsoft Windows font backend%g;		s%@FEATURE_BASE@%$win32_font_BASE%g;		s%@FEATURE_REQUIRES@%$win32_font_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$win32_font_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$win32_font_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-win32-font.pc.tmp" > "src/cairo-win32-font.pc" && rm -f "src/cairo-win32-font.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update src/cairo-win32-font.pc" >&5
echo "$as_me: error: failed to update src/cairo-win32-font.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "cairo-win32-font-uninstalled.pc":F) 		mv "cairo-win32-font-uninstalled.pc" "cairo-win32-font-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-win32-font%g;		s%@FEATURE_NAME@%Microsoft Windows font backend%g;		s%@FEATURE_BASE@%$win32_font_BASE%g;		s%@FEATURE_REQUIRES@%$win32_font_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$win32_font_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$win32_font_NONPKGCONFIG_CFLAGS%g;		" < "cairo-win32-font-uninstalled.pc.tmp" > "cairo-win32-font-uninstalled.pc" && rm -f "cairo-win32-font-uninstalled.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update cairo-win32-font-uninstalled.pc" >&5
echo "$as_me: error: failed to update cairo-win32-font-uninstalled.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "src/cairo-os2.pc":F) 		mv "src/cairo-os2.pc" "src/cairo-os2.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-os2%g;		s%@FEATURE_NAME@%OS/2 surface backend%g;		s%@FEATURE_BASE@%$os2_BASE%g;		s%@FEATURE_REQUIRES@%$os2_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$os2_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$os2_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-os2.pc.tmp" > "src/cairo-os2.pc" && rm -f "src/cairo-os2.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update src/cairo-os2.pc" >&5
echo "$as_me: error: failed to update src/cairo-os2.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "cairo-os2-uninstalled.pc":F) 		mv "cairo-os2-uninstalled.pc" "cairo-os2-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-os2%g;		s%@FEATURE_NAME@%OS/2 surface backend%g;		s%@FEATURE_BASE@%$os2_BASE%g;		s%@FEATURE_REQUIRES@%$os2_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$os2_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$os2_NONPKGCONFIG_CFLAGS%g;		" < "cairo-os2-uninstalled.pc.tmp" > "cairo-os2-uninstalled.pc" && rm -f "cairo-os2-uninstalled.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update cairo-os2-uninstalled.pc" >&5
echo "$as_me: error: failed to update cairo-os2-uninstalled.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "src/cairo-beos.pc":F) 		mv "src/cairo-beos.pc" "src/cairo-beos.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-beos%g;		s%@FEATURE_NAME@%BeOS/Zeta surface backend%g;		s%@FEATURE_BASE@%$beos_BASE%g;		s%@FEATURE_REQUIRES@%$beos_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$beos_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$beos_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-beos.pc.tmp" > "src/cairo-beos.pc" && rm -f "src/cairo-beos.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update src/cairo-beos.pc" >&5
echo "$as_me: error: failed to update src/cairo-beos.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "cairo-beos-uninstalled.pc":F) 		mv "cairo-beos-uninstalled.pc" "cairo-beos-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-beos%g;		s%@FEATURE_NAME@%BeOS/Zeta surface backend%g;		s%@FEATURE_BASE@%$beos_BASE%g;		s%@FEATURE_REQUIRES@%$beos_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$beos_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$beos_NONPKGCONFIG_CFLAGS%g;		" < "cairo-beos-uninstalled.pc.tmp" > "cairo-beos-uninstalled.pc" && rm -f "cairo-beos-uninstalled.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update cairo-beos-uninstalled.pc" >&5
echo "$as_me: error: failed to update cairo-beos-uninstalled.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "src/cairo-png.pc":F) 		mv "src/cairo-png.pc" "src/cairo-png.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-png%g;		s%@FEATURE_NAME@%PNG functions%g;		s%@FEATURE_BASE@%$png_BASE%g;		s%@FEATURE_REQUIRES@%$png_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$png_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$png_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-png.pc.tmp" > "src/cairo-png.pc" && rm -f "src/cairo-png.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update src/cairo-png.pc" >&5
echo "$as_me: error: failed to update src/cairo-png.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "cairo-png-uninstalled.pc":F) 		mv "cairo-png-uninstalled.pc" "cairo-png-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-png%g;		s%@FEATURE_NAME@%PNG functions%g;		s%@FEATURE_BASE@%$png_BASE%g;		s%@FEATURE_REQUIRES@%$png_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$png_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$png_NONPKGCONFIG_CFLAGS%g;		" < "cairo-png-uninstalled.pc.tmp" > "cairo-png-uninstalled.pc" && rm -f "cairo-png-uninstalled.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update cairo-png-uninstalled.pc" >&5
echo "$as_me: error: failed to update cairo-png-uninstalled.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "src/cairo-glitz.pc":F) 		mv "src/cairo-glitz.pc" "src/cairo-glitz.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-glitz%g;		s%@FEATURE_NAME@%glitz surface backend%g;		s%@FEATURE_BASE@%$glitz_BASE%g;		s%@FEATURE_REQUIRES@%$glitz_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$glitz_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$glitz_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-glitz.pc.tmp" > "src/cairo-glitz.pc" && rm -f "src/cairo-glitz.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update src/cairo-glitz.pc" >&5
echo "$as_me: error: failed to update src/cairo-glitz.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "cairo-glitz-uninstalled.pc":F) 		mv "cairo-glitz-uninstalled.pc" "cairo-glitz-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-glitz%g;		s%@FEATURE_NAME@%glitz surface backend%g;		s%@FEATURE_BASE@%$glitz_BASE%g;		s%@FEATURE_REQUIRES@%$glitz_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$glitz_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$glitz_NONPKGCONFIG_CFLAGS%g;		" < "cairo-glitz-uninstalled.pc.tmp" > "cairo-glitz-uninstalled.pc" && rm -f "cairo-glitz-uninstalled.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update cairo-glitz-uninstalled.pc" >&5
echo "$as_me: error: failed to update cairo-glitz-uninstalled.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "src/cairo-directfb.pc":F) 		mv "src/cairo-directfb.pc" "src/cairo-directfb.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-directfb%g;		s%@FEATURE_NAME@%directfb surface backend%g;		s%@FEATURE_BASE@%$directfb_BASE%g;		s%@FEATURE_REQUIRES@%$directfb_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$directfb_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$directfb_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-directfb.pc.tmp" > "src/cairo-directfb.pc" && rm -f "src/cairo-directfb.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update src/cairo-directfb.pc" >&5
echo "$as_me: error: failed to update src/cairo-directfb.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "cairo-directfb-uninstalled.pc":F) 		mv "cairo-directfb-uninstalled.pc" "cairo-directfb-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-directfb%g;		s%@FEATURE_NAME@%directfb surface backend%g;		s%@FEATURE_BASE@%$directfb_BASE%g;		s%@FEATURE_REQUIRES@%$directfb_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$directfb_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$directfb_NONPKGCONFIG_CFLAGS%g;		" < "cairo-directfb-uninstalled.pc.tmp" > "cairo-directfb-uninstalled.pc" && rm -f "cairo-directfb-uninstalled.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update cairo-directfb-uninstalled.pc" >&5
echo "$as_me: error: failed to update cairo-directfb-uninstalled.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "src/cairo-ft.pc":F) 		mv "src/cairo-ft.pc" "src/cairo-ft.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-ft%g;		s%@FEATURE_NAME@%FreeType font backend%g;		s%@FEATURE_BASE@%$ft_BASE%g;		s%@FEATURE_REQUIRES@%$ft_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$ft_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$ft_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-ft.pc.tmp" > "src/cairo-ft.pc" && rm -f "src/cairo-ft.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update src/cairo-ft.pc" >&5
echo "$as_me: error: failed to update src/cairo-ft.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "cairo-ft-uninstalled.pc":F) 		mv "cairo-ft-uninstalled.pc" "cairo-ft-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-ft%g;		s%@FEATURE_NAME@%FreeType font backend%g;		s%@FEATURE_BASE@%$ft_BASE%g;		s%@FEATURE_REQUIRES@%$ft_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$ft_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$ft_NONPKGCONFIG_CFLAGS%g;		" < "cairo-ft-uninstalled.pc.tmp" > "cairo-ft-uninstalled.pc" && rm -f "cairo-ft-uninstalled.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update cairo-ft-uninstalled.pc" >&5
echo "$as_me: error: failed to update cairo-ft-uninstalled.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "src/cairo-ps.pc":F) 		mv "src/cairo-ps.pc" "src/cairo-ps.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-ps%g;		s%@FEATURE_NAME@%PostScript surface backend%g;		s%@FEATURE_BASE@%$ps_BASE%g;		s%@FEATURE_REQUIRES@%$ps_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$ps_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$ps_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-ps.pc.tmp" > "src/cairo-ps.pc" && rm -f "src/cairo-ps.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update src/cairo-ps.pc" >&5
echo "$as_me: error: failed to update src/cairo-ps.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "cairo-ps-uninstalled.pc":F) 		mv "cairo-ps-uninstalled.pc" "cairo-ps-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-ps%g;		s%@FEATURE_NAME@%PostScript surface backend%g;		s%@FEATURE_BASE@%$ps_BASE%g;		s%@FEATURE_REQUIRES@%$ps_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$ps_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$ps_NONPKGCONFIG_CFLAGS%g;		" < "cairo-ps-uninstalled.pc.tmp" > "cairo-ps-uninstalled.pc" && rm -f "cairo-ps-uninstalled.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update cairo-ps-uninstalled.pc" >&5
echo "$as_me: error: failed to update cairo-ps-uninstalled.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "src/cairo-pdf.pc":F) 		mv "src/cairo-pdf.pc" "src/cairo-pdf.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-pdf%g;		s%@FEATURE_NAME@%PDF surface backend%g;		s%@FEATURE_BASE@%$pdf_BASE%g;		s%@FEATURE_REQUIRES@%$pdf_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$pdf_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$pdf_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-pdf.pc.tmp" > "src/cairo-pdf.pc" && rm -f "src/cairo-pdf.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update src/cairo-pdf.pc" >&5
echo "$as_me: error: failed to update src/cairo-pdf.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "cairo-pdf-uninstalled.pc":F) 		mv "cairo-pdf-uninstalled.pc" "cairo-pdf-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-pdf%g;		s%@FEATURE_NAME@%PDF surface backend%g;		s%@FEATURE_BASE@%$pdf_BASE%g;		s%@FEATURE_REQUIRES@%$pdf_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$pdf_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$pdf_NONPKGCONFIG_CFLAGS%g;		" < "cairo-pdf-uninstalled.pc.tmp" > "cairo-pdf-uninstalled.pc" && rm -f "cairo-pdf-uninstalled.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update cairo-pdf-uninstalled.pc" >&5
echo "$as_me: error: failed to update cairo-pdf-uninstalled.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "src/cairo-svg.pc":F) 		mv "src/cairo-svg.pc" "src/cairo-svg.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-svg%g;		s%@FEATURE_NAME@%SVG surface backend%g;		s%@FEATURE_BASE@%$svg_BASE%g;		s%@FEATURE_REQUIRES@%$svg_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$svg_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$svg_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-svg.pc.tmp" > "src/cairo-svg.pc" && rm -f "src/cairo-svg.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update src/cairo-svg.pc" >&5
echo "$as_me: error: failed to update src/cairo-svg.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;
    "cairo-svg-uninstalled.pc":F) 		mv "cairo-svg-uninstalled.pc" "cairo-svg-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-svg%g;		s%@FEATURE_NAME@%SVG surface backend%g;		s%@FEATURE_BASE@%$svg_BASE%g;		s%@FEATURE_REQUIRES@%$svg_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$svg_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$svg_NONPKGCONFIG_CFLAGS%g;		" < "cairo-svg-uninstalled.pc.tmp" > "cairo-svg-uninstalled.pc" && rm -f "cairo-svg-uninstalled.pc.tmp" ||
		{ { echo "$as_me:$LINENO: error: failed to update cairo-svg-uninstalled.pc" >&5
echo "$as_me: error: failed to update cairo-svg-uninstalled.pc" >&2;}
   { (exit 1); exit 1; }; }
	 ;;

  esac
done # for ac_tag


{ (exit 0); exit 0; }
