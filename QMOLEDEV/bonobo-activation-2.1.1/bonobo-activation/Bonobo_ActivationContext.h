/*
 * This file was generated by orbit-idl-2 - DO NOT EDIT!
 */

#ifndef Bonobo_ActivationContext_H
#define Bonobo_ActivationContext_H 1
#include <glib.h>
#define ORBIT_IDL_SERIAL 20
#include <orbit/orbit-types.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/** typedefs **/
#include <bonobo-activation/Bonobo_Unknown.h>
#include <bonobo-activation/Bonobo_Activation_types.h>
#if !defined(ORBIT_DECL_Bonobo_ActivationContext) && !defined(_Bonobo_ActivationContext_defined)
#define ORBIT_DECL_Bonobo_ActivationContext 1
#define _Bonobo_ActivationContext_defined 1
#define Bonobo_ActivationContext__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_ActivationContext;
extern CORBA_unsigned_long Bonobo_ActivationContext__classid;
#if !defined(TC_IMPL_TC_Bonobo_ActivationContext_0)
#define TC_IMPL_TC_Bonobo_ActivationContext_0 'B'
#define TC_IMPL_TC_Bonobo_ActivationContext_1 'o'
#define TC_IMPL_TC_Bonobo_ActivationContext_2 'n'
#define TC_IMPL_TC_Bonobo_ActivationContext_3 'o'
#define TC_IMPL_TC_Bonobo_ActivationContext_4 'b'
#define TC_IMPL_TC_Bonobo_ActivationContext_5 'o'
#define TC_IMPL_TC_Bonobo_ActivationContext_6 '_'
#define TC_IMPL_TC_Bonobo_ActivationContext_7 'A'
#define TC_IMPL_TC_Bonobo_ActivationContext_8 'c'
#define TC_IMPL_TC_Bonobo_ActivationContext_9 't'
#define TC_IMPL_TC_Bonobo_ActivationContext_10 'i'
#define TC_IMPL_TC_Bonobo_ActivationContext_11 'v'
#define TC_IMPL_TC_Bonobo_ActivationContext_12 'a'
#define TC_IMPL_TC_Bonobo_ActivationContext_13 't'
#define TC_IMPL_TC_Bonobo_ActivationContext_14 'i'
#define TC_IMPL_TC_Bonobo_ActivationContext_15 'o'
#define TC_IMPL_TC_Bonobo_ActivationContext_16 'n'
#define TC_IMPL_TC_Bonobo_ActivationContext_17 'C'
#define TC_IMPL_TC_Bonobo_ActivationContext_18 'o'
#define TC_IMPL_TC_Bonobo_ActivationContext_19 'n'
#define TC_IMPL_TC_Bonobo_ActivationContext_20 't'
#define TC_IMPL_TC_Bonobo_ActivationContext_21 'e'
#define TC_IMPL_TC_Bonobo_ActivationContext_22 'x'
#define TC_IMPL_TC_Bonobo_ActivationContext_23 't'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo_ActivationContext
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ActivationContext_struct;
#define TC_Bonobo_ActivationContext ((CORBA_TypeCode)&TC_Bonobo_ActivationContext_struct)
#endif
#endif
#include <bonobo-activation/Bonobo_ObjectDirectory.h>
#if !defined(ORBIT_DECL_Bonobo_ActivationClient) && !defined(_Bonobo_ActivationClient_defined)
#define ORBIT_DECL_Bonobo_ActivationClient 1
#define _Bonobo_ActivationClient_defined 1
#define Bonobo_ActivationClient__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_ActivationClient;
extern CORBA_unsigned_long Bonobo_ActivationClient__classid;
#if !defined(TC_IMPL_TC_Bonobo_ActivationClient_0)
#define TC_IMPL_TC_Bonobo_ActivationClient_0 'B'
#define TC_IMPL_TC_Bonobo_ActivationClient_1 'o'
#define TC_IMPL_TC_Bonobo_ActivationClient_2 'n'
#define TC_IMPL_TC_Bonobo_ActivationClient_3 'o'
#define TC_IMPL_TC_Bonobo_ActivationClient_4 'b'
#define TC_IMPL_TC_Bonobo_ActivationClient_5 'o'
#define TC_IMPL_TC_Bonobo_ActivationClient_6 '_'
#define TC_IMPL_TC_Bonobo_ActivationClient_7 'A'
#define TC_IMPL_TC_Bonobo_ActivationClient_8 'c'
#define TC_IMPL_TC_Bonobo_ActivationClient_9 't'
#define TC_IMPL_TC_Bonobo_ActivationClient_10 'i'
#define TC_IMPL_TC_Bonobo_ActivationClient_11 'v'
#define TC_IMPL_TC_Bonobo_ActivationClient_12 'a'
#define TC_IMPL_TC_Bonobo_ActivationClient_13 't'
#define TC_IMPL_TC_Bonobo_ActivationClient_14 'i'
#define TC_IMPL_TC_Bonobo_ActivationClient_15 'o'
#define TC_IMPL_TC_Bonobo_ActivationClient_16 'n'
#define TC_IMPL_TC_Bonobo_ActivationClient_17 'C'
#define TC_IMPL_TC_Bonobo_ActivationClient_18 'o'
#define TC_IMPL_TC_Bonobo_ActivationClient_19 'n'
#define TC_IMPL_TC_Bonobo_ActivationClient_20 't'
#define TC_IMPL_TC_Bonobo_ActivationClient_21 'e'
#define TC_IMPL_TC_Bonobo_ActivationClient_22 'x'
#define TC_IMPL_TC_Bonobo_ActivationClient_23 't'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo_ActivationContext
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ActivationClient_struct;
#define TC_Bonobo_ActivationClient ((CORBA_TypeCode)&TC_Bonobo_ActivationClient_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_Object)
#define ORBIT_DECL_CORBA_sequence_CORBA_Object 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_0 'B'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_2 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_3 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_4 'b'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_5 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_6 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_7 'A'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_8 'c'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_9 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_10 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_11 'v'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_12 'a'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_13 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_14 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_15 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_16 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_17 'C'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_18 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_19 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_20 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_21 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_22 'x'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_23 't'
#if !defined(_CORBA_sequence_CORBA_Object_defined)
#define _CORBA_sequence_CORBA_Object_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_Object* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_Object;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_Object_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_0 'B'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_2 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_3 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_4 'b'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_5 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_6 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_7 'A'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_8 'c'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_9 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_10 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_11 'v'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_12 'a'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_13 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_14 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_15 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_16 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_17 'C'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_18 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_19 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_20 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_21 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_22 'x'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_23 't'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo_ActivationContext
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_Object_struct;
#define TC_CORBA_sequence_CORBA_Object ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_Object_struct)
#endif
#define CORBA_sequence_CORBA_Object__alloc() ((CORBA_sequence_CORBA_Object *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_Object))
#define CORBA_sequence_CORBA_Object__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_Object,(m),(d))
#define CORBA_sequence_CORBA_Object_allocbuf(l) ((CORBA_Object*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_Object, (l)))
#define CORBA_sequence_CORBA_Object_allocbuf(l) ((CORBA_Object*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_Object, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_Bonobo_ObjectDirectory)
#define ORBIT_DECL_CORBA_sequence_Bonobo_ObjectDirectory 1
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ObjectDirectory_0 'B'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ObjectDirectory_1 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ObjectDirectory_2 'n'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ObjectDirectory_3 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ObjectDirectory_4 'b'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ObjectDirectory_5 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ObjectDirectory_6 '_'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ObjectDirectory_7 'A'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ObjectDirectory_8 'c'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ObjectDirectory_9 't'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ObjectDirectory_10 'i'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ObjectDirectory_11 'v'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ObjectDirectory_12 'a'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ObjectDirectory_13 't'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ObjectDirectory_14 'i'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ObjectDirectory_15 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ObjectDirectory_16 'n'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ObjectDirectory_17 'C'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ObjectDirectory_18 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ObjectDirectory_19 'n'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ObjectDirectory_20 't'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ObjectDirectory_21 'e'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ObjectDirectory_22 'x'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ObjectDirectory_23 't'
#if !defined(_CORBA_sequence_Bonobo_ObjectDirectory_defined)
#define _CORBA_sequence_Bonobo_ObjectDirectory_defined 1
typedef CORBA_sequence_CORBA_Object CORBA_sequence_Bonobo_ObjectDirectory;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_0)
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_0 'B'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_1 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_2 'n'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_3 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_4 'b'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_5 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_6 '_'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_7 'A'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_8 'c'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_9 't'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_10 'i'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_11 'v'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_12 'a'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_13 't'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_14 'i'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_15 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_16 'n'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_17 'C'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_18 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_19 'n'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_20 't'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_21 'e'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_22 'x'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ObjectDirectory_23 't'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo_ActivationContext
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_Bonobo_ObjectDirectory_struct;
#define TC_CORBA_sequence_Bonobo_ObjectDirectory ((CORBA_TypeCode)&TC_CORBA_sequence_Bonobo_ObjectDirectory_struct)
#endif
#define CORBA_sequence_Bonobo_ObjectDirectory__alloc CORBA_sequence_CORBA_Object__alloc
#define CORBA_sequence_Bonobo_ObjectDirectory__freekids CORBA_sequence_CORBA_Object__freekids
#define CORBA_sequence_Bonobo_ObjectDirectory_allocbuf CORBA_sequence_CORBA_Object_allocbuf
#define CORBA_sequence_Bonobo_ObjectDirectory_marshal(x,y,z) CORBA_sequence_CORBA_Object_marshal((x),(y),(z))
#define CORBA_sequence_Bonobo_ObjectDirectory_demarshal(x,y,z,i) CORBA_sequence_CORBA_Object_demarshal((x),(y),(z),(i))
#endif
#if !defined(_Bonobo_ObjectDirectoryList_defined)
#define _Bonobo_ObjectDirectoryList_defined 1
typedef CORBA_sequence_Bonobo_ObjectDirectory Bonobo_ObjectDirectoryList;
#define Bonobo_ObjectDirectoryList_marshal(x,y,z) CORBA_sequence_Bonobo_ObjectDirectory_marshal((x),(y),(z))
#define Bonobo_ObjectDirectoryList_demarshal(x,y,z,i) CORBA_sequence_Bonobo_ObjectDirectory_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_ObjectDirectoryList_0)
#define TC_IMPL_TC_Bonobo_ObjectDirectoryList_0 'B'
#define TC_IMPL_TC_Bonobo_ObjectDirectoryList_1 'o'
#define TC_IMPL_TC_Bonobo_ObjectDirectoryList_2 'n'
#define TC_IMPL_TC_Bonobo_ObjectDirectoryList_3 'o'
#define TC_IMPL_TC_Bonobo_ObjectDirectoryList_4 'b'
#define TC_IMPL_TC_Bonobo_ObjectDirectoryList_5 'o'
#define TC_IMPL_TC_Bonobo_ObjectDirectoryList_6 '_'
#define TC_IMPL_TC_Bonobo_ObjectDirectoryList_7 'A'
#define TC_IMPL_TC_Bonobo_ObjectDirectoryList_8 'c'
#define TC_IMPL_TC_Bonobo_ObjectDirectoryList_9 't'
#define TC_IMPL_TC_Bonobo_ObjectDirectoryList_10 'i'
#define TC_IMPL_TC_Bonobo_ObjectDirectoryList_11 'v'
#define TC_IMPL_TC_Bonobo_ObjectDirectoryList_12 'a'
#define TC_IMPL_TC_Bonobo_ObjectDirectoryList_13 't'
#define TC_IMPL_TC_Bonobo_ObjectDirectoryList_14 'i'
#define TC_IMPL_TC_Bonobo_ObjectDirectoryList_15 'o'
#define TC_IMPL_TC_Bonobo_ObjectDirectoryList_16 'n'
#define TC_IMPL_TC_Bonobo_ObjectDirectoryList_17 'C'
#define TC_IMPL_TC_Bonobo_ObjectDirectoryList_18 'o'
#define TC_IMPL_TC_Bonobo_ObjectDirectoryList_19 'n'
#define TC_IMPL_TC_Bonobo_ObjectDirectoryList_20 't'
#define TC_IMPL_TC_Bonobo_ObjectDirectoryList_21 'e'
#define TC_IMPL_TC_Bonobo_ObjectDirectoryList_22 'x'
#define TC_IMPL_TC_Bonobo_ObjectDirectoryList_23 't'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo_ActivationContext
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ObjectDirectoryList_struct;
#define TC_Bonobo_ObjectDirectoryList ((CORBA_TypeCode)&TC_Bonobo_ObjectDirectoryList_struct)
#endif
#define Bonobo_ObjectDirectoryList__alloc() ((Bonobo_ObjectDirectoryList *)ORBit_small_alloc (TC_CORBA_sequence_Bonobo_ObjectDirectory))
#define Bonobo_ObjectDirectoryList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_Bonobo_ObjectDirectory,(m),(d))
#define Bonobo_ObjectDirectoryList_allocbuf(l) ((Bonobo_ObjectDirectory*)ORBit_small_allocbuf (TC_CORBA_sequence_Bonobo_ObjectDirectory, (l)))
#endif
#if !defined(ORBIT_DECL_Bonobo_ActivationContext) && !defined(_Bonobo_ActivationContext_defined)
#define ORBIT_DECL_Bonobo_ActivationContext 1
#define _Bonobo_ActivationContext_defined 1
#define Bonobo_ActivationContext__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_ActivationContext;
extern CORBA_unsigned_long Bonobo_ActivationContext__classid;
#if !defined(TC_IMPL_TC_Bonobo_ActivationContext_0)
#define TC_IMPL_TC_Bonobo_ActivationContext_0 'B'
#define TC_IMPL_TC_Bonobo_ActivationContext_1 'o'
#define TC_IMPL_TC_Bonobo_ActivationContext_2 'n'
#define TC_IMPL_TC_Bonobo_ActivationContext_3 'o'
#define TC_IMPL_TC_Bonobo_ActivationContext_4 'b'
#define TC_IMPL_TC_Bonobo_ActivationContext_5 'o'
#define TC_IMPL_TC_Bonobo_ActivationContext_6 '_'
#define TC_IMPL_TC_Bonobo_ActivationContext_7 'A'
#define TC_IMPL_TC_Bonobo_ActivationContext_8 'c'
#define TC_IMPL_TC_Bonobo_ActivationContext_9 't'
#define TC_IMPL_TC_Bonobo_ActivationContext_10 'i'
#define TC_IMPL_TC_Bonobo_ActivationContext_11 'v'
#define TC_IMPL_TC_Bonobo_ActivationContext_12 'a'
#define TC_IMPL_TC_Bonobo_ActivationContext_13 't'
#define TC_IMPL_TC_Bonobo_ActivationContext_14 'i'
#define TC_IMPL_TC_Bonobo_ActivationContext_15 'o'
#define TC_IMPL_TC_Bonobo_ActivationContext_16 'n'
#define TC_IMPL_TC_Bonobo_ActivationContext_17 'C'
#define TC_IMPL_TC_Bonobo_ActivationContext_18 'o'
#define TC_IMPL_TC_Bonobo_ActivationContext_19 'n'
#define TC_IMPL_TC_Bonobo_ActivationContext_20 't'
#define TC_IMPL_TC_Bonobo_ActivationContext_21 'e'
#define TC_IMPL_TC_Bonobo_ActivationContext_22 'x'
#define TC_IMPL_TC_Bonobo_ActivationContext_23 't'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo_ActivationContext
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ActivationContext_struct;
#define TC_Bonobo_ActivationContext ((CORBA_TypeCode)&TC_Bonobo_ActivationContext_struct)
#endif
#endif

/** POA structures **/
#ifndef _defined_POA_Bonobo_ActivationClient
#define _defined_POA_Bonobo_ActivationClient 1
typedef struct {
  void *_private;
void (*resetCache)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_ActivationClient__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_ActivationClient__epv *Bonobo_ActivationClient_epv;
} POA_Bonobo_ActivationClient__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_ActivationClient__vepv *vepv;
} POA_Bonobo_ActivationClient;
extern void POA_Bonobo_ActivationClient__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_ActivationClient__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_ActivationClient */
#ifndef _defined_POA_Bonobo_ActivationContext
#define _defined_POA_Bonobo_ActivationContext 1
typedef struct {
  void *_private;
Bonobo_ObjectDirectoryList* (*_get_directories)(PortableServer_Servant _servant, CORBA_Environment *ev);
Bonobo_ServerInfoList* (*_get_servers)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*addClient)(PortableServer_Servant _servant, const Bonobo_ActivationClient client, const CORBA_char * locales, CORBA_Environment *ev);
void (*addDirectory)(PortableServer_Servant _servant, const Bonobo_ObjectDirectory dir, CORBA_Environment *ev);
void (*removeDirectory)(PortableServer_Servant _servant, const Bonobo_ObjectDirectory dir, CORBA_Environment *ev);
Bonobo_ServerInfoList* (*query)(PortableServer_Servant _servant, const CORBA_char * requirements, const Bonobo_StringList* selection_order, CORBA_Context _ctx, CORBA_Environment *ev);
Bonobo_ActivationResult* (*activateMatching)(PortableServer_Servant _servant, const CORBA_char * requirements, const Bonobo_StringList* selection_order, const Bonobo_ActivationEnvironment* environment, const Bonobo_ActivationFlags flags, CORBA_Context _ctx, CORBA_Environment *ev);
Bonobo_ActivationResult* (*activateFromAid)(PortableServer_Servant _servant, const CORBA_char * aid, const Bonobo_ActivationFlags flags, CORBA_Context _ctx, CORBA_Environment *ev);
} POA_Bonobo_ActivationContext__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_ActivationContext__epv *Bonobo_ActivationContext_epv;
} POA_Bonobo_ActivationContext__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_ActivationContext__vepv *vepv;
} POA_Bonobo_ActivationContext;
extern void POA_Bonobo_ActivationContext__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_ActivationContext__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_ActivationContext */

/** skel prototypes **/
void _ORBIT_skel_small_Bonobo_ActivationClient_resetCache(POA_Bonobo_ActivationClient *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_resetCache)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ActivationContext__get_directories(POA_Bonobo_ActivationContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_ObjectDirectoryList* (*_impl__get_directories)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ActivationContext__get_servers(POA_Bonobo_ActivationContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_ServerInfoList* (*_impl__get_servers)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ActivationContext_addClient(POA_Bonobo_ActivationContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_addClient)(PortableServer_Servant _servant, const Bonobo_ActivationClient client, const CORBA_char * locales, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ActivationContext_addDirectory(POA_Bonobo_ActivationContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_addDirectory)(PortableServer_Servant _servant, const Bonobo_ObjectDirectory dir, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ActivationContext_removeDirectory(POA_Bonobo_ActivationContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_removeDirectory)(PortableServer_Servant _servant, const Bonobo_ObjectDirectory dir, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ActivationContext_query(POA_Bonobo_ActivationContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_ServerInfoList* (*_impl_query)(PortableServer_Servant _servant, const CORBA_char * requirements, const Bonobo_StringList* selection_order, CORBA_Context _ctx, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ActivationContext_activateMatching(POA_Bonobo_ActivationContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_ActivationResult* (*_impl_activateMatching)(PortableServer_Servant _servant, const CORBA_char * requirements, const Bonobo_StringList* selection_order, const Bonobo_ActivationEnvironment* environment, const Bonobo_ActivationFlags flags, CORBA_Context _ctx, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ActivationContext_activateFromAid(POA_Bonobo_ActivationContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_ActivationResult* (*_impl_activateFromAid)(PortableServer_Servant _servant, const CORBA_char * aid, const Bonobo_ActivationFlags flags, CORBA_Context _ctx, CORBA_Environment *ev));

/** stub prototypes **/
#define Bonobo_ActivationClient_ref Bonobo_Unknown_ref
#define Bonobo_ActivationClient_unref Bonobo_Unknown_unref
#define Bonobo_ActivationClient_queryInterface Bonobo_Unknown_queryInterface
void Bonobo_ActivationClient_resetCache(Bonobo_ActivationClient _obj, CORBA_Environment *ev);
#define Bonobo_ActivationContext_ref Bonobo_Unknown_ref
#define Bonobo_ActivationContext_unref Bonobo_Unknown_unref
#define Bonobo_ActivationContext_queryInterface Bonobo_Unknown_queryInterface
Bonobo_ObjectDirectoryList* Bonobo_ActivationContext__get_directories(Bonobo_ActivationContext _obj, CORBA_Environment *ev);
Bonobo_ServerInfoList* Bonobo_ActivationContext__get_servers(Bonobo_ActivationContext _obj, CORBA_Environment *ev);
void Bonobo_ActivationContext_addClient(Bonobo_ActivationContext _obj, const Bonobo_ActivationClient client, const CORBA_char * locales, CORBA_Environment *ev);
void Bonobo_ActivationContext_addDirectory(Bonobo_ActivationContext _obj, const Bonobo_ObjectDirectory dir, CORBA_Environment *ev);
void Bonobo_ActivationContext_removeDirectory(Bonobo_ActivationContext _obj, const Bonobo_ObjectDirectory dir, CORBA_Environment *ev);
Bonobo_ServerInfoList* Bonobo_ActivationContext_query(Bonobo_ActivationContext _obj, const CORBA_char * requirements, const Bonobo_StringList* selection_order, CORBA_Context _ctx, CORBA_Environment *ev);
Bonobo_ActivationResult* Bonobo_ActivationContext_activateMatching(Bonobo_ActivationContext _obj, const CORBA_char * requirements, const Bonobo_StringList* selection_order, const Bonobo_ActivationEnvironment* environment, const Bonobo_ActivationFlags flags, CORBA_Context _ctx, CORBA_Environment *ev);
Bonobo_ActivationResult* Bonobo_ActivationContext_activateFromAid(Bonobo_ActivationContext _obj, const CORBA_char * aid, const Bonobo_ActivationFlags flags, CORBA_Context _ctx, CORBA_Environment *ev);
#include <orbit/orb-core/orbit-interface.h>

#ifdef ORBIT_IDL_C_IMODULE_Bonobo_ActivationContext
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_ActivationClient__iinterface;
#define Bonobo_ActivationClient_IMETHODS_LEN 1
#ifdef ORBIT_IDL_C_IMODULE_Bonobo_ActivationContext
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_ActivationClient__imethods[Bonobo_ActivationClient_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo_ActivationContext
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_ActivationContext__iinterface;
#define Bonobo_ActivationContext_IMETHODS_LEN 8
#ifdef ORBIT_IDL_C_IMODULE_Bonobo_ActivationContext
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_ActivationContext__imethods[Bonobo_ActivationContext_IMETHODS_LEN];

/** IMethods index */

#ifndef __Bonobo_ActivationClient__imethods_index
#define __Bonobo_ActivationClient__imethods_index
typedef enum {
	Bonobo_ActivationClient_resetCache__imethods_index
} Bonobo_ActivationClient__imethods_index;
#endif /* __Bonobo_ActivationClient__imethods_index */

#ifndef __Bonobo_ActivationContext__imethods_index
#define __Bonobo_ActivationContext__imethods_index
typedef enum {
	Bonobo_ActivationContext__get_directories__imethods_index,
	Bonobo_ActivationContext__get_servers__imethods_index,
	Bonobo_ActivationContext_addClient__imethods_index,
	Bonobo_ActivationContext_addDirectory__imethods_index,
	Bonobo_ActivationContext_removeDirectory__imethods_index,
	Bonobo_ActivationContext_query__imethods_index,
	Bonobo_ActivationContext_activateMatching__imethods_index,
	Bonobo_ActivationContext_activateFromAid__imethods_index
} Bonobo_ActivationContext__imethods_index;
#endif /* __Bonobo_ActivationContext__imethods_index */

#ifndef __ORBIT_IMETHODS_INDEX
#define __ORBIT_IMETHODS_INDEX
#define ORBIT_IMETHODS_INDEX(m) (m ## __imethods_index)
#endif /* __ORBIT_IMETHODS_INDEX */

#ifdef __cplusplus
}
#endif /* __cplusplus */

#ifndef EXCLUDE_ORBIT_H
#include <orbit/orbit.h>

#endif /* EXCLUDE_ORBIT_H */
#endif
#undef ORBIT_IDL_SERIAL
