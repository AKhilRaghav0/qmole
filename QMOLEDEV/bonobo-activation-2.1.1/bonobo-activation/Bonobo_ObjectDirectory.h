/*
 * This file was generated by orbit-idl-2 - DO NOT EDIT!
 */

#ifndef Bonobo_ObjectDirectory_H
#define Bonobo_ObjectDirectory_H 1
#include <glib.h>
#define ORBIT_IDL_SERIAL 20
#include <orbit/orbit-types.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/** typedefs **/
#include <bonobo-activation/Bonobo_Unknown.h>
#include <bonobo-activation/Bonobo_Activation_types.h>
#if !defined(ORBIT_DECL_Bonobo_ObjectDirectory) && !defined(_Bonobo_ObjectDirectory_defined)
#define ORBIT_DECL_Bonobo_ObjectDirectory 1
#define _Bonobo_ObjectDirectory_defined 1
#define Bonobo_ObjectDirectory__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_ObjectDirectory;
extern CORBA_unsigned_long Bonobo_ObjectDirectory__classid;
#if !defined(TC_IMPL_TC_Bonobo_ObjectDirectory_0)
#define TC_IMPL_TC_Bonobo_ObjectDirectory_0 'B'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_1 'o'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_2 'n'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_3 'o'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_4 'b'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_5 'o'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_6 '_'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_7 'O'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_8 'b'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_9 'j'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_10 'e'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_11 'c'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_12 't'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_13 'D'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_14 'i'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_15 'r'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_16 'e'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_17 'c'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_18 't'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_19 'o'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_20 'r'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_21 'y'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo_ObjectDirectory
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ObjectDirectory_struct;
#define TC_Bonobo_ObjectDirectory ((CORBA_TypeCode)&TC_Bonobo_ObjectDirectory_struct)
#endif
#endif
#include <bonobo-activation/Bonobo_ActivationContext.h>
#if !defined(_Bonobo_CacheTime_defined)
#define _Bonobo_CacheTime_defined 1
typedef CORBA_long_long Bonobo_CacheTime;
#define Bonobo_CacheTime_marshal(x,y,z) CORBA_long_long_marshal((x),(y),(z))
#define Bonobo_CacheTime_demarshal(x,y,z,i) CORBA_long_long_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_CacheTime_0)
#define TC_IMPL_TC_Bonobo_CacheTime_0 'B'
#define TC_IMPL_TC_Bonobo_CacheTime_1 'o'
#define TC_IMPL_TC_Bonobo_CacheTime_2 'n'
#define TC_IMPL_TC_Bonobo_CacheTime_3 'o'
#define TC_IMPL_TC_Bonobo_CacheTime_4 'b'
#define TC_IMPL_TC_Bonobo_CacheTime_5 'o'
#define TC_IMPL_TC_Bonobo_CacheTime_6 '_'
#define TC_IMPL_TC_Bonobo_CacheTime_7 'O'
#define TC_IMPL_TC_Bonobo_CacheTime_8 'b'
#define TC_IMPL_TC_Bonobo_CacheTime_9 'j'
#define TC_IMPL_TC_Bonobo_CacheTime_10 'e'
#define TC_IMPL_TC_Bonobo_CacheTime_11 'c'
#define TC_IMPL_TC_Bonobo_CacheTime_12 't'
#define TC_IMPL_TC_Bonobo_CacheTime_13 'D'
#define TC_IMPL_TC_Bonobo_CacheTime_14 'i'
#define TC_IMPL_TC_Bonobo_CacheTime_15 'r'
#define TC_IMPL_TC_Bonobo_CacheTime_16 'e'
#define TC_IMPL_TC_Bonobo_CacheTime_17 'c'
#define TC_IMPL_TC_Bonobo_CacheTime_18 't'
#define TC_IMPL_TC_Bonobo_CacheTime_19 'o'
#define TC_IMPL_TC_Bonobo_CacheTime_20 'r'
#define TC_IMPL_TC_Bonobo_CacheTime_21 'y'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo_ObjectDirectory
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_CacheTime_struct;
#define TC_Bonobo_CacheTime ((CORBA_TypeCode)&TC_Bonobo_CacheTime_struct)
#endif
#define Bonobo_CacheTime__alloc() ((Bonobo_CacheTime *)ORBit_small_alloc (TC_CORBA_long_long))
#define Bonobo_CacheTime__freekids(m,d) ORBit_small_freekids (TC_CORBA_long_long,(m),(d))
#endif
#if !defined(_Bonobo_ServerInfoListCache_defined)
#define _Bonobo_ServerInfoListCache_defined 1
typedef struct Bonobo_ServerInfoListCache_type Bonobo_ServerInfoListCache;
struct Bonobo_ServerInfoListCache_type {
CORBA_boolean _d;
union {
Bonobo_ServerInfoList server_list;
} _u;
};
#if !defined(TC_IMPL_TC_Bonobo_ServerInfoListCache_0)
#define TC_IMPL_TC_Bonobo_ServerInfoListCache_0 'B'
#define TC_IMPL_TC_Bonobo_ServerInfoListCache_1 'o'
#define TC_IMPL_TC_Bonobo_ServerInfoListCache_2 'n'
#define TC_IMPL_TC_Bonobo_ServerInfoListCache_3 'o'
#define TC_IMPL_TC_Bonobo_ServerInfoListCache_4 'b'
#define TC_IMPL_TC_Bonobo_ServerInfoListCache_5 'o'
#define TC_IMPL_TC_Bonobo_ServerInfoListCache_6 '_'
#define TC_IMPL_TC_Bonobo_ServerInfoListCache_7 'O'
#define TC_IMPL_TC_Bonobo_ServerInfoListCache_8 'b'
#define TC_IMPL_TC_Bonobo_ServerInfoListCache_9 'j'
#define TC_IMPL_TC_Bonobo_ServerInfoListCache_10 'e'
#define TC_IMPL_TC_Bonobo_ServerInfoListCache_11 'c'
#define TC_IMPL_TC_Bonobo_ServerInfoListCache_12 't'
#define TC_IMPL_TC_Bonobo_ServerInfoListCache_13 'D'
#define TC_IMPL_TC_Bonobo_ServerInfoListCache_14 'i'
#define TC_IMPL_TC_Bonobo_ServerInfoListCache_15 'r'
#define TC_IMPL_TC_Bonobo_ServerInfoListCache_16 'e'
#define TC_IMPL_TC_Bonobo_ServerInfoListCache_17 'c'
#define TC_IMPL_TC_Bonobo_ServerInfoListCache_18 't'
#define TC_IMPL_TC_Bonobo_ServerInfoListCache_19 'o'
#define TC_IMPL_TC_Bonobo_ServerInfoListCache_20 'r'
#define TC_IMPL_TC_Bonobo_ServerInfoListCache_21 'y'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo_ObjectDirectory
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ServerInfoListCache_struct;
#define TC_Bonobo_ServerInfoListCache ((CORBA_TypeCode)&TC_Bonobo_ServerInfoListCache_struct)
#endif
#define Bonobo_ServerInfoListCache__alloc() ((Bonobo_ServerInfoListCache *)ORBit_small_alloc (TC_Bonobo_ServerInfoListCache))
#define Bonobo_ServerInfoListCache__freekids(m,d) ORBit_small_freekids (TC_Bonobo_ServerInfoListCache,(m),(d))
#endif
#if !defined(_Bonobo_ServerStateCache_defined)
#define _Bonobo_ServerStateCache_defined 1
typedef struct Bonobo_ServerStateCache_type Bonobo_ServerStateCache;
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_string)
#define ORBIT_DECL_CORBA_sequence_CORBA_string 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_0 'B'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_2 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_3 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_4 'b'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_5 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_6 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_7 'O'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_8 'b'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_9 'j'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_10 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_11 'c'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_12 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_13 'D'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_14 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_15 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_16 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_17 'c'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_18 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_19 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_20 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_21 'y'
#if !defined(_CORBA_sequence_CORBA_string_defined)
#define _CORBA_sequence_CORBA_string_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_string* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_string;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_string_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_0 'B'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_2 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_3 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_4 'b'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_5 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_6 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_7 'O'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_8 'b'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_9 'j'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_10 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_11 'c'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_12 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_13 'D'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_14 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_15 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_16 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_17 'c'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_18 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_19 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_20 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_21 'y'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo_ObjectDirectory
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_string_struct;
#define TC_CORBA_sequence_CORBA_string ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_string_struct)
#endif
#define CORBA_sequence_CORBA_string__alloc() ((CORBA_sequence_CORBA_string *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define CORBA_sequence_CORBA_string__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_Bonobo_ImplementationID)
#define ORBIT_DECL_CORBA_sequence_Bonobo_ImplementationID 1
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ImplementationID_0 'B'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ImplementationID_1 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ImplementationID_2 'n'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ImplementationID_3 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ImplementationID_4 'b'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ImplementationID_5 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ImplementationID_6 '_'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ImplementationID_7 'O'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ImplementationID_8 'b'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ImplementationID_9 'j'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ImplementationID_10 'e'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ImplementationID_11 'c'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ImplementationID_12 't'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ImplementationID_13 'D'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ImplementationID_14 'i'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ImplementationID_15 'r'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ImplementationID_16 'e'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ImplementationID_17 'c'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ImplementationID_18 't'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ImplementationID_19 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ImplementationID_20 'r'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ImplementationID_21 'y'
#if !defined(_CORBA_sequence_Bonobo_ImplementationID_defined)
#define _CORBA_sequence_Bonobo_ImplementationID_defined 1
typedef CORBA_sequence_CORBA_string CORBA_sequence_Bonobo_ImplementationID;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_Bonobo_ImplementationID_0)
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ImplementationID_0 'B'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ImplementationID_1 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ImplementationID_2 'n'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ImplementationID_3 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ImplementationID_4 'b'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ImplementationID_5 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ImplementationID_6 '_'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ImplementationID_7 'O'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ImplementationID_8 'b'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ImplementationID_9 'j'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ImplementationID_10 'e'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ImplementationID_11 'c'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ImplementationID_12 't'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ImplementationID_13 'D'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ImplementationID_14 'i'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ImplementationID_15 'r'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ImplementationID_16 'e'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ImplementationID_17 'c'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ImplementationID_18 't'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ImplementationID_19 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ImplementationID_20 'r'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ImplementationID_21 'y'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo_ObjectDirectory
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_Bonobo_ImplementationID_struct;
#define TC_CORBA_sequence_Bonobo_ImplementationID ((CORBA_TypeCode)&TC_CORBA_sequence_Bonobo_ImplementationID_struct)
#endif
#define CORBA_sequence_Bonobo_ImplementationID__alloc CORBA_sequence_CORBA_string__alloc
#define CORBA_sequence_Bonobo_ImplementationID__freekids CORBA_sequence_CORBA_string__freekids
#define CORBA_sequence_Bonobo_ImplementationID_allocbuf CORBA_sequence_CORBA_string_allocbuf
#define CORBA_sequence_Bonobo_ImplementationID_marshal(x,y,z) CORBA_sequence_CORBA_string_marshal((x),(y),(z))
#define CORBA_sequence_Bonobo_ImplementationID_demarshal(x,y,z,i) CORBA_sequence_CORBA_string_demarshal((x),(y),(z),(i))
#endif
struct Bonobo_ServerStateCache_type {
CORBA_boolean _d;
union {
CORBA_sequence_Bonobo_ImplementationID active_servers;
} _u;
};
#if !defined(TC_IMPL_TC_Bonobo_ServerStateCache_0)
#define TC_IMPL_TC_Bonobo_ServerStateCache_0 'B'
#define TC_IMPL_TC_Bonobo_ServerStateCache_1 'o'
#define TC_IMPL_TC_Bonobo_ServerStateCache_2 'n'
#define TC_IMPL_TC_Bonobo_ServerStateCache_3 'o'
#define TC_IMPL_TC_Bonobo_ServerStateCache_4 'b'
#define TC_IMPL_TC_Bonobo_ServerStateCache_5 'o'
#define TC_IMPL_TC_Bonobo_ServerStateCache_6 '_'
#define TC_IMPL_TC_Bonobo_ServerStateCache_7 'O'
#define TC_IMPL_TC_Bonobo_ServerStateCache_8 'b'
#define TC_IMPL_TC_Bonobo_ServerStateCache_9 'j'
#define TC_IMPL_TC_Bonobo_ServerStateCache_10 'e'
#define TC_IMPL_TC_Bonobo_ServerStateCache_11 'c'
#define TC_IMPL_TC_Bonobo_ServerStateCache_12 't'
#define TC_IMPL_TC_Bonobo_ServerStateCache_13 'D'
#define TC_IMPL_TC_Bonobo_ServerStateCache_14 'i'
#define TC_IMPL_TC_Bonobo_ServerStateCache_15 'r'
#define TC_IMPL_TC_Bonobo_ServerStateCache_16 'e'
#define TC_IMPL_TC_Bonobo_ServerStateCache_17 'c'
#define TC_IMPL_TC_Bonobo_ServerStateCache_18 't'
#define TC_IMPL_TC_Bonobo_ServerStateCache_19 'o'
#define TC_IMPL_TC_Bonobo_ServerStateCache_20 'r'
#define TC_IMPL_TC_Bonobo_ServerStateCache_21 'y'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo_ObjectDirectory
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ServerStateCache_struct;
#define TC_Bonobo_ServerStateCache ((CORBA_TypeCode)&TC_Bonobo_ServerStateCache_struct)
#endif
#define Bonobo_ServerStateCache__alloc() ((Bonobo_ServerStateCache *)ORBit_small_alloc (TC_Bonobo_ServerStateCache))
#define Bonobo_ServerStateCache__freekids(m,d) ORBit_small_freekids (TC_Bonobo_ServerStateCache,(m),(d))
#endif
#if !defined(ORBIT_DECL_Bonobo_ObjectDirectory) && !defined(_Bonobo_ObjectDirectory_defined)
#define ORBIT_DECL_Bonobo_ObjectDirectory 1
#define _Bonobo_ObjectDirectory_defined 1
#define Bonobo_ObjectDirectory__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_ObjectDirectory;
extern CORBA_unsigned_long Bonobo_ObjectDirectory__classid;
#if !defined(TC_IMPL_TC_Bonobo_ObjectDirectory_0)
#define TC_IMPL_TC_Bonobo_ObjectDirectory_0 'B'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_1 'o'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_2 'n'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_3 'o'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_4 'b'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_5 'o'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_6 '_'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_7 'O'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_8 'b'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_9 'j'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_10 'e'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_11 'c'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_12 't'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_13 'D'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_14 'i'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_15 'r'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_16 'e'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_17 'c'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_18 't'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_19 'o'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_20 'r'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_21 'y'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo_ObjectDirectory
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ObjectDirectory_struct;
#define TC_Bonobo_ObjectDirectory ((CORBA_TypeCode)&TC_Bonobo_ObjectDirectory_struct)
#endif
#endif
#undef ex_Bonobo_ObjectDirectory_NotRegistered
#define ex_Bonobo_ObjectDirectory_NotRegistered "IDL:Bonobo/ObjectDirectory/NotRegistered:1.0"
#if !defined(_Bonobo_ObjectDirectory_NotRegistered_defined)
#define _Bonobo_ObjectDirectory_NotRegistered_defined 1
typedef struct Bonobo_ObjectDirectory_NotRegistered_type Bonobo_ObjectDirectory_NotRegistered;
struct Bonobo_ObjectDirectory_NotRegistered_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_ObjectDirectory_NotRegistered_0)
#define TC_IMPL_TC_Bonobo_ObjectDirectory_NotRegistered_0 'B'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_NotRegistered_1 'o'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_NotRegistered_2 'n'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_NotRegistered_3 'o'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_NotRegistered_4 'b'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_NotRegistered_5 'o'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_NotRegistered_6 '_'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_NotRegistered_7 'O'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_NotRegistered_8 'b'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_NotRegistered_9 'j'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_NotRegistered_10 'e'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_NotRegistered_11 'c'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_NotRegistered_12 't'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_NotRegistered_13 'D'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_NotRegistered_14 'i'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_NotRegistered_15 'r'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_NotRegistered_16 'e'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_NotRegistered_17 'c'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_NotRegistered_18 't'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_NotRegistered_19 'o'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_NotRegistered_20 'r'
#define TC_IMPL_TC_Bonobo_ObjectDirectory_NotRegistered_21 'y'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo_ObjectDirectory
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ObjectDirectory_NotRegistered_struct;
#define TC_Bonobo_ObjectDirectory_NotRegistered ((CORBA_TypeCode)&TC_Bonobo_ObjectDirectory_NotRegistered_struct)
#endif
#define Bonobo_ObjectDirectory_NotRegistered__alloc() ((Bonobo_ObjectDirectory_NotRegistered *)ORBit_small_alloc (TC_Bonobo_ObjectDirectory_NotRegistered))
#define Bonobo_ObjectDirectory_NotRegistered__freekids(m,d) ORBit_small_freekids (TC_Bonobo_ObjectDirectory_NotRegistered,(m),(d))
#endif

/** POA structures **/
#ifndef _defined_POA_Bonobo_ObjectDirectory
#define _defined_POA_Bonobo_ObjectDirectory 1
typedef struct {
  void *_private;
Bonobo_ServerInfoListCache* (*get_servers)(PortableServer_Servant _servant, const Bonobo_CacheTime only_if_newer, CORBA_Environment *ev);
Bonobo_ServerStateCache* (*get_active_servers)(PortableServer_Servant _servant, const Bonobo_CacheTime only_if_newer, CORBA_Environment *ev);
CORBA_string (*_get_username)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_string (*_get_hostname)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_Object (*activate)(PortableServer_Servant _servant, const CORBA_char * iid, const Bonobo_ActivationContext ac, const Bonobo_ActivationEnvironment* environment, const Bonobo_ActivationFlags flags, CORBA_Context _ctx, CORBA_Environment *ev);
Bonobo_RegistrationResult (*register_new)(PortableServer_Servant _servant, const CORBA_char * iid, const Bonobo_ActivationEnvironment* environment, const CORBA_Object obj, CORBA_Environment *ev);
void (*unregister)(PortableServer_Servant _servant, const CORBA_char * iid, const CORBA_Object obj, CORBA_Environment *ev);
} POA_Bonobo_ObjectDirectory__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_ObjectDirectory__epv *Bonobo_ObjectDirectory_epv;
} POA_Bonobo_ObjectDirectory__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_ObjectDirectory__vepv *vepv;
} POA_Bonobo_ObjectDirectory;
extern void POA_Bonobo_ObjectDirectory__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_ObjectDirectory__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_ObjectDirectory */

/** skel prototypes **/
void _ORBIT_skel_small_Bonobo_ObjectDirectory_get_servers(POA_Bonobo_ObjectDirectory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_ServerInfoListCache* (*_impl_get_servers)(PortableServer_Servant _servant, const Bonobo_CacheTime only_if_newer, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ObjectDirectory_get_active_servers(POA_Bonobo_ObjectDirectory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_ServerStateCache* (*_impl_get_active_servers)(PortableServer_Servant _servant, const Bonobo_CacheTime only_if_newer, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ObjectDirectory__get_username(POA_Bonobo_ObjectDirectory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_string (*_impl__get_username)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ObjectDirectory__get_hostname(POA_Bonobo_ObjectDirectory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_string (*_impl__get_hostname)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ObjectDirectory_activate(POA_Bonobo_ObjectDirectory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_Object (*_impl_activate)(PortableServer_Servant _servant, const CORBA_char * iid, const Bonobo_ActivationContext ac, const Bonobo_ActivationEnvironment* environment, const Bonobo_ActivationFlags flags, CORBA_Context _ctx, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ObjectDirectory_register_new(POA_Bonobo_ObjectDirectory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_RegistrationResult (*_impl_register_new)(PortableServer_Servant _servant, const CORBA_char * iid, const Bonobo_ActivationEnvironment* environment, const CORBA_Object obj, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ObjectDirectory_unregister(POA_Bonobo_ObjectDirectory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unregister)(PortableServer_Servant _servant, const CORBA_char * iid, const CORBA_Object obj, CORBA_Environment *ev));

/** stub prototypes **/
#define Bonobo_ObjectDirectory_ref Bonobo_Unknown_ref
#define Bonobo_ObjectDirectory_unref Bonobo_Unknown_unref
#define Bonobo_ObjectDirectory_queryInterface Bonobo_Unknown_queryInterface
Bonobo_ServerInfoListCache* Bonobo_ObjectDirectory_get_servers(Bonobo_ObjectDirectory _obj, const Bonobo_CacheTime only_if_newer, CORBA_Environment *ev);
Bonobo_ServerStateCache* Bonobo_ObjectDirectory_get_active_servers(Bonobo_ObjectDirectory _obj, const Bonobo_CacheTime only_if_newer, CORBA_Environment *ev);
CORBA_string Bonobo_ObjectDirectory__get_username(Bonobo_ObjectDirectory _obj, CORBA_Environment *ev);
CORBA_string Bonobo_ObjectDirectory__get_hostname(Bonobo_ObjectDirectory _obj, CORBA_Environment *ev);
CORBA_Object Bonobo_ObjectDirectory_activate(Bonobo_ObjectDirectory _obj, const CORBA_char * iid, const Bonobo_ActivationContext ac, const Bonobo_ActivationEnvironment* environment, const Bonobo_ActivationFlags flags, CORBA_Context _ctx, CORBA_Environment *ev);
Bonobo_RegistrationResult Bonobo_ObjectDirectory_register_new(Bonobo_ObjectDirectory _obj, const CORBA_char * iid, const Bonobo_ActivationEnvironment* environment, const CORBA_Object obj, CORBA_Environment *ev);
void Bonobo_ObjectDirectory_unregister(Bonobo_ObjectDirectory _obj, const CORBA_char * iid, const CORBA_Object obj, CORBA_Environment *ev);
#include <orbit/orb-core/orbit-interface.h>

#ifdef ORBIT_IDL_C_IMODULE_Bonobo_ObjectDirectory
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_ObjectDirectory__iinterface;
#define Bonobo_ObjectDirectory_IMETHODS_LEN 7
#ifdef ORBIT_IDL_C_IMODULE_Bonobo_ObjectDirectory
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_ObjectDirectory__imethods[Bonobo_ObjectDirectory_IMETHODS_LEN];

/** IMethods index */

#ifndef __Bonobo_ObjectDirectory__imethods_index
#define __Bonobo_ObjectDirectory__imethods_index
typedef enum {
	Bonobo_ObjectDirectory_get_servers__imethods_index,
	Bonobo_ObjectDirectory_get_active_servers__imethods_index,
	Bonobo_ObjectDirectory__get_username__imethods_index,
	Bonobo_ObjectDirectory__get_hostname__imethods_index,
	Bonobo_ObjectDirectory_activate__imethods_index,
	Bonobo_ObjectDirectory_register_new__imethods_index,
	Bonobo_ObjectDirectory_unregister__imethods_index
} Bonobo_ObjectDirectory__imethods_index;
#endif /* __Bonobo_ObjectDirectory__imethods_index */

#ifndef __ORBIT_IMETHODS_INDEX
#define __ORBIT_IMETHODS_INDEX
#define ORBIT_IMETHODS_INDEX(m) (m ## __imethods_index)
#endif /* __ORBIT_IMETHODS_INDEX */

#ifdef __cplusplus
}
#endif /* __cplusplus */

#ifndef EXCLUDE_ORBIT_H
#include <orbit/orbit.h>

#endif /* EXCLUDE_ORBIT_H */
#endif
#undef ORBIT_IDL_SERIAL
