; ModuleID = '<stdin>'
target datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:128:128"
target triple = "i386-apple-darwin9"

define void @foo(i8* %r, i32 %s, i32 %w, i32 %x, i8* %j, i32 %d) nounwind {
entry:
  %0 = mul i32 %x, %w
  %1 = mul i32 %x, %w
  %2 = sdiv i32 %1, 4
  %.sum2 = add i32 %2, %0
  %cond = icmp eq i32 %d, 1
  br i1 %cond, label %bb29, label %bb10.preheader

bb10.preheader:                                   ; preds = %entry
  %3 = icmp sgt i32 %x, 0
  br i1 %3, label %bb.nph9, label %bb18.loopexit

bb.nph7:                                          ; preds = %bb7.preheader
  br label %bb6

bb6:                                              ; preds = %bb7, %bb.nph7
  %x.06 = phi i32 [ %5, %bb7 ], [ 0, %bb.nph7 ]
  %tmp52 = add i32 %tmp51, %x.06
  %scevgep49 = getelementptr i8* %j, i32 %tmp52
  %tmp56 = mul i32 %x.06, 2
  %tmp57 = add i32 %tmp55, %tmp56
  %scevgep46 = getelementptr i8* %r, i32 %tmp57
  %4 = load i8* %scevgep46, align 1
  store i8 %4, i8* %scevgep49, align 1
  %5 = add i32 %x.06, 1
  br label %bb7

bb7:                                              ; preds = %bb6
  %exitcond41 = icmp ne i32 %5, %w
  br i1 %exitcond41, label %bb6, label %bb7.bb9_crit_edge

bb7.bb9_crit_edge:                                ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb7.preheader, %bb7.bb9_crit_edge
  %6 = add i32 %y.08, 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %exitcond50 = icmp ne i32 %6, %x
  br i1 %exitcond50, label %bb7.preheader, label %bb10.bb18.loopexit_crit_edge

bb10.bb18.loopexit_crit_edge:                     ; preds = %bb10
  br label %bb10.bb18.loopexit_crit_edge.split

bb10.bb18.loopexit_crit_edge.split:               ; preds = %bb.nph9, %bb10.bb18.loopexit_crit_edge
  br label %bb18.loopexit

bb.nph9:                                          ; preds = %bb10.preheader
  %7 = icmp sgt i32 %w, 0
  br i1 %7, label %bb.nph9.split, label %bb10.bb18.loopexit_crit_edge.split

bb.nph9.split:                                    ; preds = %bb.nph9
  br label %bb7.preheader

bb7.preheader:                                    ; preds = %bb.nph9.split, %bb10
  %y.08 = phi i32 [ %6, %bb10 ], [ 0, %bb.nph9.split ]
  %tmp51 = mul i32 %w, %y.08
  %tmp54 = mul i32 %s, %y.08
  %tmp55 = add i32 %tmp54, 1
  br i1 true, label %bb.nph7, label %bb9

bb.nph5:                                          ; preds = %bb18.loopexit
  %8 = sdiv i32 %w, 2
  %9 = icmp slt i32 %w, 2
  %10 = sdiv i32 %x, 2
  br i1 %9, label %bb18.bb20_crit_edge.split, label %bb.nph5.split

bb.nph5.split:                                    ; preds = %bb.nph5
  %tmp1 = mul i32 %x, %w
  %tmp2 = add i32 %2, %tmp1
  %tmp18 = icmp sgt i32 %10, 1
  %smax19 = select i1 %tmp18, i32 %10, i32 1
  br label %bb13

bb13:                                             ; preds = %bb18, %bb.nph5.split
  %11 = phi i32 [ %17, %bb18 ], [ 0, %bb.nph5.split ]
  %tmp21 = mul i32 %11, 2
  %tmp23 = mul i32 %8, %11
  %tmp24 = add i32 %tmp1, %tmp23
  %tmp27 = add i32 %tmp2, %tmp23
  %12 = srem i32 %11, 2
  br i1 true, label %bb.nph3, label %bb17

bb.nph3:                                          ; preds = %bb13
  %13 = sdiv i32 %w, 2
  %tmp = icmp sgt i32 %13, 1
  %smax = select i1 %tmp, i32 %13, i32 1
  %tmp7 = add i32 %12, %tmp21
  %tmp8 = mul i32 %s, %tmp7
  %tmp9 = add i32 %tmp8, 2
  br label %bb14

bb14:                                             ; preds = %bb15, %bb.nph3
  %x.12 = phi i32 [ %16, %bb15 ], [ 0, %bb.nph3 ]
  %tmp25 = add i32 %tmp24, %x.12
  %scevgep15 = getelementptr i8* %j, i32 %tmp25
  %tmp28 = add i32 %tmp27, %x.12
  %scevgep = getelementptr i8* %j, i32 %tmp28
  %tmp10 = mul i32 %x.12, 4
  %tmp11 = add i32 %tmp9, %tmp10
  %scevgep12 = getelementptr i8* %r, i32 %tmp11
  %tmp16 = add i32 %tmp8, %tmp10
  %scevgep17 = getelementptr i8* %r, i32 %tmp16
  %14 = load i8* %scevgep17, align 1
  store i8 %14, i8* %scevgep15, align 1
  %15 = load i8* %scevgep12, align 1
  store i8 %15, i8* %scevgep, align 1
  %16 = add i32 %x.12, 1
  br label %bb15

bb15:                                             ; preds = %bb14
  %exitcond = icmp ne i32 %16, %smax
  br i1 %exitcond, label %bb14, label %bb15.bb17_crit_edge

bb15.bb17_crit_edge:                              ; preds = %bb15
  br label %bb17

bb17:                                             ; preds = %bb15.bb17_crit_edge, %bb13
  %17 = add i32 %11, 1
  br label %bb18

bb18.loopexit:                                    ; preds = %bb10.bb18.loopexit_crit_edge.split, %bb10.preheader
  %18 = icmp slt i32 %x, 2
  br i1 %18, label %bb20, label %bb.nph5

bb18:                                             ; preds = %bb17
  %exitcond20 = icmp ne i32 %17, %smax19
  br i1 %exitcond20, label %bb13, label %bb18.bb20_crit_edge

bb18.bb20_crit_edge:                              ; preds = %bb18
  br label %bb18.bb20_crit_edge.split

bb18.bb20_crit_edge.split:                        ; preds = %bb18.bb20_crit_edge, %bb.nph5
  br label %bb20

bb20:                                             ; preds = %bb18.bb20_crit_edge.split, %bb18.loopexit
  switch i32 %d, label %return [
    i32 3, label %bb22
    i32 1, label %bb29
  ]

bb22:                                             ; preds = %bb20
  %19 = mul i32 %x, %w
  %20 = sdiv i32 %19, 4
  %.sum3 = add i32 %20, %.sum2
  %21 = add i32 %x, 15
  %22 = and i32 %21, -16
  %23 = add i32 %w, 15
  %24 = and i32 %23, -16
  %25 = icmp sgt i32 %x, 0
  br i1 %25, label %bb.nph, label %bb26

bb.nph:                                           ; preds = %bb22
  %tmp31 = add i32 %2, %20
  %tmp32 = mul i32 %x, %w
  %tmp33 = add i32 %tmp31, %tmp32
  %tmp37 = mul i32 %22, %s
  br label %bb23

bb23:                                             ; preds = %bb24, %bb.nph
  %y.21 = phi i32 [ %26, %bb24 ], [ 0, %bb.nph ]
  %tmp34 = mul i32 %w, %y.21
  %tmp35 = add i32 %tmp33, %tmp34
  %scevgep36 = getelementptr i8* %j, i32 %tmp35
  %tmp38 = mul i32 %24, %y.21
  %tmp39 = add i32 %tmp37, %tmp38
  %scevgep40 = getelementptr i8* %r, i32 %tmp39
  tail call void @llvm.memcpy.p0i8.p0i8.i32(i8* %scevgep36, i8* %scevgep40, i32 %w, i32 1, i1 false)
  %26 = add i32 %y.21, 1
  br label %bb24

bb24:                                             ; preds = %bb23
  %exitcond30 = icmp ne i32 %26, %x
  br i1 %exitcond30, label %bb23, label %bb24.bb26_crit_edge

bb24.bb26_crit_edge:                              ; preds = %bb24
  br label %bb26

bb26:                                             ; preds = %bb24.bb26_crit_edge, %bb22
  %27 = mul i32 %x, %w
  %.sum4 = add i32 %.sum3, %27
  %28 = getelementptr i8* %j, i32 %.sum4
  %29 = mul i32 %x, %w
  %30 = sdiv i32 %29, 2
  tail call void @llvm.memset.p0i8.i32(i8* %28, i8 -128, i32 %30, i32 1, i1 false)
  ret void

bb29:                                             ; preds = %bb20, %entry
  %31 = add i32 %w, 15
  %32 = and i32 %31, -16
  %33 = icmp sgt i32 %x, 0
  br i1 %33, label %bb.nph11, label %bb33

bb.nph11:                                         ; preds = %bb29
  br label %bb30

bb30:                                             ; preds = %bb31, %bb.nph11
  %y.310 = phi i32 [ %34, %bb31 ], [ 0, %bb.nph11 ]
  %tmp60 = mul i32 %w, %y.310
  %scevgep61 = getelementptr i8* %j, i32 %tmp60
  %tmp62 = mul i32 %32, %y.310
  %scevgep63 = getelementptr i8* %r, i32 %tmp62
  tail call void @llvm.memcpy.p0i8.p0i8.i32(i8* %scevgep61, i8* %scevgep63, i32 %w, i32 1, i1 false)
  %34 = add i32 %y.310, 1
  br label %bb31

bb31:                                             ; preds = %bb30
  %exitcond59 = icmp ne i32 %34, %x
  br i1 %exitcond59, label %bb30, label %bb31.bb33_crit_edge

bb31.bb33_crit_edge:                              ; preds = %bb31
  br label %bb33

bb33:                                             ; preds = %bb31.bb33_crit_edge, %bb29
  %35 = mul i32 %x, %w
  %36 = getelementptr i8* %j, i32 %35
  %37 = mul i32 %x, %w
  %38 = sdiv i32 %37, 2
  tail call void @llvm.memset.p0i8.i32(i8* %36, i8 -128, i32 %38, i32 1, i1 false)
  ret void

return:                                           ; preds = %bb20
  ret void
}

declare void @llvm.memcpy.p0i8.p0i8.i32(i8* nocapture, i8* nocapture, i32, i32, i1) nounwind

declare void @llvm.memset.p0i8.i32(i8* nocapture, i8, i32, i32, i1) nounwind
