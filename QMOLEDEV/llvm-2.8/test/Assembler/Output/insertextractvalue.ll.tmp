; ModuleID = '<stdin>'

%0 = type { %1, %2 }
%1 = type { i32 }
%2 = type { float, double }
%3 = type <{ i32, i32 }>

define float @foo(%0* %p) nounwind {
  %t = load %0* %p
  %s = extractvalue %0 %t, 1, 0
  %r = insertvalue %0 %t, double 2.000000e+00, 1, 1
  store %0 %r, %0* %p
  ret float %s
}

define float @bar(%0* %p) nounwind {
  store %0 { %1 { i32 4 }, %2 { float 4.000000e+00, double 2.000000e+01 } }, %0* %p
  ret float 7.000000e+00
}

define float @car(%0* %p) nounwind {
  store %0 { %1 undef, %2 { float undef, double 2.000000e+01 } }, %0* %p
  ret float undef
}

define float @dar(%0* %p) nounwind {
  store %0 { %1 zeroinitializer, %2 { float 0.000000e+00, double 2.000000e+01 } }, %0* %p
  ret float 0.000000e+00
}

define %3 @test57() {
  ret %3 <{ i32 0, i32 4 }>
}
