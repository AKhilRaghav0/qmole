# Makefile.in generated by automake 1.9.6 from Makefile.am.
# src/FbTk/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ../..

pkgdatadir = $(datadir)/fbdesk
pkglibdir = $(libdir)/fbdesk
pkgincludedir = $(includedir)/fbdesk
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = arm-apple-darwin10.4.0
host_triplet = arm-apple-darwin10.4.0
subdir = src/FbTk
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
libFbTk_a_AR = $(AR) $(ARFLAGS)
libFbTk_a_LIBADD =
am__libFbTk_a_SOURCES_DIST = App.hh App.cc Color.cc Color.hh \
	EventHandler.hh EventManager.hh EventManager.cc FbWindow.hh \
	FbWindow.cc Font.cc Font.hh FontImp.hh NotCopyable.hh \
	Directory.hh Directory.cc XFontImp.cc XFontImp.hh \
	FbDrawable.hh FbDrawable.cc XftFontImp.hh XftFontImp.cc \
	XmbFontImp.hh XmbFontImp.cc ImageControl.hh ImageControl.cc \
	Image.hh Image.cc MenuTheme.hh MenuTheme.cc Menu.hh Menu.cc \
	MenuItem.hh MenuItem.cc MenuIcon.hh MenuIcon.cc \
	MenuSeparator.hh MenuSeparator.cc TextureRender.hh \
	TextureRender.cc Theme.hh Theme.cc RefCount.hh Command.hh \
	SimpleCommand.hh Texture.hh Texture.cc XrmDatabaseHelper.hh \
	Timer.hh Timer.cc StringUtil.hh StringUtil.cc Text.hh Text.cc \
	Transparent.hh Transparent.cc GContext.hh GContext.cc \
	FbPixmap.hh FbPixmap.cc ThemeItems.hh Subject.hh Subject.cc \
	Observer.hh Observer.cc PixmapWithMask.hh Resource.hh \
	Resource.cc ImagePNG.cc ImagePNG.hh ImageXPM.hh ImageXPM.cc \
	Surface.hh Surface.cc TextBox.hh TextBox.cc KeyUtil.hh \
	KeyUtil.cc FileUtil.hh FileUtil.cc ThemeItems.cc \
	ImageImlib2.hh ImageImlib2.cc
am__objects_1 = XftFontImp.$(OBJEXT)
am__objects_2 = XmbFontImp.$(OBJEXT)
am__objects_3 = ImagePNG.$(OBJEXT)
am_libFbTk_a_OBJECTS = App.$(OBJEXT) Color.$(OBJEXT) \
	EventManager.$(OBJEXT) FbWindow.$(OBJEXT) Font.$(OBJEXT) \
	Directory.$(OBJEXT) XFontImp.$(OBJEXT) FbDrawable.$(OBJEXT) \
	$(am__objects_1) $(am__objects_2) ImageControl.$(OBJEXT) \
	Image.$(OBJEXT) MenuTheme.$(OBJEXT) Menu.$(OBJEXT) \
	MenuItem.$(OBJEXT) MenuIcon.$(OBJEXT) MenuSeparator.$(OBJEXT) \
	TextureRender.$(OBJEXT) Theme.$(OBJEXT) Color.$(OBJEXT) \
	Texture.$(OBJEXT) Timer.$(OBJEXT) StringUtil.$(OBJEXT) \
	Text.$(OBJEXT) Transparent.$(OBJEXT) GContext.$(OBJEXT) \
	FbPixmap.$(OBJEXT) Subject.$(OBJEXT) Observer.$(OBJEXT) \
	Resource.$(OBJEXT) $(am__objects_3) ImageXPM.$(OBJEXT) \
	Surface.$(OBJEXT) TextBox.$(OBJEXT) KeyUtil.$(OBJEXT) \
	FileUtil.$(OBJEXT) ThemeItems.$(OBJEXT) ImageImlib2.$(OBJEXT)
libFbTk_a_OBJECTS = $(am_libFbTk_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libFbTk_a_SOURCES)
DIST_SOURCES = $(am__libFbTk_a_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/chris/fbdesk-1.4.1/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/chris/fbdesk-1.4.1/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/chris/fbdesk-1.4.1/missing --run autoconf
AUTOHEADER = ${SHELL} /home/chris/fbdesk-1.4.1/missing --run autoheader
AUTOMAKE = ${SHELL} /home/chris/fbdesk-1.4.1/missing --run automake-1.9
AWK = gawk
CC = /usr/bin/gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2  -I/usr/local/include/freetype2  
CPP = /usr/bin/gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2    -I/usr/local/include/freetype2   -I/usr/local/include/libpng14 -I/usr/local/include
CYGPATH_W = echo
DEBUG = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = 
FFLAGS = 
GREP = /bin/grep
IMLIB2_CFLAGS = -I/usr/local/include
IMLIB2_CONFIG = /usr/local/bin/imlib2-config
IMLIB2_FALSE = #
IMLIB2_LIBS = -L/usr/local/lib -lImlib2 -L/usr/local/lib -lfreetype -lz -L/usr/X11R6/lib -lX11 -lXext -lm
IMLIB2_TRUE = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS =     -lSM -lICE
LIBOBJS = 
LIBPNG_CONFIG = /usr/local/bin/libpng-config
LIBS =   -lX11  -lXext -lXpm -lXrender -L/usr/local/lib -lXft -lXrender -lfontconfig -lfreetype -lX11   -lpng14 -L/usr/local/lib -lImlib2 -L/usr/local/lib -lfreetype -lz -L/usr/X11R6/lib -lX11 -lXext -lm
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/chris/fbdesk-1.4.1/missing --run makeinfo
MULTIBYTE_FALSE = #
MULTIBYTE_TRUE = 
OBJEXT = o
PACKAGE = fbdesk
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PNG_FALSE = #
PNG_TRUE = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHAPE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 1.4.1
XFT_FALSE = #
XFT_TRUE = 
XMKMF = 
XPM_FALSE = #
XPM_TRUE = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
ac_ct_CC = /usr/bin/gcc
ac_ct_CXX = g++
ac_ct_F77 = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = arm-apple-darwin10.4.0
build_alias = 
build_cpu = arm
build_os = darwin10.4.0
build_vendor = apple
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = arm-apple-darwin10.4.0
host_alias = 
host_cpu = arm
host_os = darwin10.4.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/chris/fbdesk-1.4.1/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
noinst_LIBRARIES = libFbTk.a
xft_SOURCE = XftFontImp.hh XftFontImp.cc
xmb_SOURCE = XmbFontImp.hh XmbFontImp.cc
png_SOURCE = ImagePNG.cc ImagePNG.hh
libFbTk_a_SOURCES = App.hh App.cc Color.cc Color.hh EventHandler.hh EventManager.hh EventManager.cc \
	FbWindow.hh FbWindow.cc Font.cc Font.hh FontImp.hh NotCopyable.hh \
	Directory.hh Directory.cc \
	XFontImp.cc XFontImp.hh \
	FbDrawable.hh FbDrawable.cc \
	${xft_SOURCE} \
	${xmb_SOURCE} \
	ImageControl.hh ImageControl.cc \
	Image.hh Image.cc \
	MenuTheme.hh MenuTheme.cc Menu.hh Menu.cc MenuItem.hh MenuItem.cc \
	MenuIcon.hh MenuIcon.cc MenuSeparator.hh MenuSeparator.cc \
	TextureRender.hh TextureRender.cc Theme.hh Theme.cc RefCount.hh Command.hh \
	SimpleCommand.hh \
	Color.hh Color.cc Texture.hh Texture.cc XrmDatabaseHelper.hh Timer.hh Timer.cc \
	StringUtil.hh StringUtil.cc Text.hh Text.cc Transparent.hh Transparent.cc \
	GContext.hh GContext.cc FbPixmap.hh FbPixmap.cc ThemeItems.hh \
	Subject.hh Subject.cc \
	Observer.hh Observer.cc \
	PixmapWithMask.hh Resource.hh Resource.cc XrmDatabaseHelper.hh \
	${png_SOURCE} \
	ImageXPM.hh ImageXPM.cc \
	Surface.hh Surface.cc TextBox.hh TextBox.cc KeyUtil.hh KeyUtil.cc \
	FileUtil.hh FileUtil.cc ThemeItems.cc ImageImlib2.hh ImageImlib2.cc

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/FbTk/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/FbTk/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libFbTk.a: $(libFbTk_a_OBJECTS) $(libFbTk_a_DEPENDENCIES) 
	-rm -f libFbTk.a
	$(libFbTk_a_AR) libFbTk.a $(libFbTk_a_OBJECTS) $(libFbTk_a_LIBADD)
	$(RANLIB) libFbTk.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/App.Po
include ./$(DEPDIR)/Color.Po
include ./$(DEPDIR)/Directory.Po
include ./$(DEPDIR)/EventManager.Po
include ./$(DEPDIR)/FbDrawable.Po
include ./$(DEPDIR)/FbPixmap.Po
include ./$(DEPDIR)/FbWindow.Po
include ./$(DEPDIR)/FileUtil.Po
include ./$(DEPDIR)/Font.Po
include ./$(DEPDIR)/GContext.Po
include ./$(DEPDIR)/Image.Po
include ./$(DEPDIR)/ImageControl.Po
include ./$(DEPDIR)/ImageImlib2.Po
include ./$(DEPDIR)/ImagePNG.Po
include ./$(DEPDIR)/ImageXPM.Po
include ./$(DEPDIR)/KeyUtil.Po
include ./$(DEPDIR)/Menu.Po
include ./$(DEPDIR)/MenuIcon.Po
include ./$(DEPDIR)/MenuItem.Po
include ./$(DEPDIR)/MenuSeparator.Po
include ./$(DEPDIR)/MenuTheme.Po
include ./$(DEPDIR)/Observer.Po
include ./$(DEPDIR)/Resource.Po
include ./$(DEPDIR)/StringUtil.Po
include ./$(DEPDIR)/Subject.Po
include ./$(DEPDIR)/Surface.Po
include ./$(DEPDIR)/Text.Po
include ./$(DEPDIR)/TextBox.Po
include ./$(DEPDIR)/Texture.Po
include ./$(DEPDIR)/TextureRender.Po
include ./$(DEPDIR)/Theme.Po
include ./$(DEPDIR)/ThemeItems.Po
include ./$(DEPDIR)/Timer.Po
include ./$(DEPDIR)/Transparent.Po
include ./$(DEPDIR)/XFontImp.Po
include ./$(DEPDIR)/XftFontImp.Po
include ./$(DEPDIR)/XmbFontImp.Po

.cc.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
