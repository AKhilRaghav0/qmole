# Makefile.in generated by automake 1.7.9 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# 
#  Copyright 2005  Red Hat, Inc.
# 
#  Permission to use, copy, modify, distribute, and sell this software and its
#  documentation for any purpose is hereby granted without fee, provided that
#  the above copyright notice appear in all copies and that both that
#  copyright notice and this permission notice appear in supporting
#  documentation, and that the name of Red Hat not be used in
#  advertising or publicity pertaining to distribution of the software without
#  specific, written prior permission.  Red Hat makes no
#  representations about the suitability of this software for any purpose.  It
#  is provided "as is" without express or implied warranty.
# 
#  RED HAT DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
#  INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
#  EVENT SHALL RED HAT BE LIABLE FOR ANY SPECIAL, INDIRECT OR
#  CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
#  DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
#  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
#  PERFORMANCE OF THIS SOFTWARE.

srcdir = .
top_srcdir = .

pkgdatadir = $(datadir)/xkbutils
pkglibdir = $(libdir)/xkbutils
pkgincludedir = $(includedir)/xkbutils
top_builddir = .

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
ACLOCAL = ${SHELL} /home/chris/xorg/xkbutils-1.0.1/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/chris/xorg/xkbutils-1.0.1/missing --run tar
AUTOCONF = ${SHELL} /home/chris/xorg/xkbutils-1.0.1/missing --run autoconf
AUTOHEADER = ${SHELL} /home/chris/xorg/xkbutils-1.0.1/missing --run autoheader
AUTOMAKE = ${SHELL} /home/chris/xorg/xkbutils-1.0.1/missing --run automake-1.7
AWK = gawk
CC = /usr/bin/gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EXEEXT = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /home/chris/xorg/xkbutils-1.0.1/missing --run makeinfo
OBJEXT = o
PACKAGE = xkbutils
PACKAGE_BUGREPORT = https://bugs.freedesktop.org/enter_bug.cgi?product=xorg
PACKAGE_NAME = xkbutils
PACKAGE_STRING = xkbutils 1.0.1
PACKAGE_TARNAME = xkbutils
PACKAGE_VERSION = 1.0.1
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
TMP_XAW_CFLAGS =  
TMP_XAW_LIBS = -L/usr/local/lib -lXaw7 -lXmu -lXt -lX11 -lSM -lICE  
VERSION = 1.0.1
XAW_USE_XPRINT_FALSE = #
XAW_USE_XPRINT_TRUE = 
XKBBELL_CFLAGS =  
XKBBELL_LIBS = -L/usr/local/lib -lxkbfile -lX11  
XKBVLEDS_CFLAGS =  
XKBVLEDS_LIBS = -L/usr/local/lib -lXaw7 -lXmu -lXt -lX11 -lSM -lICE  
XKBWATCH_CFLAGS =  
XKBWATCH_LIBS = -L/usr/local/lib -lXaw7 -lXmu -lXt -lX11 -lSM -lICE  
ac_ct_CC = /usr/bin/gcc
ac_ct_STRIP = 
ac_pt_PKG_CONFIG = /usr/bin/pkg-config
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build_alias = 
datadir = ${prefix}/share
exec_prefix = ${prefix}
host_alias = 
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/chris/xorg/xkbutils-1.0.1/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 

bin_PROGRAMS = xkbvleds xkbwatch xkbbell


# xkbvleds
xkbvleds_SOURCES = xkbvleds.c LED.c LED.h LEDP.h utils.c utils.h

xkbvleds_CFLAGS = $(XKBVLEDS_CFLAGS)
xkbvleds_LDADD = $(XKBVLEDS_LIBS)


# xkbbell
xkbbell_SOURCES = xkbbell.c

xkbbell_CFLAGS = $(XKBBELL_CFLAGS)
xkbbell_LDADD = $(XKBBELL_LIBS)


# xkbwatch
xkbwatch_SOURCES = xkbwatch.c LED.c LED.h LEDP.h utils.c utils.h
xkbwatch_CFLAGS = $(XKBWATCH_CFLAGS)
xkbwatch_LDADD = $(XKBWATCH_LIBS)
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = xkbvleds$(EXEEXT) xkbwatch$(EXEEXT) xkbbell$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_xkbbell_OBJECTS = xkbbell-xkbbell.$(OBJEXT)
xkbbell_OBJECTS = $(am_xkbbell_OBJECTS)
xkbbell_DEPENDENCIES =
xkbbell_LDFLAGS =
am_xkbvleds_OBJECTS = xkbvleds-xkbvleds.$(OBJEXT) xkbvleds-LED.$(OBJEXT) \
	xkbvleds-utils.$(OBJEXT)
xkbvleds_OBJECTS = $(am_xkbvleds_OBJECTS)
xkbvleds_DEPENDENCIES =
xkbvleds_LDFLAGS =
am_xkbwatch_OBJECTS = xkbwatch-xkbwatch.$(OBJEXT) xkbwatch-LED.$(OBJEXT) \
	xkbwatch-utils.$(OBJEXT)
xkbwatch_OBJECTS = $(am_xkbwatch_OBJECTS)
xkbwatch_DEPENDENCIES =
xkbwatch_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/xkbbell-xkbbell.Po \
	./$(DEPDIR)/xkbvleds-LED.Po \
	./$(DEPDIR)/xkbvleds-utils.Po \
	./$(DEPDIR)/xkbvleds-xkbvleds.Po \
	./$(DEPDIR)/xkbwatch-LED.Po \
	./$(DEPDIR)/xkbwatch-utils.Po \
	./$(DEPDIR)/xkbwatch-xkbwatch.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(xkbbell_SOURCES) $(xkbvleds_SOURCES) \
	$(xkbwatch_SOURCES)
DIST_COMMON = README $(srcdir)/Makefile.in $(srcdir)/configure AUTHORS \
	COPYING ChangeLog INSTALL Makefile.am NEWS aclocal.m4 compile \
	config.h.in configure configure.ac depcomp install-sh missing \
	mkinstalldirs
SOURCES = $(xkbbell_SOURCES) $(xkbvleds_SOURCES) $(xkbwatch_SOURCES)

all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj

am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno
$(srcdir)/Makefile.in: # Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  Makefile
Makefile: # $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)

$(top_builddir)/config.status: $(srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck
$(srcdir)/configure: # $(srcdir)/configure.ac $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)
	cd $(srcdir) && $(AUTOCONF)

$(ACLOCAL_M4): # configure.ac 
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h

$(srcdir)/config.h.in: # $(top_srcdir)/configure.ac $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOHEADER)
	touch $(srcdir)/config.h.in

distclean-hdr:
	-rm -f config.h stamp-h1
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
xkbbell$(EXEEXT): $(xkbbell_OBJECTS) $(xkbbell_DEPENDENCIES) 
	@rm -f xkbbell$(EXEEXT)
	$(LINK) $(xkbbell_LDFLAGS) $(xkbbell_OBJECTS) $(xkbbell_LDADD) $(LIBS)
xkbvleds$(EXEEXT): $(xkbvleds_OBJECTS) $(xkbvleds_DEPENDENCIES) 
	@rm -f xkbvleds$(EXEEXT)
	$(LINK) $(xkbvleds_LDFLAGS) $(xkbvleds_OBJECTS) $(xkbvleds_LDADD) $(LIBS)
xkbwatch$(EXEEXT): $(xkbwatch_OBJECTS) $(xkbwatch_DEPENDENCIES) 
	@rm -f xkbwatch$(EXEEXT)
	$(LINK) $(xkbwatch_LDFLAGS) $(xkbwatch_OBJECTS) $(xkbwatch_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/xkbbell-xkbbell.Po
include ./$(DEPDIR)/xkbvleds-LED.Po
include ./$(DEPDIR)/xkbvleds-utils.Po
include ./$(DEPDIR)/xkbvleds-xkbvleds.Po
include ./$(DEPDIR)/xkbwatch-LED.Po
include ./$(DEPDIR)/xkbwatch-utils.Po
include ./$(DEPDIR)/xkbwatch-xkbwatch.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

xkbbell-xkbbell.o: xkbbell.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbbell_CFLAGS) $(CFLAGS) -MT xkbbell-xkbbell.o -MD -MP -MF "$(DEPDIR)/xkbbell-xkbbell.Tpo" \
	  -c -o xkbbell-xkbbell.o `test -f 'xkbbell.c' || echo '$(srcdir)/'`xkbbell.c; \
	then mv -f "$(DEPDIR)/xkbbell-xkbbell.Tpo" "$(DEPDIR)/xkbbell-xkbbell.Po"; \
	else rm -f "$(DEPDIR)/xkbbell-xkbbell.Tpo"; exit 1; \
	fi
#	source='xkbbell.c' object='xkbbell-xkbbell.o' libtool=no \
#	depfile='$(DEPDIR)/xkbbell-xkbbell.Po' tmpdepfile='$(DEPDIR)/xkbbell-xkbbell.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbbell_CFLAGS) $(CFLAGS) -c -o xkbbell-xkbbell.o `test -f 'xkbbell.c' || echo '$(srcdir)/'`xkbbell.c

xkbbell-xkbbell.obj: xkbbell.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbbell_CFLAGS) $(CFLAGS) -MT xkbbell-xkbbell.obj -MD -MP -MF "$(DEPDIR)/xkbbell-xkbbell.Tpo" \
	  -c -o xkbbell-xkbbell.obj `if test -f 'xkbbell.c'; then $(CYGPATH_W) 'xkbbell.c'; else $(CYGPATH_W) '$(srcdir)/xkbbell.c'; fi`; \
	then mv -f "$(DEPDIR)/xkbbell-xkbbell.Tpo" "$(DEPDIR)/xkbbell-xkbbell.Po"; \
	else rm -f "$(DEPDIR)/xkbbell-xkbbell.Tpo"; exit 1; \
	fi
#	source='xkbbell.c' object='xkbbell-xkbbell.obj' libtool=no \
#	depfile='$(DEPDIR)/xkbbell-xkbbell.Po' tmpdepfile='$(DEPDIR)/xkbbell-xkbbell.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbbell_CFLAGS) $(CFLAGS) -c -o xkbbell-xkbbell.obj `if test -f 'xkbbell.c'; then $(CYGPATH_W) 'xkbbell.c'; else $(CYGPATH_W) '$(srcdir)/xkbbell.c'; fi`

xkbvleds-xkbvleds.o: xkbvleds.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbvleds_CFLAGS) $(CFLAGS) -MT xkbvleds-xkbvleds.o -MD -MP -MF "$(DEPDIR)/xkbvleds-xkbvleds.Tpo" \
	  -c -o xkbvleds-xkbvleds.o `test -f 'xkbvleds.c' || echo '$(srcdir)/'`xkbvleds.c; \
	then mv -f "$(DEPDIR)/xkbvleds-xkbvleds.Tpo" "$(DEPDIR)/xkbvleds-xkbvleds.Po"; \
	else rm -f "$(DEPDIR)/xkbvleds-xkbvleds.Tpo"; exit 1; \
	fi
#	source='xkbvleds.c' object='xkbvleds-xkbvleds.o' libtool=no \
#	depfile='$(DEPDIR)/xkbvleds-xkbvleds.Po' tmpdepfile='$(DEPDIR)/xkbvleds-xkbvleds.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbvleds_CFLAGS) $(CFLAGS) -c -o xkbvleds-xkbvleds.o `test -f 'xkbvleds.c' || echo '$(srcdir)/'`xkbvleds.c

xkbvleds-xkbvleds.obj: xkbvleds.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbvleds_CFLAGS) $(CFLAGS) -MT xkbvleds-xkbvleds.obj -MD -MP -MF "$(DEPDIR)/xkbvleds-xkbvleds.Tpo" \
	  -c -o xkbvleds-xkbvleds.obj `if test -f 'xkbvleds.c'; then $(CYGPATH_W) 'xkbvleds.c'; else $(CYGPATH_W) '$(srcdir)/xkbvleds.c'; fi`; \
	then mv -f "$(DEPDIR)/xkbvleds-xkbvleds.Tpo" "$(DEPDIR)/xkbvleds-xkbvleds.Po"; \
	else rm -f "$(DEPDIR)/xkbvleds-xkbvleds.Tpo"; exit 1; \
	fi
#	source='xkbvleds.c' object='xkbvleds-xkbvleds.obj' libtool=no \
#	depfile='$(DEPDIR)/xkbvleds-xkbvleds.Po' tmpdepfile='$(DEPDIR)/xkbvleds-xkbvleds.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbvleds_CFLAGS) $(CFLAGS) -c -o xkbvleds-xkbvleds.obj `if test -f 'xkbvleds.c'; then $(CYGPATH_W) 'xkbvleds.c'; else $(CYGPATH_W) '$(srcdir)/xkbvleds.c'; fi`

xkbvleds-LED.o: LED.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbvleds_CFLAGS) $(CFLAGS) -MT xkbvleds-LED.o -MD -MP -MF "$(DEPDIR)/xkbvleds-LED.Tpo" \
	  -c -o xkbvleds-LED.o `test -f 'LED.c' || echo '$(srcdir)/'`LED.c; \
	then mv -f "$(DEPDIR)/xkbvleds-LED.Tpo" "$(DEPDIR)/xkbvleds-LED.Po"; \
	else rm -f "$(DEPDIR)/xkbvleds-LED.Tpo"; exit 1; \
	fi
#	source='LED.c' object='xkbvleds-LED.o' libtool=no \
#	depfile='$(DEPDIR)/xkbvleds-LED.Po' tmpdepfile='$(DEPDIR)/xkbvleds-LED.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbvleds_CFLAGS) $(CFLAGS) -c -o xkbvleds-LED.o `test -f 'LED.c' || echo '$(srcdir)/'`LED.c

xkbvleds-LED.obj: LED.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbvleds_CFLAGS) $(CFLAGS) -MT xkbvleds-LED.obj -MD -MP -MF "$(DEPDIR)/xkbvleds-LED.Tpo" \
	  -c -o xkbvleds-LED.obj `if test -f 'LED.c'; then $(CYGPATH_W) 'LED.c'; else $(CYGPATH_W) '$(srcdir)/LED.c'; fi`; \
	then mv -f "$(DEPDIR)/xkbvleds-LED.Tpo" "$(DEPDIR)/xkbvleds-LED.Po"; \
	else rm -f "$(DEPDIR)/xkbvleds-LED.Tpo"; exit 1; \
	fi
#	source='LED.c' object='xkbvleds-LED.obj' libtool=no \
#	depfile='$(DEPDIR)/xkbvleds-LED.Po' tmpdepfile='$(DEPDIR)/xkbvleds-LED.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbvleds_CFLAGS) $(CFLAGS) -c -o xkbvleds-LED.obj `if test -f 'LED.c'; then $(CYGPATH_W) 'LED.c'; else $(CYGPATH_W) '$(srcdir)/LED.c'; fi`

xkbvleds-utils.o: utils.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbvleds_CFLAGS) $(CFLAGS) -MT xkbvleds-utils.o -MD -MP -MF "$(DEPDIR)/xkbvleds-utils.Tpo" \
	  -c -o xkbvleds-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c; \
	then mv -f "$(DEPDIR)/xkbvleds-utils.Tpo" "$(DEPDIR)/xkbvleds-utils.Po"; \
	else rm -f "$(DEPDIR)/xkbvleds-utils.Tpo"; exit 1; \
	fi
#	source='utils.c' object='xkbvleds-utils.o' libtool=no \
#	depfile='$(DEPDIR)/xkbvleds-utils.Po' tmpdepfile='$(DEPDIR)/xkbvleds-utils.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbvleds_CFLAGS) $(CFLAGS) -c -o xkbvleds-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c

xkbvleds-utils.obj: utils.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbvleds_CFLAGS) $(CFLAGS) -MT xkbvleds-utils.obj -MD -MP -MF "$(DEPDIR)/xkbvleds-utils.Tpo" \
	  -c -o xkbvleds-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`; \
	then mv -f "$(DEPDIR)/xkbvleds-utils.Tpo" "$(DEPDIR)/xkbvleds-utils.Po"; \
	else rm -f "$(DEPDIR)/xkbvleds-utils.Tpo"; exit 1; \
	fi
#	source='utils.c' object='xkbvleds-utils.obj' libtool=no \
#	depfile='$(DEPDIR)/xkbvleds-utils.Po' tmpdepfile='$(DEPDIR)/xkbvleds-utils.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbvleds_CFLAGS) $(CFLAGS) -c -o xkbvleds-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`

xkbwatch-xkbwatch.o: xkbwatch.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbwatch_CFLAGS) $(CFLAGS) -MT xkbwatch-xkbwatch.o -MD -MP -MF "$(DEPDIR)/xkbwatch-xkbwatch.Tpo" \
	  -c -o xkbwatch-xkbwatch.o `test -f 'xkbwatch.c' || echo '$(srcdir)/'`xkbwatch.c; \
	then mv -f "$(DEPDIR)/xkbwatch-xkbwatch.Tpo" "$(DEPDIR)/xkbwatch-xkbwatch.Po"; \
	else rm -f "$(DEPDIR)/xkbwatch-xkbwatch.Tpo"; exit 1; \
	fi
#	source='xkbwatch.c' object='xkbwatch-xkbwatch.o' libtool=no \
#	depfile='$(DEPDIR)/xkbwatch-xkbwatch.Po' tmpdepfile='$(DEPDIR)/xkbwatch-xkbwatch.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbwatch_CFLAGS) $(CFLAGS) -c -o xkbwatch-xkbwatch.o `test -f 'xkbwatch.c' || echo '$(srcdir)/'`xkbwatch.c

xkbwatch-xkbwatch.obj: xkbwatch.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbwatch_CFLAGS) $(CFLAGS) -MT xkbwatch-xkbwatch.obj -MD -MP -MF "$(DEPDIR)/xkbwatch-xkbwatch.Tpo" \
	  -c -o xkbwatch-xkbwatch.obj `if test -f 'xkbwatch.c'; then $(CYGPATH_W) 'xkbwatch.c'; else $(CYGPATH_W) '$(srcdir)/xkbwatch.c'; fi`; \
	then mv -f "$(DEPDIR)/xkbwatch-xkbwatch.Tpo" "$(DEPDIR)/xkbwatch-xkbwatch.Po"; \
	else rm -f "$(DEPDIR)/xkbwatch-xkbwatch.Tpo"; exit 1; \
	fi
#	source='xkbwatch.c' object='xkbwatch-xkbwatch.obj' libtool=no \
#	depfile='$(DEPDIR)/xkbwatch-xkbwatch.Po' tmpdepfile='$(DEPDIR)/xkbwatch-xkbwatch.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbwatch_CFLAGS) $(CFLAGS) -c -o xkbwatch-xkbwatch.obj `if test -f 'xkbwatch.c'; then $(CYGPATH_W) 'xkbwatch.c'; else $(CYGPATH_W) '$(srcdir)/xkbwatch.c'; fi`

xkbwatch-LED.o: LED.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbwatch_CFLAGS) $(CFLAGS) -MT xkbwatch-LED.o -MD -MP -MF "$(DEPDIR)/xkbwatch-LED.Tpo" \
	  -c -o xkbwatch-LED.o `test -f 'LED.c' || echo '$(srcdir)/'`LED.c; \
	then mv -f "$(DEPDIR)/xkbwatch-LED.Tpo" "$(DEPDIR)/xkbwatch-LED.Po"; \
	else rm -f "$(DEPDIR)/xkbwatch-LED.Tpo"; exit 1; \
	fi
#	source='LED.c' object='xkbwatch-LED.o' libtool=no \
#	depfile='$(DEPDIR)/xkbwatch-LED.Po' tmpdepfile='$(DEPDIR)/xkbwatch-LED.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbwatch_CFLAGS) $(CFLAGS) -c -o xkbwatch-LED.o `test -f 'LED.c' || echo '$(srcdir)/'`LED.c

xkbwatch-LED.obj: LED.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbwatch_CFLAGS) $(CFLAGS) -MT xkbwatch-LED.obj -MD -MP -MF "$(DEPDIR)/xkbwatch-LED.Tpo" \
	  -c -o xkbwatch-LED.obj `if test -f 'LED.c'; then $(CYGPATH_W) 'LED.c'; else $(CYGPATH_W) '$(srcdir)/LED.c'; fi`; \
	then mv -f "$(DEPDIR)/xkbwatch-LED.Tpo" "$(DEPDIR)/xkbwatch-LED.Po"; \
	else rm -f "$(DEPDIR)/xkbwatch-LED.Tpo"; exit 1; \
	fi
#	source='LED.c' object='xkbwatch-LED.obj' libtool=no \
#	depfile='$(DEPDIR)/xkbwatch-LED.Po' tmpdepfile='$(DEPDIR)/xkbwatch-LED.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbwatch_CFLAGS) $(CFLAGS) -c -o xkbwatch-LED.obj `if test -f 'LED.c'; then $(CYGPATH_W) 'LED.c'; else $(CYGPATH_W) '$(srcdir)/LED.c'; fi`

xkbwatch-utils.o: utils.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbwatch_CFLAGS) $(CFLAGS) -MT xkbwatch-utils.o -MD -MP -MF "$(DEPDIR)/xkbwatch-utils.Tpo" \
	  -c -o xkbwatch-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c; \
	then mv -f "$(DEPDIR)/xkbwatch-utils.Tpo" "$(DEPDIR)/xkbwatch-utils.Po"; \
	else rm -f "$(DEPDIR)/xkbwatch-utils.Tpo"; exit 1; \
	fi
#	source='utils.c' object='xkbwatch-utils.o' libtool=no \
#	depfile='$(DEPDIR)/xkbwatch-utils.Po' tmpdepfile='$(DEPDIR)/xkbwatch-utils.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbwatch_CFLAGS) $(CFLAGS) -c -o xkbwatch-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c

xkbwatch-utils.obj: utils.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbwatch_CFLAGS) $(CFLAGS) -MT xkbwatch-utils.obj -MD -MP -MF "$(DEPDIR)/xkbwatch-utils.Tpo" \
	  -c -o xkbwatch-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`; \
	then mv -f "$(DEPDIR)/xkbwatch-utils.Tpo" "$(DEPDIR)/xkbwatch-utils.Po"; \
	else rm -f "$(DEPDIR)/xkbwatch-utils.Tpo"; exit 1; \
	fi
#	source='utils.c' object='xkbwatch-utils.obj' libtool=no \
#	depfile='$(DEPDIR)/xkbwatch-utils.Po' tmpdepfile='$(DEPDIR)/xkbwatch-utils.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xkbwatch_CFLAGS) $(CFLAGS) -c -o xkbwatch-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = .
distdir = $(PACKAGE)-$(VERSION)

am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }

GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print

distdir: $(DISTFILES)
	$(am__remove_distdir)
	mkdir $(distdir)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	$(AMTAR) chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	$(AMTAR) chof - $(distdir) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist dist-all: distdir
	$(AMTAR) chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(AMTAR) chof - $(distdir) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	$(am__remove_distdir)
	GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(AMTAR) xf -
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && $(mkinstalldirs) "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist-gzip \
	  && rm -f $(distdir).tar.gz \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@echo "$(distdir).tar.gz is ready for distribution" | \
	  sed 'h;s/./=/g;p;x;p;x'
distuninstallcheck:
	@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) config.h

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir)
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic distclean-hdr \
	distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags dist dist-all dist-bzip2 dist-gzip \
	distcheck distclean distclean-compile distclean-generic \
	distclean-hdr distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
