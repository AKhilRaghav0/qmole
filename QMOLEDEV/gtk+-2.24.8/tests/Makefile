# Makefile.in generated by automake 1.11.1 from Makefile.am.
# tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# GTK+ - The GIMP Toolkit


pkgdatadir = $(datadir)/gtk+
pkgincludedir = $(includedir)/gtk+
pkglibdir = $(libdir)/gtk+
pkglibexecdir = $(libexecdir)/gtk+
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = arm-apple-darwin10.4.0
host_triplet = arm-apple-darwin10.4.0
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.decl
noinst_PROGRAMS = $(am__EXEEXT_1) simple$(EXEEXT) flicker$(EXEEXT) \
	print-editor$(EXEEXT) testaccel$(EXEEXT) \
	testassistant$(EXEEXT) testbbox$(EXEEXT) testbuttons$(EXEEXT) \
	testcairo$(EXEEXT) testcalendar$(EXEEXT) testcombo$(EXEEXT) \
	testcombochange$(EXEEXT) testcellrenderertext$(EXEEXT) \
	testclientmessage$(EXEEXT) testdnd$(EXEEXT) \
	testentrycompletion$(EXEEXT) testentryicons$(EXEEXT) \
	testfilechooser$(EXEEXT) testfilechooserbutton$(EXEEXT) \
	testframe$(EXEEXT) testgtk$(EXEEXT) testiconview$(EXEEXT) \
	testiconview-keynav$(EXEEXT) testicontheme$(EXEEXT) \
	testimage$(EXEEXT) testinput$(EXEEXT) testmenus$(EXEEXT) \
	testmenubars$(EXEEXT) testmountoperation$(EXEEXT) \
	testmultidisplay$(EXEEXT) testmultiscreen$(EXEEXT) \
	testnotebookdnd$(EXEEXT) testnouiprint$(EXEEXT) \
	testoffscreen$(EXEEXT) testoffscreenwindow$(EXEEXT) \
	testorientable$(EXEEXT) testprint$(EXEEXT) testrgb$(EXEEXT) \
	testrecentchooser$(EXEEXT) testrecentchoosermenu$(EXEEXT) \
	testrichtext$(EXEEXT) testscale$(EXEEXT) \
	testselection$(EXEEXT) $(am__EXEEXT_2) testspinbutton$(EXEEXT) \
	teststatusicon$(EXEEXT) testtext$(EXEEXT) testtoolbar$(EXEEXT) \
	stresstest-toolbar$(EXEEXT) testtreeedit$(EXEEXT) \
	testtreemodel$(EXEEXT) testtreeview$(EXEEXT) \
	testtreefocus$(EXEEXT) testtreeflow$(EXEEXT) \
	testtreecolumns$(EXEEXT) testtreecolumnsizing$(EXEEXT) \
	testtreesort$(EXEEXT) treestoretest$(EXEEXT) \
	testxinerama$(EXEEXT) testwindows$(EXEEXT) testmerge$(EXEEXT) \
	testactions$(EXEEXT) testgrouping$(EXEEXT) \
	testtooltips$(EXEEXT) testvolumebutton$(EXEEXT) \
	$(am__EXEEXT_3)
am__append_1 = autotestkeywords
TESTS = autotestkeywords$(EXEEXT)
am__append_2 = -DHAVE_OBJC=1 -x objective-c++
subdir = tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/introspection.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 =
am__EXEEXT_2 = testsocket$(EXEEXT) \
	testsocket_child$(EXEEXT)
am__EXEEXT_3 = autotestkeywords$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am__autotestkeywords_SOURCES_DIST = autotestkeywords.cc
am_autotestkeywords_OBJECTS =  \
	autotestkeywords-autotestkeywords.$(OBJEXT)
autotestkeywords_OBJECTS = $(am_autotestkeywords_OBJECTS)
autotestkeywords_LDADD = $(LDADD)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
flicker_SOURCES = flicker.c
flicker_OBJECTS = flicker.$(OBJEXT)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(top_builddir)/gdk/$(gdktargetlib) \
	$(top_builddir)/gtk/$(gtktargetlib) $(am__DEPENDENCIES_1)
print_editor_SOURCES = print-editor.c
print_editor_OBJECTS = print-editor.$(OBJEXT)
simple_SOURCES = simple.c
simple_OBJECTS = simple.$(OBJEXT)
stresstest_toolbar_SOURCES = stresstest-toolbar.c
stresstest_toolbar_OBJECTS = stresstest-toolbar.$(OBJEXT)
stresstest_toolbar_DEPENDENCIES = $(am__DEPENDENCIES_2)
testaccel_SOURCES = testaccel.c
testaccel_OBJECTS = testaccel.$(OBJEXT)
am_testactions_OBJECTS = testactions.$(OBJEXT)
testactions_OBJECTS = $(am_testactions_OBJECTS)
testassistant_SOURCES = testassistant.c
testassistant_OBJECTS = testassistant.$(OBJEXT)
am_testbbox_OBJECTS = testbbox.$(OBJEXT)
testbbox_OBJECTS = $(am_testbbox_OBJECTS)
am_testbuttons_OBJECTS = testbuttons.$(OBJEXT)
testbuttons_OBJECTS = $(am_testbuttons_OBJECTS)
testcairo_SOURCES = testcairo.c
testcairo_OBJECTS = testcairo.$(OBJEXT)
testcalendar_SOURCES = testcalendar.c
testcalendar_OBJECTS = testcalendar.$(OBJEXT)
testcellrenderertext_SOURCES = testcellrenderertext.c
testcellrenderertext_OBJECTS = testcellrenderertext.$(OBJEXT)
testclientmessage_SOURCES = testclientmessage.c
testclientmessage_OBJECTS = testclientmessage.$(OBJEXT)
testcombo_SOURCES = testcombo.c
testcombo_OBJECTS = testcombo.$(OBJEXT)
testcombochange_SOURCES = testcombochange.c
testcombochange_OBJECTS = testcombochange.$(OBJEXT)
testdnd_SOURCES = testdnd.c
testdnd_OBJECTS = testdnd.$(OBJEXT)
am_testentrycompletion_OBJECTS = prop-editor.$(OBJEXT) \
	testentrycompletion.$(OBJEXT)
testentrycompletion_OBJECTS = $(am_testentrycompletion_OBJECTS)
am_testentryicons_OBJECTS = prop-editor.$(OBJEXT) \
	testentryicons.$(OBJEXT)
testentryicons_OBJECTS = $(am_testentryicons_OBJECTS)
am_testfilechooser_OBJECTS = prop-editor.$(OBJEXT) \
	testfilechooser.$(OBJEXT)
testfilechooser_OBJECTS = $(am_testfilechooser_OBJECTS)
am_testfilechooserbutton_OBJECTS = prop-editor.$(OBJEXT) \
	testfilechooserbutton.$(OBJEXT)
testfilechooserbutton_OBJECTS = $(am_testfilechooserbutton_OBJECTS)
am_testframe_OBJECTS = testframe.$(OBJEXT)
testframe_OBJECTS = $(am_testframe_OBJECTS)
am_testgrouping_OBJECTS = testgrouping.$(OBJEXT)
testgrouping_OBJECTS = $(am_testgrouping_OBJECTS)
am_testgtk_OBJECTS = prop-editor.$(OBJEXT) testgtk.$(OBJEXT)
testgtk_OBJECTS = $(am_testgtk_OBJECTS)
testicontheme_SOURCES = testicontheme.c
testicontheme_OBJECTS = testicontheme.$(OBJEXT)
am_testiconview_OBJECTS = testiconview.$(OBJEXT) prop-editor.$(OBJEXT)
testiconview_OBJECTS = $(am_testiconview_OBJECTS)
am_testiconview_keynav_OBJECTS = testiconview-keynav.$(OBJEXT)
testiconview_keynav_OBJECTS = $(am_testiconview_keynav_OBJECTS)
testiconview_keynav_DEPENDENCIES = $(am__DEPENDENCIES_2)
testimage_SOURCES = testimage.c
testimage_OBJECTS = testimage.$(OBJEXT)
testinput_SOURCES = testinput.c
testinput_OBJECTS = testinput.$(OBJEXT)
testmenubars_SOURCES = testmenubars.c
testmenubars_OBJECTS = testmenubars.$(OBJEXT)
testmenus_SOURCES = testmenus.c
testmenus_OBJECTS = testmenus.$(OBJEXT)
am_testmerge_OBJECTS = testmerge.$(OBJEXT)
testmerge_OBJECTS = $(am_testmerge_OBJECTS)
testmountoperation_SOURCES = testmountoperation.c
testmountoperation_OBJECTS = testmountoperation.$(OBJEXT)
testmultidisplay_SOURCES = testmultidisplay.c
testmultidisplay_OBJECTS = testmultidisplay.$(OBJEXT)
testmultiscreen_SOURCES = testmultiscreen.c
testmultiscreen_OBJECTS = testmultiscreen.$(OBJEXT)
testnotebookdnd_SOURCES = testnotebookdnd.c
testnotebookdnd_OBJECTS = testnotebookdnd.$(OBJEXT)
testnouiprint_SOURCES = testnouiprint.c
testnouiprint_OBJECTS = testnouiprint.$(OBJEXT)
am_testoffscreen_OBJECTS = gtkoffscreenbox.$(OBJEXT) \
	testoffscreen.$(OBJEXT)
testoffscreen_OBJECTS = $(am_testoffscreen_OBJECTS)
am_testoffscreenwindow_OBJECTS = testoffscreenwindow.$(OBJEXT)
testoffscreenwindow_OBJECTS = $(am_testoffscreenwindow_OBJECTS)
testorientable_SOURCES = testorientable.c
testorientable_OBJECTS = testorientable.$(OBJEXT)
am_testprint_OBJECTS = testprint.$(OBJEXT) \
	testprintfileoperation.$(OBJEXT)
testprint_OBJECTS = $(am_testprint_OBJECTS)
am_testrecentchooser_OBJECTS = prop-editor.$(OBJEXT) \
	testrecentchooser.$(OBJEXT)
testrecentchooser_OBJECTS = $(am_testrecentchooser_OBJECTS)
am_testrecentchoosermenu_OBJECTS = testrecentchoosermenu.$(OBJEXT)
testrecentchoosermenu_OBJECTS = $(am_testrecentchoosermenu_OBJECTS)
testrgb_SOURCES = testrgb.c
testrgb_OBJECTS = testrgb.$(OBJEXT)
testrichtext_SOURCES = testrichtext.c
testrichtext_OBJECTS = testrichtext.$(OBJEXT)
testscale_SOURCES = testscale.c
testscale_OBJECTS = testscale.$(OBJEXT)
testselection_SOURCES = testselection.c
testselection_OBJECTS = testselection.$(OBJEXT)
am_testsocket_OBJECTS = testsocket.$(OBJEXT) \
	testsocket_common.$(OBJEXT)
testsocket_OBJECTS = $(am_testsocket_OBJECTS)
am_testsocket_child_OBJECTS = testsocket_child.$(OBJEXT) \
	testsocket_common.$(OBJEXT)
testsocket_child_OBJECTS = $(am_testsocket_child_OBJECTS)
am_testspinbutton_OBJECTS = testspinbutton.$(OBJEXT)
testspinbutton_OBJECTS = $(am_testspinbutton_OBJECTS)
am_teststatusicon_OBJECTS = prop-editor.$(OBJEXT) \
	teststatusicon.$(OBJEXT)
teststatusicon_OBJECTS = $(am_teststatusicon_OBJECTS)
am_testtext_OBJECTS = prop-editor.$(OBJEXT) testtext.$(OBJEXT)
testtext_OBJECTS = $(am_testtext_OBJECTS)
am_testtoolbar_OBJECTS = testtoolbar.$(OBJEXT) prop-editor.$(OBJEXT)
testtoolbar_OBJECTS = $(am_testtoolbar_OBJECTS)
testtoolbar_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_testtooltips_OBJECTS = testtooltips.$(OBJEXT)
testtooltips_OBJECTS = $(am_testtooltips_OBJECTS)
testtreecolumns_SOURCES = testtreecolumns.c
testtreecolumns_OBJECTS = testtreecolumns.$(OBJEXT)
testtreecolumnsizing_SOURCES = testtreecolumnsizing.c
testtreecolumnsizing_OBJECTS = testtreecolumnsizing.$(OBJEXT)
am_testtreeedit_OBJECTS = testtreeedit.$(OBJEXT)
testtreeedit_OBJECTS = $(am_testtreeedit_OBJECTS)
testtreeflow_SOURCES = testtreeflow.c
testtreeflow_OBJECTS = testtreeflow.$(OBJEXT)
testtreefocus_SOURCES = testtreefocus.c
testtreefocus_OBJECTS = testtreefocus.$(OBJEXT)
am_testtreemodel_OBJECTS = testtreemodel.$(OBJEXT)
testtreemodel_OBJECTS = $(am_testtreemodel_OBJECTS)
testtreesort_SOURCES = testtreesort.c
testtreesort_OBJECTS = testtreesort.$(OBJEXT)
am_testtreeview_OBJECTS = prop-editor.$(OBJEXT) testtreeview.$(OBJEXT)
testtreeview_OBJECTS = $(am_testtreeview_OBJECTS)
am_testvolumebutton_OBJECTS = testvolumebutton.$(OBJEXT)
testvolumebutton_OBJECTS = $(am_testvolumebutton_OBJECTS)
am_testwindows_OBJECTS = testwindows.$(OBJEXT)
testwindows_OBJECTS = $(am_testwindows_OBJECTS)
testxinerama_SOURCES = testxinerama.c
testxinerama_OBJECTS = testxinerama.$(OBJEXT)
treestoretest_SOURCES = treestoretest.c
treestoretest_OBJECTS = treestoretest.$(OBJEXT)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(autotestkeywords_SOURCES) flicker.c print-editor.c \
	simple.c stresstest-toolbar.c testaccel.c \
	$(testactions_SOURCES) testassistant.c $(testbbox_SOURCES) \
	$(testbuttons_SOURCES) testcairo.c testcalendar.c \
	testcellrenderertext.c testclientmessage.c testcombo.c \
	testcombochange.c testdnd.c $(testentrycompletion_SOURCES) \
	$(testentryicons_SOURCES) $(testfilechooser_SOURCES) \
	$(testfilechooserbutton_SOURCES) $(testframe_SOURCES) \
	$(testgrouping_SOURCES) $(testgtk_SOURCES) testicontheme.c \
	$(testiconview_SOURCES) $(testiconview_keynav_SOURCES) \
	testimage.c testinput.c testmenubars.c testmenus.c \
	$(testmerge_SOURCES) testmountoperation.c testmultidisplay.c \
	testmultiscreen.c testnotebookdnd.c testnouiprint.c \
	$(testoffscreen_SOURCES) $(testoffscreenwindow_SOURCES) \
	testorientable.c $(testprint_SOURCES) \
	$(testrecentchooser_SOURCES) $(testrecentchoosermenu_SOURCES) \
	testrgb.c testrichtext.c testscale.c testselection.c \
	$(testsocket_SOURCES) $(testsocket_child_SOURCES) \
	$(testspinbutton_SOURCES) $(teststatusicon_SOURCES) \
	$(testtext_SOURCES) $(testtoolbar_SOURCES) \
	$(testtooltips_SOURCES) testtreecolumns.c \
	testtreecolumnsizing.c $(testtreeedit_SOURCES) testtreeflow.c \
	testtreefocus.c $(testtreemodel_SOURCES) testtreesort.c \
	$(testtreeview_SOURCES) $(testvolumebutton_SOURCES) \
	$(testwindows_SOURCES) testxinerama.c treestoretest.c
DIST_SOURCES = $(am__autotestkeywords_SOURCES_DIST) flicker.c \
	print-editor.c simple.c stresstest-toolbar.c testaccel.c \
	$(testactions_SOURCES) testassistant.c $(testbbox_SOURCES) \
	$(testbuttons_SOURCES) testcairo.c testcalendar.c \
	testcellrenderertext.c testclientmessage.c testcombo.c \
	testcombochange.c testdnd.c $(testentrycompletion_SOURCES) \
	$(testentryicons_SOURCES) $(testfilechooser_SOURCES) \
	$(testfilechooserbutton_SOURCES) $(testframe_SOURCES) \
	$(testgrouping_SOURCES) $(testgtk_SOURCES) testicontheme.c \
	$(testiconview_SOURCES) $(testiconview_keynav_SOURCES) \
	testimage.c testinput.c testmenubars.c testmenus.c \
	$(testmerge_SOURCES) testmountoperation.c testmultidisplay.c \
	testmultiscreen.c testnotebookdnd.c testnouiprint.c \
	$(testoffscreen_SOURCES) $(testoffscreenwindow_SOURCES) \
	testorientable.c $(testprint_SOURCES) \
	$(testrecentchooser_SOURCES) $(testrecentchoosermenu_SOURCES) \
	testrgb.c testrichtext.c testscale.c testselection.c \
	$(testsocket_SOURCES) $(testsocket_child_SOURCES) \
	$(testspinbutton_SOURCES) $(teststatusicon_SOURCES) \
	$(testtext_SOURCES) $(testtoolbar_SOURCES) \
	$(testtooltips_SOURCES) testtreecolumns.c \
	testtreecolumnsizing.c $(testtreeedit_SOURCES) testtreeflow.c \
	testtreefocus.c $(testtreemodel_SOURCES) testtreesort.c \
	$(testtreeview_SOURCES) $(testvolumebutton_SOURCES) \
	$(testwindows_SOURCES) testxinerama.c treestoretest.c
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/chris/gtk+-2.24.8/missing --run aclocal-1.11 
AMTAR = ${SHELL} /home/chris/gtk+-2.24.8/missing --run tar
AM_DEFAULT_VERBOSITY = 1
AR = ar
AS = as
ATK_PREFIX = /usr/local
AUTOCONF = ${SHELL} /home/chris/gtk+-2.24.8/missing --run autoconf
AUTOHEADER = ${SHELL} /home/chris/gtk+-2.24.8/missing --run autoheader
AUTOMAKE = ${SHELL} /home/chris/gtk+-2.24.8/missing --run automake-1.11
AWK = gawk
BASE_DEPENDENCIES_CFLAGS = -D_REENTRANT -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/atk-1.0 -I/usr/local/include/pango-1.0 -I/usr/local/include/cairo -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libpng14 -I/usr/local/include/gdk-pixbuf-2.0  
BASE_DEPENDENCIES_LIBS = -L/usr/local/lib -latk-1.0 -lpango-1.0 -lgmodule-2.0 -lcairo -lgdk_pixbuf-2.0 -lgobject-2.0 -lgthread-2.0 -lglib-2.0 -lintl  
CAIRO_BACKEND_CFLAGS = -D_REENTRANT -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libpng14  
CAIRO_BACKEND_LIBS = -L/usr/local/lib -lcairo -lX11  
CAIRO_PREFIX = /usr/local
CATALOGS =  af.gmo am.gmo ang.gmo ar.gmo as.gmo ast.gmo az.gmo az_IR.gmo be.gmo be@latin.gmo bg.gmo bn.gmo bn_IN.gmo br.gmo bs.gmo ca.gmo ca@valencia.gmo crh.gmo cs.gmo cy.gmo da.gmo de.gmo dz.gmo el.gmo en_CA.gmo en_GB.gmo eo.gmo es.gmo et.gmo eu.gmo fa.gmo fi.gmo fr.gmo ga.gmo gl.gmo gu.gmo he.gmo hi.gmo hr.gmo hu.gmo hy.gmo ia.gmo id.gmo io.gmo is.gmo it.gmo ja.gmo ka.gmo kk.gmo kn.gmo ko.gmo ku.gmo li.gmo lt.gmo lv.gmo mai.gmo mi.gmo mk.gmo ml.gmo mn.gmo mr.gmo ms.gmo my.gmo nb.gmo nds.gmo ne.gmo nl.gmo nn.gmo nso.gmo oc.gmo or.gmo pa.gmo pl.gmo ps.gmo pt.gmo pt_BR.gmo ro.gmo ru.gmo rw.gmo si.gmo sk.gmo sl.gmo sq.gmo sr.gmo sr@latin.gmo sr@ije.gmo sv.gmo ta.gmo te.gmo th.gmo tk.gmo tr.gmo tt.gmo ug.gmo uk.gmo ur.gmo uz.gmo uz@cyrillic.gmo vi.gmo wa.gmo xh.gmo yi.gmo zh_CN.gmo zh_HK.gmo zh_TW.gmo
CATOBJEXT = .gmo
CC = /usr/bin/gcc
CCAS = /usr/bin/gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -O2
CCDEPMODE = depmode=gcc3
CFLAGS = -DGDK_PIXBUF_DISABLE_DEPRECATED -g -O2 -Wall
CPP = /usr/bin/gcc -E
CPPFLAGS =  -DG_DISABLE_SINGLE_INCLUDES -DATK_DISABLE_SINGLE_INCLUDES -DGDK_PIXBUF_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_SINGLE_INCLUDES  
CUPS_API_MAJOR = 
CUPS_API_MINOR = 
CUPS_CFLAGS = 
CUPS_CONFIG = no
CUPS_LIBS = 
CXX = c++
CXXCPP = c++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DATADIRNAME = share
DB2HTML = false
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DIRECTFB_CFLAGS = 
DIRECTFB_LIBS = 
DLLTOOL = dlltool
DSYMUTIL = :
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
EXE_MANIFEST_ARCHITECTURE = X86
FGREP = /bin/grep -F
GAIL_INET_LIBS = 
GAIL_LT_CURRENT_MINUS_AGE = 18
GAIL_LT_VERSION_INFO = 18:1:0
GDK_DEP_CFLAGS = -D_REENTRANT -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pango-1.0 -I/usr/local/include/cairo -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libpng14 -I/usr/local/include/gio-unix-2.0/ -I/usr/local/include/gdk-pixbuf-2.0   
GDK_DEP_LIBS =  -L/usr/local/lib -lpangocairo-1.0 -lpango-1.0 -lgio-2.0 -lgmodule-2.0 -lfontconfig -lXext -lXrender -lXinerama -lXcursor -lXcomposite -lXdamage -lXfixes -lgdk_pixbuf-2.0 -lgobject-2.0 -lgthread-2.0 -lglib-2.0 -lintl -lcairo -lX11   -lm
GDK_EXTRA_CFLAGS = 
GDK_EXTRA_LIBS = 
GDK_PACKAGES = pango pangocairo gdk-pixbuf-2.0
GDK_PIXBUF_CSOURCE = /usr/local/bin/gdk-pixbuf-csource
GDK_PIXBUF_LIBS = -L/usr/local/lib -lgdk_pixbuf-2.0 -lgobject-2.0 -lgthread-2.0 -lglib-2.0 -lintl  
GDK_WLIBS = 
GETTEXT_PACKAGE = gtk20
GLIB_CFLAGS = -D_REENTRANT -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include  
GLIB_GENMARSHAL = glib-genmarshal
GLIB_LIBS = -L/usr/local/lib -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lglib-2.0 -lintl  
GLIB_MKENUMS = glib-mkenums
GLIB_PREFIX = /usr/local
GMOFILES =  af.gmo am.gmo ang.gmo ar.gmo as.gmo ast.gmo az.gmo az_IR.gmo be.gmo be@latin.gmo bg.gmo bn.gmo bn_IN.gmo br.gmo bs.gmo ca.gmo ca@valencia.gmo crh.gmo cs.gmo cy.gmo da.gmo de.gmo dz.gmo el.gmo en_CA.gmo en_GB.gmo eo.gmo es.gmo et.gmo eu.gmo fa.gmo fi.gmo fr.gmo ga.gmo gl.gmo gu.gmo he.gmo hi.gmo hr.gmo hu.gmo hy.gmo ia.gmo id.gmo io.gmo is.gmo it.gmo ja.gmo ka.gmo kk.gmo kn.gmo ko.gmo ku.gmo li.gmo lt.gmo lv.gmo mai.gmo mi.gmo mk.gmo ml.gmo mn.gmo mr.gmo ms.gmo my.gmo nb.gmo nds.gmo ne.gmo nl.gmo nn.gmo nso.gmo oc.gmo or.gmo pa.gmo pl.gmo ps.gmo pt.gmo pt_BR.gmo ro.gmo ru.gmo rw.gmo si.gmo sk.gmo sl.gmo sq.gmo sr.gmo sr@latin.gmo sr@ije.gmo sv.gmo ta.gmo te.gmo th.gmo tk.gmo tr.gmo tt.gmo ug.gmo uk.gmo ur.gmo uz.gmo uz@cyrillic.gmo vi.gmo wa.gmo xh.gmo yi.gmo zh_CN.gmo zh_HK.gmo zh_TW.gmo
GMSGFMT = /usr/local/bin/msgfmt
GOBJECT_QUERY = gobject-query
GREP = /bin/grep
GTKDOC_CHECK = 
GTKDOC_MKPDF = 
GTKDOC_REBASE = true
GTK_API_VERSION = 2.0
GTK_BINARY_AGE = 2408
GTK_BINARY_VERSION = 2.10.0
GTK_DEBUG_FLAGS = -DG_DISABLE_CAST_CHECKS
GTK_DEP_CFLAGS = -D_REENTRANT -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pango-1.0 -I/usr/local/include/cairo -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libpng14 -I/usr/local/include/gdk-pixbuf-2.0 -I/usr/local/include/atk-1.0    
GTK_DEP_LIBS =   -L/usr/local/lib -lpangocairo-1.0 -lX11 -lXcomposite -lXdamage -lXfixes -latk-1.0 -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lglib-2.0 -lintl    -lm
GTK_EXTRA_CFLAGS = 
GTK_EXTRA_LIBS = 
GTK_INTERFACE_AGE = 8
GTK_MAJOR_VERSION = 2
GTK_MICRO_VERSION = 8
GTK_MINOR_VERSION = 24
GTK_PACKAGES = atk cairo gdk-pixbuf-2.0 gio-2.0 pangoft2
GTK_UPDATE_ICON_CACHE = 
GTK_VERSION = 2.24.8
GTK_XIM_FLAGS = 
HAVE_HTTP_AUTHSTRING = 
HTML_DIR = ${datadir}/gtk-doc/html
INCLUDED_IMMODULE_DEFINE = 
INCLUDED_IMMODULE_OBJ = 
INDENT = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = -lintl 
INTROSPECTION_CFLAGS = 
INTROSPECTION_COMPILER = 
INTROSPECTION_GENERATE = 
INTROSPECTION_GIRDIR = 
INTROSPECTION_LIBS = 
INTROSPECTION_MAKEFILE = 
INTROSPECTION_SCANNER = 
INTROSPECTION_TYPELIBDIR = 
LD = /usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_EXPORT_OPTIONS = -export-symbols-regex "^[^_].*"
LIB_EXE_MACHINE_FLAG = X86
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
LT_CURRENT_MINUS_AGE = 0
LT_VERSION_INFO = 2400:8:2400
MAINT = 
MAKEINFO = ${SHELL} /home/chris/gtk+-2.24.8/missing --run makeinfo
MANIFEST_TOOL = :
MATH_LIB = -lm
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/local/bin/msgfmt
MSGFMT_OPTS = -c
NM = /usr/bin/nm -p
NMEDIT = nmedit
OBJDUMP = objdump
OBJEXT = o
OTOOL = otool
OTOOL64 = otool64
PACKAGE = gtk+
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=gtk%2B
PACKAGE_NAME = gtk+
PACKAGE_STRING = gtk+ 2.24.8
PACKAGE_TARNAME = gtk+
PACKAGE_URL = 
PACKAGE_VERSION = 2.24.8
PANGO_PREFIX = /usr/local
PATH_SEPARATOR = :
PERL = /usr/local/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /usr/local/lib/pkgconfig:/usr/lib/pkgconfig
POFILES =  af.po am.po ang.po ar.po as.po ast.po az.po az_IR.po be.po be@latin.po bg.po bn.po bn_IN.po br.po bs.po ca.po ca@valencia.po crh.po cs.po cy.po da.po de.po dz.po el.po en_CA.po en_GB.po eo.po es.po et.po eu.po fa.po fi.po fr.po ga.po gl.po gu.po he.po hi.po hr.po hu.po hy.po ia.po id.po io.po is.po it.po ja.po ka.po kk.po kn.po ko.po ku.po li.po lt.po lv.po mai.po mi.po mk.po ml.po mn.po mr.po ms.po my.po nb.po nds.po ne.po nl.po nn.po nso.po oc.po or.po pa.po pl.po ps.po pt.po pt_BR.po ro.po ru.po rw.po si.po sk.po sl.po sq.po sr.po sr@latin.po sr@ije.po sv.po ta.po te.po th.po tk.po tr.po tt.po ug.po uk.po ur.po uz.po uz@cyrillic.po vi.po wa.po xh.po yi.po zh_CN.po zh_HK.po zh_TW.po
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
RANLIB = ranlib
REBUILD = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
USE_NLS = yes
VERSION = 2.24.8
WINDRES = 
XGETTEXT = /usr/local/bin/xgettext
XMKMF = 
XMLCATALOG = 
XML_CATALOG_FILE = 
XSLTPROC = 
X_CFLAGS =  
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
abs_builddir = /home/chris/gtk+-2.24.8/tests
abs_srcdir = /home/chris/gtk+-2.24.8/tests
abs_top_builddir = /home/chris/gtk+-2.24.8
abs_top_srcdir = /home/chris/gtk+-2.24.8
ac_ct_AR = ar
ac_ct_CC = /usr/bin/gcc
ac_ct_CXX = c++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = arm-apple-darwin10.4.0
build_alias = 
build_cpu = arm
build_os = darwin10.4.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gdktarget = x11
gdktargetlib = libgdk-x11-2.0.la
gtktargetlib = libgtk-x11-2.0.la
host = arm-apple-darwin10.4.0
host_alias = 
host_cpu = arm
host_os = darwin10.4.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/chris/gtk+-2.24.8/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = /usr/local/share/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
ms_librarian = 
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
GTESTER = gtester		# in $PATH for non-GLIB packages
GTESTER_REPORT = gtester-report		# in $PATH for non-GLIB packages

# initialize variables for unconditional += appending
EXTRA_DIST = prop-editor.h testgtk.1 testgtkrc testgtkrc2 circles.xbm \
	3DRings.xpm FilesQueue.xpm Modeller.xpm check-y.xpm \
	check-n.xpm marble.xpm test.xpm check-y.xpm check-n.xpm \
	test.xpm merge-1.ui merge-2.ui merge-3.ui gnome-textfile.png \
	makefile.msc file-chooser-test-dir/empty \
	file-chooser-test-dir/text.txt
TEST_PROGS = 

### testing rules

# Xvfb based test rules
XVFB = Xvfb -ac -noreset -screen 0 800x600x16
XIDS = 101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 \
   491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 \
   991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 \
  1008 1009 4703 4721 4723 4729 4733 4751 9973 9974 9975 9976 9977 9978 9979 \
  9980 9981 9982 9983 9984 9985 9986 9987 9988 9989 9990 9991 9992 9993 9994 \
  9995 9996 9997 9998 9999

SKIP_GDKTARGET = \
	test "$(gdktarget)" != "x11" \
	&& echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."

XVFB_START = \
	${XVFB} -help 2>/dev/null 1>&2 \
	&& XID=`for id in $(XIDS) ; do test -e /tmp/.X$$id-lock || { echo $$id; exit 0; }; done; exit 1` \
	&& { ${XVFB} :$$XID -screen 0 800x600x16 -nolisten tcp -auth /dev/null >/dev/null 2>&1 & \
	       trap "kill -15 $$! " 0 HUP INT QUIT TRAP USR1 PIPE TERM ; } \
	|| { echo "Gtk+Tests:ERROR: Failed to start Xvfb environment for X11 target tests."; exit 1; } \
	&& DISPLAY=:$$XID && export DISPLAY

INCLUDES = \
	-I$(top_srcdir)			\
	-I$(top_builddir)/gdk		\
	-I$(top_srcdir)/gdk		\
	-DGDK_DISABLE_DEPRECATED	\
	-DGTK_DISABLE_DEPRECATED	\
	$(GTK_DEBUG_FLAGS)		\
	$(GTK_DEP_CFLAGS)

DEPS = \
	$(top_builddir)/gdk/$(gdktargetlib)				\
	$(top_builddir)/gtk/$(gtktargetlib)

LDADDS = \
	$(top_builddir)/gdk/$(gdktargetlib)				\
	$(top_builddir)/gtk/$(gtktargetlib)				\
	$(GTK_DEP_LIBS)							\
	-lm

testsocket_programs = testsocket testsocket_child
autotestkeywords_SOURCES = autotestkeywords.cc
autotestkeywords_CPPFLAGS = -I$(srcdir)/dummy-headers \
	$(am__append_2)
flicker_DEPENDENCIES = $(TEST_DEPS)
simple_DEPENDENCIES = $(TEST_DEPS)
print_editor_DEPENDENCIES = $(TEST_DEPS)
testicontheme_DEPENDENCIES = $(TEST_DEPS)
testiconview_DEPENDENCIES = $(TEST_DEPS)
testaccel_DEPENDENCIES = $(TEST_DEPS)
testassistant_DEPENDENCIES = $(TEST_DEPS)
testbbox_DEPENDENCIES = $(TEST_DEPS)
testbuttons_DEPENDENCIES = $(TEST_DEPS)
testframe_DEPENDENCIES = $(TEST_DEPS)
testcairo_DEPENDENCIES = $(TEST_DEPS)
testcalendar_DEPENDENCIES = $(TEST_DEPS)
testcombo_DEPENDENCIES = $(TEST_DEPS)
testcombochange_DEPENDENCIES = $(TEST_DEPS)
testcellrenderertext_DEPENDENCIES = $(TEST_DEPS)
testclientmessage_DEPENDENCIES = $(TEST_DEPS)
testdnd_DEPENDENCIES = $(TEST_DEPS)
testentrycompletion_DEPENDENCIES = $(TEST_DEPS)
testentryicons_DEPENDENCIES = $(TEST_DEPS)
testfilechooser_DEPENDENCIES = $(TEST_DEPS)
testfilechooserbutton_DEPENDENCIES = $(TEST_DEPS)
testgtk_DEPENDENCIES = $(TEST_DEPS)
testinput_DEPENDENCIES = $(TEST_DEPS)
testimage_DEPENDENCIES = $(TEST_DEPS)
testmenus_DEPENDENCIES = $(TEST_DEPS)
testmenubars_DEPENDENCIES = $(TEST_DEPS)
testmountoperation_DEPENDENCIES = $(TEST_DEPS)
testmultidisplay_DEPENDENCIES = $(TEST_DEPS)
testmultiscreen_DEPENDENCIES = $(TEST_DEPS)
testnotebookdnd_DEPENDENCIES = $(TEST_DEPS)
testnouiprint_DEPENDENCIES = $(TEST_DEPS)
testoffscreen_DEPENDENCIES = $(TEST_DEPS)
testoffscreenwindow_DEPENDENCIES = $(TEST_DEPS)
testorientable_DEPENDENCIES = $(TEST_DEPS)
testprint_DEPENDENCIES = $(TEST_DEPS)
testrecentchooser_DEPENDENCIES = $(TEST_DEPS)
testrecentchoosermenu_DEPENDENCIES = $(TEST_DEPS)
testrgb_DEPENDENCIES = $(TEST_DEPS)
testrichtext_DEPENDENCIES = $(TEST_DEPS)
testscale_DEPENDENCIES = $(TEST_DEPS)
testselection_DEPENDENCIES = $(TEST_DEPS)
testsocket_DEPENDENCIES = $(DEPS)
testsocket_child_DEPENDENCIES = $(DEPS)
testspinbutton_DEPENDENCIES = $(TEST_DEPS)
teststatusicon_DEPENDENCIES = $(TEST_DEPS)
testtext_DEPENDENCIES = $(TEST_DEPS)
testtreeedit_DEPENDENCIES = $(DEPS)
testtreemodel_DEPENDENCIES = $(DEPS)
testtreeview_DEPENDENCIES = $(DEPS)
testtreefocus_DEPENDENCIES = $(DEPS)
testtreeflow_DEPENDENCIES = $(DEPS)
testtreecolumns_DEPENDENCIES = $(DEPS)
testtreecolumnsizing_DEPENDENCIES = $(DEPS)
testtreesort_DEPENDENCIES = $(DEPS)
treestoretest_DEPENDENCIES = $(TEST_DEPS)
testxinerama_DEPENDENCIES = $(TEST_DEPS)
testmerge_DEPENDENCIES = $(TEST_DEPS)
testactions_DEPENDENCIES = $(TEST_DEPS)
testgrouping_DEPENDENCIES = $(TEST_DEPS)
testtooltips_DEPENDENCIES = $(TEST_DEPS)
testvolumebutton_DEPENDENCIES = $(TEST_DEPS)
testwindows_DEPENDENCIES = $(TEST_DEPS)
flicker_LDADD = $(LDADDS)
simple_LDADD = $(LDADDS)
print_editor_LDADD = $(LDADDS)
testaccel_LDADD = $(LDADDS)
testassistant_LDADD = $(LDADDS)
testbbox_LDADD = $(LDADDS)
testbuttons_LDADD = $(LDADDS)
testframe_LDADD = $(LDADDS)
testcairo_LDADD = $(LDADDS)
testcalendar_LDADD = $(LDADDS)
testcombo_LDADD = $(LDADDS)
testcombochange_LDADD = $(LDADDS)
testcellrenderertext_LDADD = $(LDADDS)
testclientmessage_LDADD = $(LDADDS)
testdnd_LDADD = $(LDADDS)
testentrycompletion_LDADD = $(LDADDS)
testentryicons_LDADD = $(LDADDS)
testfilechooser_LDADD = $(LDADDS)
testfilechooserbutton_LDADD = $(LDADDS)
testgtk_LDADD = $(LDADDS)
testicontheme_LDADD = $(LDADDS)
testiconview_LDADD = $(LDADDS)
testiconview_keynav_LDADD = $(LDADDS)
testinput_LDADD = $(LDADDS)
testimage_LDADD = $(LDADDS)
testmenus_LDADD = $(LDADDS)
testmenubars_LDADD = $(LDADDS)
testmountoperation_LDADD = $(LDADDS)
testmultidisplay_LDADD = $(LDADDS)
testmultiscreen_LDADD = $(LDADDS)
testnotebookdnd_LDADD = $(LDADDS)
testnouiprint_LDADD = $(LDADDS)
testoffscreen_LDADD = $(LDADDS)
testoffscreenwindow_LDADD = $(LDADDS)
testorientable_LDADD = $(LDADDS)
testprint_LDADD = $(LDADDS)
testrecentchooser_LDADD = $(LDADDS)
testrecentchoosermenu_LDADD = $(LDADDS)
testrgb_LDADD = $(LDADDS)
testrichtext_LDADD = $(LDADDS)
testscale_LDADD = $(LDADDS)
testselection_LDADD = $(LDADDS)
testsocket_LDADD = $(LDADDS)
testsocket_child_LDADD = $(LDADDS)
testspinbutton_LDADD = $(LDADDS)
teststatusicon_LDADD = $(LDADDS)
testtoolbar_LDADD = $(LDADDS)
stresstest_toolbar_LDADD = $(LDADDS)
testtreeedit_LDADD = $(LDADDS)
testtreemodel_LDADD = $(LDADDS)
testtreeview_LDADD = $(LDADDS)
testtreefocus_LDADD = $(LDADDS)
testtreeflow_LDADD = $(LDADDS)
testtreecolumns_LDADD = $(LDADDS)
testtreecolumnsizing_LDADD = $(LDADDS)
testtreesort_LDADD = $(LDADDS)
testtext_LDADD = $(LDADDS)
treestoretest_LDADD = $(LDADDS)
testxinerama_LDADD = $(LDADDS)
testmerge_LDADD = $(LDADDS)
testactions_LDADD = $(LDADDS)
testgrouping_LDADD = $(LDADDS)
testtooltips_LDADD = $(LDADDS)
testvolumebutton_LDADD = $(LDADDS)
testwindows_LDADD = $(LDADDS)
testentrycompletion_SOURCES = \
	prop-editor.c		\
	testentrycompletion.c

testentryicons_SOURCES = \
	prop-editor.c		\
	testentryicons.c

testfilechooser_SOURCES = \
	prop-editor.c		\
	testfilechooser.c 	

testfilechooserbutton_SOURCES = \
	prop-editor.c		\
	testfilechooserbutton.c 	

testgtk_SOURCES = \
	prop-editor.c   \
	testgtk.c 	

testtreeedit_SOURCES = \
	testtreeedit.c

testtreemodel_SOURCES = \
	testtreemodel.c

testtreeview_SOURCES = \
	prop-editor.c	\
	testtreeview.c 

testtext_SOURCES = \
	prop-editor.c	\
	testtext.c 

testtoolbar_SOURCES = \
	testtoolbar.c	\
	prop-editor.c

testprint_SOURCES = \
	testprint.c		\
	testprintfileoperation.h \
	testprintfileoperation.c

testsocket_SOURCES = \
	testsocket.c		\
	testsocket_common.c

testsocket_child_SOURCES = \
	testsocket_child.c	\
	testsocket_common.c

testspinbutton_SOURCES = \
	testspinbutton.c

teststatusicon_SOURCES = \
	prop-editor.c		\
	teststatusicon.c

testmerge_SOURCES = \
	testmerge.c

testactions_SOURCES = \
	testactions.c

testbbox_SOURCES = \
	testbbox.c

testbuttons_SOURCES = \
	testbuttons.c

testframe_SOURCES = \
	testframe.c

testiconview_SOURCES = \
	testiconview.c		\
	prop-editor.c

testiconview_keynav_SOURCES = \
	testiconview-keynav.c

testrecentchooser_SOURCES = \
	prop-editor.c 		\
	testrecentchooser.c

testgrouping_SOURCES = \
	testgrouping.c

testtooltips_SOURCES = \
	testtooltips.c

testrecentchoosermenu_SOURCES = \
	testrecentchoosermenu.c

testvolumebutton_SOURCES = \
	testvolumebutton.c

testoffscreen_SOURCES = \
	gtkoffscreenbox.c	\
	gtkoffscreenbox.h	\
	testoffscreen.c

testoffscreenwindow_SOURCES = \
	testoffscreenwindow.c

testwindows_SOURCES = \
	testwindows.c

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.decl $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
autotestkeywords$(EXEEXT): $(autotestkeywords_OBJECTS) $(autotestkeywords_DEPENDENCIES) 
	@rm -f autotestkeywords$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(autotestkeywords_OBJECTS) $(autotestkeywords_LDADD) $(LIBS)
flicker$(EXEEXT): $(flicker_OBJECTS) $(flicker_DEPENDENCIES) 
	@rm -f flicker$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(flicker_OBJECTS) $(flicker_LDADD) $(LIBS)
print-editor$(EXEEXT): $(print_editor_OBJECTS) $(print_editor_DEPENDENCIES) 
	@rm -f print-editor$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(print_editor_OBJECTS) $(print_editor_LDADD) $(LIBS)
simple$(EXEEXT): $(simple_OBJECTS) $(simple_DEPENDENCIES) 
	@rm -f simple$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(simple_OBJECTS) $(simple_LDADD) $(LIBS)
stresstest-toolbar$(EXEEXT): $(stresstest_toolbar_OBJECTS) $(stresstest_toolbar_DEPENDENCIES) 
	@rm -f stresstest-toolbar$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(stresstest_toolbar_OBJECTS) $(stresstest_toolbar_LDADD) $(LIBS)
testaccel$(EXEEXT): $(testaccel_OBJECTS) $(testaccel_DEPENDENCIES) 
	@rm -f testaccel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testaccel_OBJECTS) $(testaccel_LDADD) $(LIBS)
testactions$(EXEEXT): $(testactions_OBJECTS) $(testactions_DEPENDENCIES) 
	@rm -f testactions$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testactions_OBJECTS) $(testactions_LDADD) $(LIBS)
testassistant$(EXEEXT): $(testassistant_OBJECTS) $(testassistant_DEPENDENCIES) 
	@rm -f testassistant$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testassistant_OBJECTS) $(testassistant_LDADD) $(LIBS)
testbbox$(EXEEXT): $(testbbox_OBJECTS) $(testbbox_DEPENDENCIES) 
	@rm -f testbbox$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testbbox_OBJECTS) $(testbbox_LDADD) $(LIBS)
testbuttons$(EXEEXT): $(testbuttons_OBJECTS) $(testbuttons_DEPENDENCIES) 
	@rm -f testbuttons$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testbuttons_OBJECTS) $(testbuttons_LDADD) $(LIBS)
testcairo$(EXEEXT): $(testcairo_OBJECTS) $(testcairo_DEPENDENCIES) 
	@rm -f testcairo$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testcairo_OBJECTS) $(testcairo_LDADD) $(LIBS)
testcalendar$(EXEEXT): $(testcalendar_OBJECTS) $(testcalendar_DEPENDENCIES) 
	@rm -f testcalendar$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testcalendar_OBJECTS) $(testcalendar_LDADD) $(LIBS)
testcellrenderertext$(EXEEXT): $(testcellrenderertext_OBJECTS) $(testcellrenderertext_DEPENDENCIES) 
	@rm -f testcellrenderertext$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testcellrenderertext_OBJECTS) $(testcellrenderertext_LDADD) $(LIBS)
testclientmessage$(EXEEXT): $(testclientmessage_OBJECTS) $(testclientmessage_DEPENDENCIES) 
	@rm -f testclientmessage$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testclientmessage_OBJECTS) $(testclientmessage_LDADD) $(LIBS)
testcombo$(EXEEXT): $(testcombo_OBJECTS) $(testcombo_DEPENDENCIES) 
	@rm -f testcombo$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testcombo_OBJECTS) $(testcombo_LDADD) $(LIBS)
testcombochange$(EXEEXT): $(testcombochange_OBJECTS) $(testcombochange_DEPENDENCIES) 
	@rm -f testcombochange$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testcombochange_OBJECTS) $(testcombochange_LDADD) $(LIBS)
testdnd$(EXEEXT): $(testdnd_OBJECTS) $(testdnd_DEPENDENCIES) 
	@rm -f testdnd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testdnd_OBJECTS) $(testdnd_LDADD) $(LIBS)
testentrycompletion$(EXEEXT): $(testentrycompletion_OBJECTS) $(testentrycompletion_DEPENDENCIES) 
	@rm -f testentrycompletion$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testentrycompletion_OBJECTS) $(testentrycompletion_LDADD) $(LIBS)
testentryicons$(EXEEXT): $(testentryicons_OBJECTS) $(testentryicons_DEPENDENCIES) 
	@rm -f testentryicons$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testentryicons_OBJECTS) $(testentryicons_LDADD) $(LIBS)
testfilechooser$(EXEEXT): $(testfilechooser_OBJECTS) $(testfilechooser_DEPENDENCIES) 
	@rm -f testfilechooser$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testfilechooser_OBJECTS) $(testfilechooser_LDADD) $(LIBS)
testfilechooserbutton$(EXEEXT): $(testfilechooserbutton_OBJECTS) $(testfilechooserbutton_DEPENDENCIES) 
	@rm -f testfilechooserbutton$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testfilechooserbutton_OBJECTS) $(testfilechooserbutton_LDADD) $(LIBS)
testframe$(EXEEXT): $(testframe_OBJECTS) $(testframe_DEPENDENCIES) 
	@rm -f testframe$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testframe_OBJECTS) $(testframe_LDADD) $(LIBS)
testgrouping$(EXEEXT): $(testgrouping_OBJECTS) $(testgrouping_DEPENDENCIES) 
	@rm -f testgrouping$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testgrouping_OBJECTS) $(testgrouping_LDADD) $(LIBS)
testgtk$(EXEEXT): $(testgtk_OBJECTS) $(testgtk_DEPENDENCIES) 
	@rm -f testgtk$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testgtk_OBJECTS) $(testgtk_LDADD) $(LIBS)
testicontheme$(EXEEXT): $(testicontheme_OBJECTS) $(testicontheme_DEPENDENCIES) 
	@rm -f testicontheme$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testicontheme_OBJECTS) $(testicontheme_LDADD) $(LIBS)
testiconview$(EXEEXT): $(testiconview_OBJECTS) $(testiconview_DEPENDENCIES) 
	@rm -f testiconview$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testiconview_OBJECTS) $(testiconview_LDADD) $(LIBS)
testiconview-keynav$(EXEEXT): $(testiconview_keynav_OBJECTS) $(testiconview_keynav_DEPENDENCIES) 
	@rm -f testiconview-keynav$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testiconview_keynav_OBJECTS) $(testiconview_keynav_LDADD) $(LIBS)
testimage$(EXEEXT): $(testimage_OBJECTS) $(testimage_DEPENDENCIES) 
	@rm -f testimage$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testimage_OBJECTS) $(testimage_LDADD) $(LIBS)
testinput$(EXEEXT): $(testinput_OBJECTS) $(testinput_DEPENDENCIES) 
	@rm -f testinput$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testinput_OBJECTS) $(testinput_LDADD) $(LIBS)
testmenubars$(EXEEXT): $(testmenubars_OBJECTS) $(testmenubars_DEPENDENCIES) 
	@rm -f testmenubars$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testmenubars_OBJECTS) $(testmenubars_LDADD) $(LIBS)
testmenus$(EXEEXT): $(testmenus_OBJECTS) $(testmenus_DEPENDENCIES) 
	@rm -f testmenus$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testmenus_OBJECTS) $(testmenus_LDADD) $(LIBS)
testmerge$(EXEEXT): $(testmerge_OBJECTS) $(testmerge_DEPENDENCIES) 
	@rm -f testmerge$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testmerge_OBJECTS) $(testmerge_LDADD) $(LIBS)
testmountoperation$(EXEEXT): $(testmountoperation_OBJECTS) $(testmountoperation_DEPENDENCIES) 
	@rm -f testmountoperation$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testmountoperation_OBJECTS) $(testmountoperation_LDADD) $(LIBS)
testmultidisplay$(EXEEXT): $(testmultidisplay_OBJECTS) $(testmultidisplay_DEPENDENCIES) 
	@rm -f testmultidisplay$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testmultidisplay_OBJECTS) $(testmultidisplay_LDADD) $(LIBS)
testmultiscreen$(EXEEXT): $(testmultiscreen_OBJECTS) $(testmultiscreen_DEPENDENCIES) 
	@rm -f testmultiscreen$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testmultiscreen_OBJECTS) $(testmultiscreen_LDADD) $(LIBS)
testnotebookdnd$(EXEEXT): $(testnotebookdnd_OBJECTS) $(testnotebookdnd_DEPENDENCIES) 
	@rm -f testnotebookdnd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testnotebookdnd_OBJECTS) $(testnotebookdnd_LDADD) $(LIBS)
testnouiprint$(EXEEXT): $(testnouiprint_OBJECTS) $(testnouiprint_DEPENDENCIES) 
	@rm -f testnouiprint$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testnouiprint_OBJECTS) $(testnouiprint_LDADD) $(LIBS)
testoffscreen$(EXEEXT): $(testoffscreen_OBJECTS) $(testoffscreen_DEPENDENCIES) 
	@rm -f testoffscreen$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testoffscreen_OBJECTS) $(testoffscreen_LDADD) $(LIBS)
testoffscreenwindow$(EXEEXT): $(testoffscreenwindow_OBJECTS) $(testoffscreenwindow_DEPENDENCIES) 
	@rm -f testoffscreenwindow$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testoffscreenwindow_OBJECTS) $(testoffscreenwindow_LDADD) $(LIBS)
testorientable$(EXEEXT): $(testorientable_OBJECTS) $(testorientable_DEPENDENCIES) 
	@rm -f testorientable$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testorientable_OBJECTS) $(testorientable_LDADD) $(LIBS)
testprint$(EXEEXT): $(testprint_OBJECTS) $(testprint_DEPENDENCIES) 
	@rm -f testprint$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testprint_OBJECTS) $(testprint_LDADD) $(LIBS)
testrecentchooser$(EXEEXT): $(testrecentchooser_OBJECTS) $(testrecentchooser_DEPENDENCIES) 
	@rm -f testrecentchooser$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testrecentchooser_OBJECTS) $(testrecentchooser_LDADD) $(LIBS)
testrecentchoosermenu$(EXEEXT): $(testrecentchoosermenu_OBJECTS) $(testrecentchoosermenu_DEPENDENCIES) 
	@rm -f testrecentchoosermenu$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testrecentchoosermenu_OBJECTS) $(testrecentchoosermenu_LDADD) $(LIBS)
testrgb$(EXEEXT): $(testrgb_OBJECTS) $(testrgb_DEPENDENCIES) 
	@rm -f testrgb$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testrgb_OBJECTS) $(testrgb_LDADD) $(LIBS)
testrichtext$(EXEEXT): $(testrichtext_OBJECTS) $(testrichtext_DEPENDENCIES) 
	@rm -f testrichtext$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testrichtext_OBJECTS) $(testrichtext_LDADD) $(LIBS)
testscale$(EXEEXT): $(testscale_OBJECTS) $(testscale_DEPENDENCIES) 
	@rm -f testscale$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testscale_OBJECTS) $(testscale_LDADD) $(LIBS)
testselection$(EXEEXT): $(testselection_OBJECTS) $(testselection_DEPENDENCIES) 
	@rm -f testselection$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testselection_OBJECTS) $(testselection_LDADD) $(LIBS)
testsocket$(EXEEXT): $(testsocket_OBJECTS) $(testsocket_DEPENDENCIES) 
	@rm -f testsocket$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testsocket_OBJECTS) $(testsocket_LDADD) $(LIBS)
testsocket_child$(EXEEXT): $(testsocket_child_OBJECTS) $(testsocket_child_DEPENDENCIES) 
	@rm -f testsocket_child$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testsocket_child_OBJECTS) $(testsocket_child_LDADD) $(LIBS)
testspinbutton$(EXEEXT): $(testspinbutton_OBJECTS) $(testspinbutton_DEPENDENCIES) 
	@rm -f testspinbutton$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testspinbutton_OBJECTS) $(testspinbutton_LDADD) $(LIBS)
teststatusicon$(EXEEXT): $(teststatusicon_OBJECTS) $(teststatusicon_DEPENDENCIES) 
	@rm -f teststatusicon$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(teststatusicon_OBJECTS) $(teststatusicon_LDADD) $(LIBS)
testtext$(EXEEXT): $(testtext_OBJECTS) $(testtext_DEPENDENCIES) 
	@rm -f testtext$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testtext_OBJECTS) $(testtext_LDADD) $(LIBS)
testtoolbar$(EXEEXT): $(testtoolbar_OBJECTS) $(testtoolbar_DEPENDENCIES) 
	@rm -f testtoolbar$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testtoolbar_OBJECTS) $(testtoolbar_LDADD) $(LIBS)
testtooltips$(EXEEXT): $(testtooltips_OBJECTS) $(testtooltips_DEPENDENCIES) 
	@rm -f testtooltips$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testtooltips_OBJECTS) $(testtooltips_LDADD) $(LIBS)
testtreecolumns$(EXEEXT): $(testtreecolumns_OBJECTS) $(testtreecolumns_DEPENDENCIES) 
	@rm -f testtreecolumns$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testtreecolumns_OBJECTS) $(testtreecolumns_LDADD) $(LIBS)
testtreecolumnsizing$(EXEEXT): $(testtreecolumnsizing_OBJECTS) $(testtreecolumnsizing_DEPENDENCIES) 
	@rm -f testtreecolumnsizing$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testtreecolumnsizing_OBJECTS) $(testtreecolumnsizing_LDADD) $(LIBS)
testtreeedit$(EXEEXT): $(testtreeedit_OBJECTS) $(testtreeedit_DEPENDENCIES) 
	@rm -f testtreeedit$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testtreeedit_OBJECTS) $(testtreeedit_LDADD) $(LIBS)
testtreeflow$(EXEEXT): $(testtreeflow_OBJECTS) $(testtreeflow_DEPENDENCIES) 
	@rm -f testtreeflow$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testtreeflow_OBJECTS) $(testtreeflow_LDADD) $(LIBS)
testtreefocus$(EXEEXT): $(testtreefocus_OBJECTS) $(testtreefocus_DEPENDENCIES) 
	@rm -f testtreefocus$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testtreefocus_OBJECTS) $(testtreefocus_LDADD) $(LIBS)
testtreemodel$(EXEEXT): $(testtreemodel_OBJECTS) $(testtreemodel_DEPENDENCIES) 
	@rm -f testtreemodel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testtreemodel_OBJECTS) $(testtreemodel_LDADD) $(LIBS)
testtreesort$(EXEEXT): $(testtreesort_OBJECTS) $(testtreesort_DEPENDENCIES) 
	@rm -f testtreesort$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testtreesort_OBJECTS) $(testtreesort_LDADD) $(LIBS)
testtreeview$(EXEEXT): $(testtreeview_OBJECTS) $(testtreeview_DEPENDENCIES) 
	@rm -f testtreeview$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testtreeview_OBJECTS) $(testtreeview_LDADD) $(LIBS)
testvolumebutton$(EXEEXT): $(testvolumebutton_OBJECTS) $(testvolumebutton_DEPENDENCIES) 
	@rm -f testvolumebutton$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testvolumebutton_OBJECTS) $(testvolumebutton_LDADD) $(LIBS)
testwindows$(EXEEXT): $(testwindows_OBJECTS) $(testwindows_DEPENDENCIES) 
	@rm -f testwindows$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testwindows_OBJECTS) $(testwindows_LDADD) $(LIBS)
testxinerama$(EXEEXT): $(testxinerama_OBJECTS) $(testxinerama_DEPENDENCIES) 
	@rm -f testxinerama$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testxinerama_OBJECTS) $(testxinerama_LDADD) $(LIBS)
treestoretest$(EXEEXT): $(treestoretest_OBJECTS) $(treestoretest_DEPENDENCIES) 
	@rm -f treestoretest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(treestoretest_OBJECTS) $(treestoretest_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/autotestkeywords-autotestkeywords.Po
include ./$(DEPDIR)/flicker.Po
include ./$(DEPDIR)/gtkoffscreenbox.Po
include ./$(DEPDIR)/print-editor.Po
include ./$(DEPDIR)/prop-editor.Po
include ./$(DEPDIR)/simple.Po
include ./$(DEPDIR)/stresstest-toolbar.Po
include ./$(DEPDIR)/testaccel.Po
include ./$(DEPDIR)/testactions.Po
include ./$(DEPDIR)/testassistant.Po
include ./$(DEPDIR)/testbbox.Po
include ./$(DEPDIR)/testbuttons.Po
include ./$(DEPDIR)/testcairo.Po
include ./$(DEPDIR)/testcalendar.Po
include ./$(DEPDIR)/testcellrenderertext.Po
include ./$(DEPDIR)/testclientmessage.Po
include ./$(DEPDIR)/testcombo.Po
include ./$(DEPDIR)/testcombochange.Po
include ./$(DEPDIR)/testdnd.Po
include ./$(DEPDIR)/testentrycompletion.Po
include ./$(DEPDIR)/testentryicons.Po
include ./$(DEPDIR)/testfilechooser.Po
include ./$(DEPDIR)/testfilechooserbutton.Po
include ./$(DEPDIR)/testframe.Po
include ./$(DEPDIR)/testgrouping.Po
include ./$(DEPDIR)/testgtk.Po
include ./$(DEPDIR)/testicontheme.Po
include ./$(DEPDIR)/testiconview-keynav.Po
include ./$(DEPDIR)/testiconview.Po
include ./$(DEPDIR)/testimage.Po
include ./$(DEPDIR)/testinput.Po
include ./$(DEPDIR)/testmenubars.Po
include ./$(DEPDIR)/testmenus.Po
include ./$(DEPDIR)/testmerge.Po
include ./$(DEPDIR)/testmountoperation.Po
include ./$(DEPDIR)/testmultidisplay.Po
include ./$(DEPDIR)/testmultiscreen.Po
include ./$(DEPDIR)/testnotebookdnd.Po
include ./$(DEPDIR)/testnouiprint.Po
include ./$(DEPDIR)/testoffscreen.Po
include ./$(DEPDIR)/testoffscreenwindow.Po
include ./$(DEPDIR)/testorientable.Po
include ./$(DEPDIR)/testprint.Po
include ./$(DEPDIR)/testprintfileoperation.Po
include ./$(DEPDIR)/testrecentchooser.Po
include ./$(DEPDIR)/testrecentchoosermenu.Po
include ./$(DEPDIR)/testrgb.Po
include ./$(DEPDIR)/testrichtext.Po
include ./$(DEPDIR)/testscale.Po
include ./$(DEPDIR)/testselection.Po
include ./$(DEPDIR)/testsocket.Po
include ./$(DEPDIR)/testsocket_child.Po
include ./$(DEPDIR)/testsocket_common.Po
include ./$(DEPDIR)/testspinbutton.Po
include ./$(DEPDIR)/teststatusicon.Po
include ./$(DEPDIR)/testtext.Po
include ./$(DEPDIR)/testtoolbar.Po
include ./$(DEPDIR)/testtooltips.Po
include ./$(DEPDIR)/testtreecolumns.Po
include ./$(DEPDIR)/testtreecolumnsizing.Po
include ./$(DEPDIR)/testtreeedit.Po
include ./$(DEPDIR)/testtreeflow.Po
include ./$(DEPDIR)/testtreefocus.Po
include ./$(DEPDIR)/testtreemodel.Po
include ./$(DEPDIR)/testtreesort.Po
include ./$(DEPDIR)/testtreeview.Po
include ./$(DEPDIR)/testvolumebutton.Po
include ./$(DEPDIR)/testwindows.Po
include ./$(DEPDIR)/testxinerama.Po
include ./$(DEPDIR)/treestoretest.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

.cc.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

autotestkeywords-autotestkeywords.o: autotestkeywords.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(autotestkeywords_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT autotestkeywords-autotestkeywords.o -MD -MP -MF $(DEPDIR)/autotestkeywords-autotestkeywords.Tpo -c -o autotestkeywords-autotestkeywords.o `test -f 'autotestkeywords.cc' || echo '$(srcdir)/'`autotestkeywords.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/autotestkeywords-autotestkeywords.Tpo $(DEPDIR)/autotestkeywords-autotestkeywords.Po
#	$(AM_V_CXX) \
#	source='autotestkeywords.cc' object='autotestkeywords-autotestkeywords.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(autotestkeywords_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o autotestkeywords-autotestkeywords.o `test -f 'autotestkeywords.cc' || echo '$(srcdir)/'`autotestkeywords.cc

autotestkeywords-autotestkeywords.obj: autotestkeywords.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(autotestkeywords_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT autotestkeywords-autotestkeywords.obj -MD -MP -MF $(DEPDIR)/autotestkeywords-autotestkeywords.Tpo -c -o autotestkeywords-autotestkeywords.obj `if test -f 'autotestkeywords.cc'; then $(CYGPATH_W) 'autotestkeywords.cc'; else $(CYGPATH_W) '$(srcdir)/autotestkeywords.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/autotestkeywords-autotestkeywords.Tpo $(DEPDIR)/autotestkeywords-autotestkeywords.Po
#	$(AM_V_CXX) \
#	source='autotestkeywords.cc' object='autotestkeywords-autotestkeywords.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(autotestkeywords_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o autotestkeywords-autotestkeywords.obj `if test -f 'autotestkeywords.cc'; then $(CYGPATH_W) 'autotestkeywords.cc'; else $(CYGPATH_W) '$(srcdir)/autotestkeywords.cc'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS check-local
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am check-local \
	clean clean-generic clean-libtool clean-noinstPROGRAMS ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am

# call as: $(XVFB_START) && someprogram

# test: run all tests in cwd and subdirs
test: test-cwd test-recurse
# test-cwd: run tests in cwd
test-cwd: ${TEST_PROGS}
	@$(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \
	  $(XVFB_START) && { set -e; $(TESTS_ENVIRONMENT) ${GTESTER} --verbose ${TEST_PROGS}; }; \
	}
# test-recurse: run tests in subdirs
test-recurse:
	@ for subdir in $(SUBDIRS) ; do \
	    test "$$subdir" = "." -o "$$subdir" = "po" -o "$$subdir" = "po-properties" || \
	    ( cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) test ) || exit $? ; \
	  done
# test-report: run tests in subdirs and generate report
# perf-report: run tests in subdirs with -m perf and generate report
# full-report: like test-report: with -m perf and -m slow
test-report perf-report full-report:	${TEST_PROGS}
	@ ignore_logdir=true ; \
	  if test -z "$$GTESTER_LOGDIR" ; then \
	    GTESTER_LOGDIR=`mktemp -d "\`pwd\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \
	    ignore_logdir=false ; \
	  fi ; \
	  for subdir in $(SUBDIRS) ; do \
	    test "$$subdir" = "." -o "$$subdir" = "po" -o "$$subdir" = "po-properties" || \
	    ( cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $@ ) || exit $? ; \
	  done ; \
	  $(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \
	    case $@ in \
	    test-report) test_options="-k";; \
	    perf-report) test_options="-k -m=perf";; \
	    full-report) test_options="-k -m=perf -m=slow";; \
	    esac ; \
	    $(XVFB_START) && { \
	      set -e; \
	      if test -z "$$GTESTER_LOGDIR" ; then \
	        ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \
	      elif test -n "${TEST_PROGS}" ; then \
	        ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \
	      fi ; \
	    }; \
	  }; \
	  $$ignore_logdir || { \
	    echo '<?xml version="1.0"?>' > $@.xml ; \
	    echo '<report-collection>'  >> $@.xml ; \
	    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \
	      sed '1,1s/^<?xml\b[^>?]*?>//' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \
	    done ; \
	    echo >> $@.xml ; \
	    echo '</report-collection>' >> $@.xml ; \
	    rm -rf "$$GTESTER_LOGDIR"/ ; \
	    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \
	  }
.PHONY: test test-cwd test-recurse test-report perf-report full-report
# run make test-cwd as part of make check
check-local: test-cwd

-include $(top_srcdir)/git.mk

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
