# Makefile.in generated by automake 1.11.1 from Makefile.am.
# gtk/a11y/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# GTK+ - The GIMP Toolkit


pkgdatadir = $(datadir)/gtk+
pkgincludedir = $(includedir)/gtk+
pkglibdir = $(libdir)/gtk+
pkglibexecdir = $(libexecdir)/gtk+
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = arm-apple-darwin10.4.0
host_triplet = arm-apple-darwin10.4.0
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.decl ChangeLog
subdir = gtk/a11y
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gtk-doc.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
am__DEPENDENCIES_1 =
libgail_la_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__objects_1 = libgail_la-gail.lo libgail_la-gtkarrowaccessible.lo \
	libgail_la-gtkbooleancellaccessible.lo \
	libgail_la-gtkboxaccessible.lo \
	libgail_la-gtkbuttonaccessible.lo \
	libgail_la-gtkcellaccessible.lo \
	libgail_la-gtkcellaccessibleparent.lo \
	libgail_la-gtkcheckmenuitemaccessible.lo \
	libgail_la-gtkcomboboxaccessible.lo \
	libgail_la-gtkcontaineraccessible.lo \
	libgail_la-gtkcontainercellaccessible.lo \
	libgail_la-gtkentryaccessible.lo \
	libgail_la-gtkexpanderaccessible.lo \
	libgail_la-gtkframeaccessible.lo \
	libgail_la-gtkimageaccessible.lo \
	libgail_la-gtkimagecellaccessible.lo \
	libgail_la-gtklabelaccessible.lo \
	libgail_la-gtklinkbuttonaccessible.lo \
	libgail_la-gtkmenuaccessible.lo \
	libgail_la-gtkmenushellaccessible.lo \
	libgail_la-gtkmenuitemaccessible.lo \
	libgail_la-gtknotebookaccessible.lo \
	libgail_la-gtknotebookpageaccessible.lo \
	libgail_la-gtkpanedaccessible.lo \
	libgail_la-gtkprogressbaraccessible.lo \
	libgail_la-gtkradiobuttonaccessible.lo \
	libgail_la-gtkradiomenuitemaccessible.lo \
	libgail_la-gtkrangeaccessible.lo \
	libgail_la-gtkrenderercellaccessible.lo \
	libgail_la-gtkscaleaccessible.lo \
	libgail_la-gtkscalebuttonaccessible.lo \
	libgail_la-gtkscrollbaraccessible.lo \
	libgail_la-gtkscrolledwindowaccessible.lo \
	libgail_la-gtkspinbuttonaccessible.lo \
	libgail_la-gtkspinneraccessible.lo \
	libgail_la-gtkstatusbaraccessible.lo \
	libgail_la-gtkswitchaccessible.lo \
	libgail_la-gtktextcellaccessible.lo \
	libgail_la-gtktextviewaccessible.lo \
	libgail_la-gtktogglebuttonaccessible.lo \
	libgail_la-gtktoplevelaccessible.lo \
	libgail_la-gtktreeviewaccessible.lo \
	libgail_la-gtkwidgetaccessible.lo \
	libgail_la-gtkwindowaccessible.lo libgail_la-gailutil.lo \
	libgail_la-gailmisc.lo
am__objects_2 =
am_libgail_la_OBJECTS = $(am__objects_1) $(am__objects_2)
libgail_la_OBJECTS = $(am_libgail_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
libgail_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libgail_la_CFLAGS) \
	$(CFLAGS) $(libgail_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libgail_la_SOURCES)
DIST_SOURCES = $(libgail_la_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/chris/gtk+-3.2.1/build-aux/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/chris/gtk+-3.2.1/build-aux/missing --run tar
AM_DEFAULT_VERBOSITY = 0
AR = ar
AS = as
ATK_PREFIX = /usr/local
ATK_REQUIRED_VERSION = 2.1.5
AUTOCONF = ${SHELL} /home/chris/gtk+-3.2.1/build-aux/missing --run autoconf
AUTOHEADER = ${SHELL} /home/chris/gtk+-3.2.1/build-aux/missing --run autoheader
AUTOMAKE = ${SHELL} /home/chris/gtk+-3.2.1/build-aux/missing --run automake-1.11
AWK = gawk
BASE_DEPENDENCIES_CFLAGS = -D_REENTRANT -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/atk-1.0 -I/usr/local/include/pango-1.0 -I/usr/local/include/cairo -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libpng14 -I/usr/local/include/gdk-pixbuf-2.0  
BASE_DEPENDENCIES_LIBS = -L/usr/local/lib -latk-1.0 -lpango-1.0 -lgmodule-2.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgobject-2.0 -lgthread-2.0 -lglib-2.0 -lintl  
CAIRO_BACKEND_CFLAGS = -D_REENTRANT -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libpng14  
CAIRO_BACKEND_LIBS = -L/usr/local/lib -lX11 -lcairo  
CAIRO_PREFIX = /usr/local
CAIRO_REQUIRED_VERSION = 1.10.0
CATALOGS =  af.gmo am.gmo ang.gmo ar.gmo as.gmo ast.gmo az.gmo az_IR.gmo be.gmo be@latin.gmo bg.gmo bn.gmo bn_IN.gmo br.gmo bs.gmo ca.gmo ca@valencia.gmo crh.gmo cs.gmo cy.gmo da.gmo de.gmo dz.gmo el.gmo en.gmo en_CA.gmo en_GB.gmo en@shaw.gmo eo.gmo es.gmo et.gmo eu.gmo fa.gmo fi.gmo fr.gmo ga.gmo gl.gmo gu.gmo he.gmo hi.gmo hr.gmo hu.gmo hy.gmo ia.gmo id.gmo io.gmo is.gmo it.gmo ja.gmo ka.gmo kg.gmo kk.gmo kn.gmo ko.gmo ku.gmo lg.gmo li.gmo lt.gmo lv.gmo mai.gmo mi.gmo mk.gmo ml.gmo mn.gmo mr.gmo ms.gmo my.gmo nb.gmo nds.gmo ne.gmo nl.gmo nn.gmo nso.gmo oc.gmo or.gmo pa.gmo pl.gmo ps.gmo pt.gmo pt_BR.gmo ro.gmo ru.gmo rw.gmo si.gmo sk.gmo sl.gmo sq.gmo sr.gmo sr@ije.gmo sr@latin.gmo sv.gmo ta.gmo te.gmo th.gmo tk.gmo tr.gmo tt.gmo ug.gmo uk.gmo ur.gmo uz.gmo uz@cyrillic.gmo vi.gmo wa.gmo xh.gmo yi.gmo zh_CN.gmo zh_HK.gmo zh_TW.gmo
CATOBJEXT = .gmo
CC = /usr/bin/gcc -std=gnu99
CCAS = /usr/bin/gcc -std=gnu99
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -O2
CCDEPMODE = depmode=gcc3
CFLAGS = -DGDK_PIXBUF_DISABLE_DEPRECATED -DG_DISABLE_DEPRECATED -g -O2 -Wall
COLORD_CFLAGS = 
COLORD_LIBS = 
CPP = /usr/bin/gcc -std=gnu99 -E
CPPFLAGS =  -DG_DISABLE_SINGLE_INCLUDES -DATK_DISABLE_SINGLE_INCLUDES  
CUPS_API_MAJOR = 
CUPS_API_MINOR = 
CUPS_CFLAGS = 
CUPS_CONFIG = no
CUPS_LIBS = 
CXX = c++
CXXCPP = c++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DATADIRNAME = share
DB2HTML = false
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = :
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
EXE_MANIFEST_ARCHITECTURE = X86
FGREP = /bin/grep -F
GAIL_INET_LIBS = 
GAIL_LT_CURRENT_MINUS_AGE = 0
GAIL_LT_VERSION_INFO = 0:0:0
GDK_BACKENDS = x11 broadway
GDK_DEP_CFLAGS = -D_REENTRANT -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pango-1.0 -I/usr/local/include/cairo -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libpng14 -I/usr/local/include/gio-unix-2.0/ -I/usr/local/include/gdk-pixbuf-2.0   
GDK_DEP_LIBS =  -L/usr/local/lib -lpangocairo-1.0 -lpango-1.0 -lgio-2.0 -lgmodule-2.0 -lfontconfig -lXext -lXi -lgdk_pixbuf-2.0 -lX11 -lcairo-gobject -lcairo -lgobject-2.0 -lgthread-2.0 -lglib-2.0 -lintl   -lm
GDK_EXTRA_CFLAGS = 
GDK_EXTRA_LIBS = 
GDK_PACKAGES = pango pangocairo gdk-pixbuf-2.0 cairo-gobject
GDK_PIXBUF_CSOURCE = /usr/local/bin/gdk-pixbuf-csource
GDK_PIXBUF_LIBS = -L/usr/local/lib -lgdk_pixbuf-2.0 -lgobject-2.0 -lgthread-2.0 -lglib-2.0 -lintl  
GDK_PIXBUF_REQUIRED_VERSION = 2.23.5
GETTEXT_PACKAGE = gtk30
GLIB_CFLAGS = -D_REENTRANT -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include  
GLIB_COMPILE_SCHEMAS = /usr/local/bin/glib-compile-schemas
GLIB_GENMARSHAL = glib-genmarshal
GLIB_LIBS = -L/usr/local/lib -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lglib-2.0 -lintl  
GLIB_MKENUMS = glib-mkenums
GLIB_PREFIX = /usr/local
GLIB_REQUIRED_VERSION = 2.29.14
GMOFILES =  af.gmo am.gmo ang.gmo ar.gmo as.gmo ast.gmo az.gmo az_IR.gmo be.gmo be@latin.gmo bg.gmo bn.gmo bn_IN.gmo br.gmo bs.gmo ca.gmo ca@valencia.gmo crh.gmo cs.gmo cy.gmo da.gmo de.gmo dz.gmo el.gmo en.gmo en_CA.gmo en_GB.gmo en@shaw.gmo eo.gmo es.gmo et.gmo eu.gmo fa.gmo fi.gmo fr.gmo ga.gmo gl.gmo gu.gmo he.gmo hi.gmo hr.gmo hu.gmo hy.gmo ia.gmo id.gmo io.gmo is.gmo it.gmo ja.gmo ka.gmo kg.gmo kk.gmo kn.gmo ko.gmo ku.gmo lg.gmo li.gmo lt.gmo lv.gmo mai.gmo mi.gmo mk.gmo ml.gmo mn.gmo mr.gmo ms.gmo my.gmo nb.gmo nds.gmo ne.gmo nl.gmo nn.gmo nso.gmo oc.gmo or.gmo pa.gmo pl.gmo ps.gmo pt.gmo pt_BR.gmo ro.gmo ru.gmo rw.gmo si.gmo sk.gmo sl.gmo sq.gmo sr.gmo sr@ije.gmo sr@latin.gmo sv.gmo ta.gmo te.gmo th.gmo tk.gmo tr.gmo tt.gmo ug.gmo uk.gmo ur.gmo uz.gmo uz@cyrillic.gmo vi.gmo wa.gmo xh.gmo yi.gmo zh_CN.gmo zh_HK.gmo zh_TW.gmo
GMSGFMT = /usr/local/bin/msgfmt
GOBJECT_QUERY = gobject-query
GREP = /bin/grep
GSETTINGS_DISABLE_SCHEMAS_COMPILE = 
GTKDOC_CHECK = 
GTKDOC_DEPS_CFLAGS = 
GTKDOC_DEPS_LIBS = 
GTKDOC_MKPDF = 
GTKDOC_REBASE = true
GTK_API_VERSION = 3.0
GTK_BINARY_AGE = 201
GTK_BINARY_VERSION = 3.0.0
GTK_DEBUG_FLAGS = -DG_DISABLE_CAST_CHECKS
GTK_DEP_CFLAGS = -D_REENTRANT -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pango-1.0 -I/usr/local/include/cairo -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libpng14 -I/usr/local/include/gdk-pixbuf-2.0 -I/usr/local/include/atk-1.0    
GTK_DEP_LIBS =   -L/usr/local/lib -lpangocairo-1.0 -lX11 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lglib-2.0 -lintl    -lm
GTK_EXTRA_CFLAGS = 
GTK_EXTRA_LIBS = 
GTK_INTERFACE_AGE = 1
GTK_LINK_FLAGS = 
GTK_MAJOR_VERSION = 3
GTK_MICRO_VERSION = 1
GTK_MINOR_VERSION = 2
GTK_PACKAGES = atk cairo cairo-gobject gdk-pixbuf-2.0 gio-2.0 pangoft2
GTK_UPDATE_ICON_CACHE = 
GTK_VERSION = 3.2.1
GTK_XIM_FLAGS = 
HAVE_HTTP_AUTHSTRING = 
HTML_DIR = ${datadir}/gtk-doc/html
INCLUDED_IMMODULE_DEFINE = 
INCLUDED_IMMODULE_OBJ = 
INDENT = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = -lintl 
INTROSPECTION_CFLAGS = 
INTROSPECTION_COMPILER = 
INTROSPECTION_GENERATE = 
INTROSPECTION_GIRDIR = 
INTROSPECTION_LIBS = 
INTROSPECTION_MAKEFILE = 
INTROSPECTION_REQUIRED_VERSION = 0.10.1
INTROSPECTION_SCANNER = 
INTROSPECTION_TYPELIBDIR = 
LD = /usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_EXPORT_OPTIONS = -export-symbols-regex "^[^_].*"
LIB_EXE_MACHINE_FLAG = X86
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
LT_CURRENT_MINUS_AGE = 0
LT_VERSION_INFO = 200:1:200
MAINT = 
MAKEINFO = ${SHELL} /home/chris/gtk+-3.2.1/build-aux/missing --run makeinfo
MANIFEST_TOOL = :
MATH_LIB = -lm
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = build-aux/mkinstalldirs
MSGFMT = /usr/local/bin/msgfmt
MSGFMT_OPTS = 
NM = /usr/bin/nm -p
NMEDIT = nmedit
OBJDUMP = objdump
OBJEXT = o
OTOOL = otool
OTOOL64 = otool64
PACKAGE = gtk+
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=gtk%2B
PACKAGE_NAME = gtk+
PACKAGE_STRING = gtk+ 3.2.1
PACKAGE_TARNAME = gtk+
PACKAGE_URL = 
PACKAGE_VERSION = 3.2.1
PANGO_PREFIX = /usr/local
PANGO_REQUIRED_VERSION = 1.29.0
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /usr/local/lib/pkgconfig:/usr/lib/pkgconfig
POFILES =  af.po am.po ang.po ar.po as.po ast.po az.po az_IR.po be.po be@latin.po bg.po bn.po bn_IN.po br.po bs.po ca.po ca@valencia.po crh.po cs.po cy.po da.po de.po dz.po el.po en.po en_CA.po en_GB.po en@shaw.po eo.po es.po et.po eu.po fa.po fi.po fr.po ga.po gl.po gu.po he.po hi.po hr.po hu.po hy.po ia.po id.po io.po is.po it.po ja.po ka.po kg.po kk.po kn.po ko.po ku.po lg.po li.po lt.po lv.po mai.po mi.po mk.po ml.po mn.po mr.po ms.po my.po nb.po nds.po ne.po nl.po nn.po nso.po oc.po or.po pa.po pl.po ps.po pt.po pt_BR.po ro.po ru.po rw.po si.po sk.po sl.po sq.po sr.po sr@ije.po sr@latin.po sv.po ta.po te.po th.po tk.po tr.po tt.po ug.po uk.po ur.po uz.po uz@cyrillic.po vi.po wa.po xh.po yi.po zh_CN.po zh_HK.po zh_TW.po
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
RANLIB = ranlib
REBUILD = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
USE_NLS = yes
VERSION = 3.2.1
WINDRES = 
XGETTEXT = :
XMKMF = 
XMLCATALOG = 
XML_CATALOG_FILE = 
XSLTPROC = 
X_CFLAGS =  
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
abs_builddir = /home/chris/gtk+-3.2.1/gtk/a11y
abs_srcdir = /home/chris/gtk+-3.2.1/gtk/a11y
abs_top_builddir = /home/chris/gtk+-3.2.1
abs_top_srcdir = /home/chris/gtk+-3.2.1
ac_ct_AR = ar
ac_ct_CC = /usr/bin/gcc
ac_ct_CXX = c++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = arm-apple-darwin10.4.0
build_alias = 
build_cpu = arm
build_os = darwin10.4.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gsettingsschemadir = ${datarootdir}/glib-2.0/schemas
host = arm-apple-darwin10.4.0
host_alias = 
host_cpu = arm
host_os = darwin10.4.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/chris/gtk+-3.2.1/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = /usr/local/share/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
ms_librarian = 
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
GTESTER = gtester -k		# in $PATH for non-GLIB packages
GTESTER_REPORT = gtester-report		# in $PATH for non-GLIB packages

# initialize variables for unconditional += appending
EXTRA_DIST = 
TEST_PROGS = 

### testing rules

# Xvfb based test rules
XVFB = Xvfb -ac -noreset -screen 0 800x600x16
XIDS = 101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 \
   491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 \
   991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 \
  1008 1009 4703 4721 4723 4729 4733 4751 9973 9974 9975 9976 9977 9978 9979 \
  9980 9981 9982 9983 9984 9985 9986 9987 9988 9989 9990 9991 9992 9993 9994 \
  9995 9996 9997 9998 9999

#SKIP_GDKTARGET = \
#	echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."

SKIP_GDKTARGET = \
	false

XVFB_START = \
	${XVFB} -help 2>/dev/null 1>&2 \
	&& XID=`for id in $(XIDS) ; do test -e /tmp/.X$$id-lock || { echo $$id; exit 0; }; done; exit 1` \
	&& { ${XVFB} :$$XID -screen 0 800x600x16 -nolisten tcp -auth /dev/null >/dev/null 2>&1 & \
	       trap "kill -15 $$! " 0 HUP INT QUIT TRAP USR1 PIPE TERM ; } \
	|| { echo "Gtk+Tests:ERROR: Failed to start Xvfb environment for X11 target tests."; exit 1; } \
	&& DISPLAY=:$$XID && export DISPLAY

noinst_LTLIBRARIES = libgail.la
gail_c_sources = \
	gail.c				\
	gtkarrowaccessible.c		\
	gtkbooleancellaccessible.c	\
	gtkboxaccessible.c		\
	gtkbuttonaccessible.c		\
	gtkcellaccessible.c		\
	gtkcellaccessibleparent.c	\
	gtkcheckmenuitemaccessible.c	\
	gtkcomboboxaccessible.c		\
	gtkcontaineraccessible.c	\
	gtkcontainercellaccessible.c	\
	gtkentryaccessible.c		\
	gtkexpanderaccessible.c		\
	gtkframeaccessible.c		\
	gtkimageaccessible.c		\
	gtkimagecellaccessible.c	\
	gtklabelaccessible.c		\
	gtklinkbuttonaccessible.c	\
	gtkmenuaccessible.c		\
	gtkmenushellaccessible.c	\
	gtkmenuitemaccessible.c		\
	gtknotebookaccessible.c		\
	gtknotebookpageaccessible.c	\
	gtkpanedaccessible.c		\
	gtkprogressbaraccessible.c	\
	gtkradiobuttonaccessible.c	\
	gtkradiomenuitemaccessible.c	\
	gtkrangeaccessible.c		\
	gtkrenderercellaccessible.c	\
	gtkscaleaccessible.c		\
	gtkscalebuttonaccessible.c	\
	gtkscrollbaraccessible.c	\
	gtkscrolledwindowaccessible.c	\
	gtkspinbuttonaccessible.c	\
	gtkspinneraccessible.c		\
	gtkstatusbaraccessible.c	\
	gtkswitchaccessible.c		\
	gtktextcellaccessible.c		\
	gtktextviewaccessible.c		\
	gtktogglebuttonaccessible.c	\
	gtktoplevelaccessible.c		\
	gtktreeviewaccessible.c		\
	gtkwidgetaccessible.c		\
	gtkwindowaccessible.c		\
	gailutil.c			\
	gailmisc.c

gail_private_h_sources = \
	gtkarrowaccessible.h		\
	gtkbooleancellaccessible.h	\
	gtkboxaccessible.h		\
	gtkbuttonaccessible.h		\
	gtkcellaccessible.h		\
	gtkcellaccessibleparent.h	\
	gtkcheckmenuitemaccessible.h	\
	gtkcomboboxaccessible.h		\
	gtkcontaineraccessible.h	\
	gtkcontainercellaccessible.h	\
	gtkentryaccessible.h		\
	gtkexpanderaccessible.h		\
	gtkframeaccessible.h		\
	gtkimageaccessible.h		\
	gtkimagecellaccessible.h	\
	gtklabelaccessible.h		\
	gtklinkbuttonaccessible.h	\
	gtkmenuaccessible.h		\
	gtkmenushellaccessible.h	\
	gtkmenuitemaccessible.h		\
	gtknotebookaccessible.h		\
	gtknotebookpageaccessible.h	\
	gtkpanedaccessible.h		\
	gtkprogressbaraccessible.h	\
	gtkradiobuttonaccessible.h	\
	gtkradiomenuitemaccessible.h	\
	gtkrangeaccessible.h		\
	gtkrenderercellaccessible.h	\
	gtkscaleaccessible.h		\
	gtkscalebuttonaccessible.h	\
	gtkscrollbaraccessible.h	\
	gtkscrolledwindowaccessible.h	\
	gtkspinbuttonaccessible.h	\
	gtkspinneraccessible.h		\
	gtkstatusbaraccessible.h	\
	gtkswitchaccessible.h		\
	gtktextcellaccessible.h		\
	gtktextviewaccessible.h		\
	gtktogglebuttonaccessible.h	\
	gtktoplevelaccessible.h		\
	gtktreeviewaccessible.h		\
	gtkwidgetaccessible.h		\
	gtkwindowaccessible.h		\
	gailutil.h			\
	gailmisc.h

libgail_la_SOURCES = \
	$(gail_c_sources)		\
	$(gail_private_h_sources)

libgail_la_CPPFLAGS = \
	-I$(top_srcdir)			\
	-I$(top_srcdir)/gdk		\
	-I$(top_builddir)/gdk		\
	-I$(top_srcdir)/gtk		\
	-I$(top_builddir)/gtk		\
	-DGTK_VERSION=\"$(GTK_VERSION)\"\
	-DGTK_COMPILATION		\
	-DGDK_DISABLE_DEPRECATED	\
	-DGTK_DISABLE_DEPRECATED	\
	$(AM_CPPFLAGS)

libgail_la_CFLAGS = \
	$(GTK_DEP_CFLAGS)	\
	$(GTK_DEBUG_FLAGS)	\
	$(AM_CFLAGS)

libgail_la_LIBADD = \
	$(GTK_DEP_LIBS)		\
	$(INTLLIBS)

libgail_la_LDFLAGS = \
        $(LDFLAGS)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.decl $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu gtk/a11y/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu gtk/a11y/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libgail.la: $(libgail_la_OBJECTS) $(libgail_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libgail_la_LINK)  $(libgail_la_OBJECTS) $(libgail_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libgail_la-gail.Plo
include ./$(DEPDIR)/libgail_la-gailmisc.Plo
include ./$(DEPDIR)/libgail_la-gailutil.Plo
include ./$(DEPDIR)/libgail_la-gtkarrowaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkbooleancellaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkboxaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkbuttonaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkcellaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkcellaccessibleparent.Plo
include ./$(DEPDIR)/libgail_la-gtkcheckmenuitemaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkcomboboxaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkcontaineraccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkcontainercellaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkentryaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkexpanderaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkframeaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkimageaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkimagecellaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtklabelaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtklinkbuttonaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkmenuaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkmenuitemaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkmenushellaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtknotebookaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtknotebookpageaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkpanedaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkprogressbaraccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkradiobuttonaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkradiomenuitemaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkrangeaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkrenderercellaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkscaleaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkscalebuttonaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkscrollbaraccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkscrolledwindowaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkspinbuttonaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkspinneraccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkstatusbaraccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkswitchaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtktextcellaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtktextviewaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtktogglebuttonaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtktoplevelaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtktreeviewaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkwidgetaccessible.Plo
include ./$(DEPDIR)/libgail_la-gtkwindowaccessible.Plo

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libgail_la-gail.lo: gail.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gail.lo -MD -MP -MF $(DEPDIR)/libgail_la-gail.Tpo -c -o libgail_la-gail.lo `test -f 'gail.c' || echo '$(srcdir)/'`gail.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gail.Tpo $(DEPDIR)/libgail_la-gail.Plo
#	$(AM_V_CC) \
#	source='gail.c' object='libgail_la-gail.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gail.lo `test -f 'gail.c' || echo '$(srcdir)/'`gail.c

libgail_la-gtkarrowaccessible.lo: gtkarrowaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkarrowaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkarrowaccessible.Tpo -c -o libgail_la-gtkarrowaccessible.lo `test -f 'gtkarrowaccessible.c' || echo '$(srcdir)/'`gtkarrowaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkarrowaccessible.Tpo $(DEPDIR)/libgail_la-gtkarrowaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkarrowaccessible.c' object='libgail_la-gtkarrowaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkarrowaccessible.lo `test -f 'gtkarrowaccessible.c' || echo '$(srcdir)/'`gtkarrowaccessible.c

libgail_la-gtkbooleancellaccessible.lo: gtkbooleancellaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkbooleancellaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkbooleancellaccessible.Tpo -c -o libgail_la-gtkbooleancellaccessible.lo `test -f 'gtkbooleancellaccessible.c' || echo '$(srcdir)/'`gtkbooleancellaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkbooleancellaccessible.Tpo $(DEPDIR)/libgail_la-gtkbooleancellaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkbooleancellaccessible.c' object='libgail_la-gtkbooleancellaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkbooleancellaccessible.lo `test -f 'gtkbooleancellaccessible.c' || echo '$(srcdir)/'`gtkbooleancellaccessible.c

libgail_la-gtkboxaccessible.lo: gtkboxaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkboxaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkboxaccessible.Tpo -c -o libgail_la-gtkboxaccessible.lo `test -f 'gtkboxaccessible.c' || echo '$(srcdir)/'`gtkboxaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkboxaccessible.Tpo $(DEPDIR)/libgail_la-gtkboxaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkboxaccessible.c' object='libgail_la-gtkboxaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkboxaccessible.lo `test -f 'gtkboxaccessible.c' || echo '$(srcdir)/'`gtkboxaccessible.c

libgail_la-gtkbuttonaccessible.lo: gtkbuttonaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkbuttonaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkbuttonaccessible.Tpo -c -o libgail_la-gtkbuttonaccessible.lo `test -f 'gtkbuttonaccessible.c' || echo '$(srcdir)/'`gtkbuttonaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkbuttonaccessible.Tpo $(DEPDIR)/libgail_la-gtkbuttonaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkbuttonaccessible.c' object='libgail_la-gtkbuttonaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkbuttonaccessible.lo `test -f 'gtkbuttonaccessible.c' || echo '$(srcdir)/'`gtkbuttonaccessible.c

libgail_la-gtkcellaccessible.lo: gtkcellaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkcellaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkcellaccessible.Tpo -c -o libgail_la-gtkcellaccessible.lo `test -f 'gtkcellaccessible.c' || echo '$(srcdir)/'`gtkcellaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkcellaccessible.Tpo $(DEPDIR)/libgail_la-gtkcellaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkcellaccessible.c' object='libgail_la-gtkcellaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkcellaccessible.lo `test -f 'gtkcellaccessible.c' || echo '$(srcdir)/'`gtkcellaccessible.c

libgail_la-gtkcellaccessibleparent.lo: gtkcellaccessibleparent.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkcellaccessibleparent.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkcellaccessibleparent.Tpo -c -o libgail_la-gtkcellaccessibleparent.lo `test -f 'gtkcellaccessibleparent.c' || echo '$(srcdir)/'`gtkcellaccessibleparent.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkcellaccessibleparent.Tpo $(DEPDIR)/libgail_la-gtkcellaccessibleparent.Plo
#	$(AM_V_CC) \
#	source='gtkcellaccessibleparent.c' object='libgail_la-gtkcellaccessibleparent.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkcellaccessibleparent.lo `test -f 'gtkcellaccessibleparent.c' || echo '$(srcdir)/'`gtkcellaccessibleparent.c

libgail_la-gtkcheckmenuitemaccessible.lo: gtkcheckmenuitemaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkcheckmenuitemaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkcheckmenuitemaccessible.Tpo -c -o libgail_la-gtkcheckmenuitemaccessible.lo `test -f 'gtkcheckmenuitemaccessible.c' || echo '$(srcdir)/'`gtkcheckmenuitemaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkcheckmenuitemaccessible.Tpo $(DEPDIR)/libgail_la-gtkcheckmenuitemaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkcheckmenuitemaccessible.c' object='libgail_la-gtkcheckmenuitemaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkcheckmenuitemaccessible.lo `test -f 'gtkcheckmenuitemaccessible.c' || echo '$(srcdir)/'`gtkcheckmenuitemaccessible.c

libgail_la-gtkcomboboxaccessible.lo: gtkcomboboxaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkcomboboxaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkcomboboxaccessible.Tpo -c -o libgail_la-gtkcomboboxaccessible.lo `test -f 'gtkcomboboxaccessible.c' || echo '$(srcdir)/'`gtkcomboboxaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkcomboboxaccessible.Tpo $(DEPDIR)/libgail_la-gtkcomboboxaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkcomboboxaccessible.c' object='libgail_la-gtkcomboboxaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkcomboboxaccessible.lo `test -f 'gtkcomboboxaccessible.c' || echo '$(srcdir)/'`gtkcomboboxaccessible.c

libgail_la-gtkcontaineraccessible.lo: gtkcontaineraccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkcontaineraccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkcontaineraccessible.Tpo -c -o libgail_la-gtkcontaineraccessible.lo `test -f 'gtkcontaineraccessible.c' || echo '$(srcdir)/'`gtkcontaineraccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkcontaineraccessible.Tpo $(DEPDIR)/libgail_la-gtkcontaineraccessible.Plo
#	$(AM_V_CC) \
#	source='gtkcontaineraccessible.c' object='libgail_la-gtkcontaineraccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkcontaineraccessible.lo `test -f 'gtkcontaineraccessible.c' || echo '$(srcdir)/'`gtkcontaineraccessible.c

libgail_la-gtkcontainercellaccessible.lo: gtkcontainercellaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkcontainercellaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkcontainercellaccessible.Tpo -c -o libgail_la-gtkcontainercellaccessible.lo `test -f 'gtkcontainercellaccessible.c' || echo '$(srcdir)/'`gtkcontainercellaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkcontainercellaccessible.Tpo $(DEPDIR)/libgail_la-gtkcontainercellaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkcontainercellaccessible.c' object='libgail_la-gtkcontainercellaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkcontainercellaccessible.lo `test -f 'gtkcontainercellaccessible.c' || echo '$(srcdir)/'`gtkcontainercellaccessible.c

libgail_la-gtkentryaccessible.lo: gtkentryaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkentryaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkentryaccessible.Tpo -c -o libgail_la-gtkentryaccessible.lo `test -f 'gtkentryaccessible.c' || echo '$(srcdir)/'`gtkentryaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkentryaccessible.Tpo $(DEPDIR)/libgail_la-gtkentryaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkentryaccessible.c' object='libgail_la-gtkentryaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkentryaccessible.lo `test -f 'gtkentryaccessible.c' || echo '$(srcdir)/'`gtkentryaccessible.c

libgail_la-gtkexpanderaccessible.lo: gtkexpanderaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkexpanderaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkexpanderaccessible.Tpo -c -o libgail_la-gtkexpanderaccessible.lo `test -f 'gtkexpanderaccessible.c' || echo '$(srcdir)/'`gtkexpanderaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkexpanderaccessible.Tpo $(DEPDIR)/libgail_la-gtkexpanderaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkexpanderaccessible.c' object='libgail_la-gtkexpanderaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkexpanderaccessible.lo `test -f 'gtkexpanderaccessible.c' || echo '$(srcdir)/'`gtkexpanderaccessible.c

libgail_la-gtkframeaccessible.lo: gtkframeaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkframeaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkframeaccessible.Tpo -c -o libgail_la-gtkframeaccessible.lo `test -f 'gtkframeaccessible.c' || echo '$(srcdir)/'`gtkframeaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkframeaccessible.Tpo $(DEPDIR)/libgail_la-gtkframeaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkframeaccessible.c' object='libgail_la-gtkframeaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkframeaccessible.lo `test -f 'gtkframeaccessible.c' || echo '$(srcdir)/'`gtkframeaccessible.c

libgail_la-gtkimageaccessible.lo: gtkimageaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkimageaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkimageaccessible.Tpo -c -o libgail_la-gtkimageaccessible.lo `test -f 'gtkimageaccessible.c' || echo '$(srcdir)/'`gtkimageaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkimageaccessible.Tpo $(DEPDIR)/libgail_la-gtkimageaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkimageaccessible.c' object='libgail_la-gtkimageaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkimageaccessible.lo `test -f 'gtkimageaccessible.c' || echo '$(srcdir)/'`gtkimageaccessible.c

libgail_la-gtkimagecellaccessible.lo: gtkimagecellaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkimagecellaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkimagecellaccessible.Tpo -c -o libgail_la-gtkimagecellaccessible.lo `test -f 'gtkimagecellaccessible.c' || echo '$(srcdir)/'`gtkimagecellaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkimagecellaccessible.Tpo $(DEPDIR)/libgail_la-gtkimagecellaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkimagecellaccessible.c' object='libgail_la-gtkimagecellaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkimagecellaccessible.lo `test -f 'gtkimagecellaccessible.c' || echo '$(srcdir)/'`gtkimagecellaccessible.c

libgail_la-gtklabelaccessible.lo: gtklabelaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtklabelaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtklabelaccessible.Tpo -c -o libgail_la-gtklabelaccessible.lo `test -f 'gtklabelaccessible.c' || echo '$(srcdir)/'`gtklabelaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtklabelaccessible.Tpo $(DEPDIR)/libgail_la-gtklabelaccessible.Plo
#	$(AM_V_CC) \
#	source='gtklabelaccessible.c' object='libgail_la-gtklabelaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtklabelaccessible.lo `test -f 'gtklabelaccessible.c' || echo '$(srcdir)/'`gtklabelaccessible.c

libgail_la-gtklinkbuttonaccessible.lo: gtklinkbuttonaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtklinkbuttonaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtklinkbuttonaccessible.Tpo -c -o libgail_la-gtklinkbuttonaccessible.lo `test -f 'gtklinkbuttonaccessible.c' || echo '$(srcdir)/'`gtklinkbuttonaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtklinkbuttonaccessible.Tpo $(DEPDIR)/libgail_la-gtklinkbuttonaccessible.Plo
#	$(AM_V_CC) \
#	source='gtklinkbuttonaccessible.c' object='libgail_la-gtklinkbuttonaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtklinkbuttonaccessible.lo `test -f 'gtklinkbuttonaccessible.c' || echo '$(srcdir)/'`gtklinkbuttonaccessible.c

libgail_la-gtkmenuaccessible.lo: gtkmenuaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkmenuaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkmenuaccessible.Tpo -c -o libgail_la-gtkmenuaccessible.lo `test -f 'gtkmenuaccessible.c' || echo '$(srcdir)/'`gtkmenuaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkmenuaccessible.Tpo $(DEPDIR)/libgail_la-gtkmenuaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkmenuaccessible.c' object='libgail_la-gtkmenuaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkmenuaccessible.lo `test -f 'gtkmenuaccessible.c' || echo '$(srcdir)/'`gtkmenuaccessible.c

libgail_la-gtkmenushellaccessible.lo: gtkmenushellaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkmenushellaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkmenushellaccessible.Tpo -c -o libgail_la-gtkmenushellaccessible.lo `test -f 'gtkmenushellaccessible.c' || echo '$(srcdir)/'`gtkmenushellaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkmenushellaccessible.Tpo $(DEPDIR)/libgail_la-gtkmenushellaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkmenushellaccessible.c' object='libgail_la-gtkmenushellaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkmenushellaccessible.lo `test -f 'gtkmenushellaccessible.c' || echo '$(srcdir)/'`gtkmenushellaccessible.c

libgail_la-gtkmenuitemaccessible.lo: gtkmenuitemaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkmenuitemaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkmenuitemaccessible.Tpo -c -o libgail_la-gtkmenuitemaccessible.lo `test -f 'gtkmenuitemaccessible.c' || echo '$(srcdir)/'`gtkmenuitemaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkmenuitemaccessible.Tpo $(DEPDIR)/libgail_la-gtkmenuitemaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkmenuitemaccessible.c' object='libgail_la-gtkmenuitemaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkmenuitemaccessible.lo `test -f 'gtkmenuitemaccessible.c' || echo '$(srcdir)/'`gtkmenuitemaccessible.c

libgail_la-gtknotebookaccessible.lo: gtknotebookaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtknotebookaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtknotebookaccessible.Tpo -c -o libgail_la-gtknotebookaccessible.lo `test -f 'gtknotebookaccessible.c' || echo '$(srcdir)/'`gtknotebookaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtknotebookaccessible.Tpo $(DEPDIR)/libgail_la-gtknotebookaccessible.Plo
#	$(AM_V_CC) \
#	source='gtknotebookaccessible.c' object='libgail_la-gtknotebookaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtknotebookaccessible.lo `test -f 'gtknotebookaccessible.c' || echo '$(srcdir)/'`gtknotebookaccessible.c

libgail_la-gtknotebookpageaccessible.lo: gtknotebookpageaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtknotebookpageaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtknotebookpageaccessible.Tpo -c -o libgail_la-gtknotebookpageaccessible.lo `test -f 'gtknotebookpageaccessible.c' || echo '$(srcdir)/'`gtknotebookpageaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtknotebookpageaccessible.Tpo $(DEPDIR)/libgail_la-gtknotebookpageaccessible.Plo
#	$(AM_V_CC) \
#	source='gtknotebookpageaccessible.c' object='libgail_la-gtknotebookpageaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtknotebookpageaccessible.lo `test -f 'gtknotebookpageaccessible.c' || echo '$(srcdir)/'`gtknotebookpageaccessible.c

libgail_la-gtkpanedaccessible.lo: gtkpanedaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkpanedaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkpanedaccessible.Tpo -c -o libgail_la-gtkpanedaccessible.lo `test -f 'gtkpanedaccessible.c' || echo '$(srcdir)/'`gtkpanedaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkpanedaccessible.Tpo $(DEPDIR)/libgail_la-gtkpanedaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkpanedaccessible.c' object='libgail_la-gtkpanedaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkpanedaccessible.lo `test -f 'gtkpanedaccessible.c' || echo '$(srcdir)/'`gtkpanedaccessible.c

libgail_la-gtkprogressbaraccessible.lo: gtkprogressbaraccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkprogressbaraccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkprogressbaraccessible.Tpo -c -o libgail_la-gtkprogressbaraccessible.lo `test -f 'gtkprogressbaraccessible.c' || echo '$(srcdir)/'`gtkprogressbaraccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkprogressbaraccessible.Tpo $(DEPDIR)/libgail_la-gtkprogressbaraccessible.Plo
#	$(AM_V_CC) \
#	source='gtkprogressbaraccessible.c' object='libgail_la-gtkprogressbaraccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkprogressbaraccessible.lo `test -f 'gtkprogressbaraccessible.c' || echo '$(srcdir)/'`gtkprogressbaraccessible.c

libgail_la-gtkradiobuttonaccessible.lo: gtkradiobuttonaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkradiobuttonaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkradiobuttonaccessible.Tpo -c -o libgail_la-gtkradiobuttonaccessible.lo `test -f 'gtkradiobuttonaccessible.c' || echo '$(srcdir)/'`gtkradiobuttonaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkradiobuttonaccessible.Tpo $(DEPDIR)/libgail_la-gtkradiobuttonaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkradiobuttonaccessible.c' object='libgail_la-gtkradiobuttonaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkradiobuttonaccessible.lo `test -f 'gtkradiobuttonaccessible.c' || echo '$(srcdir)/'`gtkradiobuttonaccessible.c

libgail_la-gtkradiomenuitemaccessible.lo: gtkradiomenuitemaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkradiomenuitemaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkradiomenuitemaccessible.Tpo -c -o libgail_la-gtkradiomenuitemaccessible.lo `test -f 'gtkradiomenuitemaccessible.c' || echo '$(srcdir)/'`gtkradiomenuitemaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkradiomenuitemaccessible.Tpo $(DEPDIR)/libgail_la-gtkradiomenuitemaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkradiomenuitemaccessible.c' object='libgail_la-gtkradiomenuitemaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkradiomenuitemaccessible.lo `test -f 'gtkradiomenuitemaccessible.c' || echo '$(srcdir)/'`gtkradiomenuitemaccessible.c

libgail_la-gtkrangeaccessible.lo: gtkrangeaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkrangeaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkrangeaccessible.Tpo -c -o libgail_la-gtkrangeaccessible.lo `test -f 'gtkrangeaccessible.c' || echo '$(srcdir)/'`gtkrangeaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkrangeaccessible.Tpo $(DEPDIR)/libgail_la-gtkrangeaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkrangeaccessible.c' object='libgail_la-gtkrangeaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkrangeaccessible.lo `test -f 'gtkrangeaccessible.c' || echo '$(srcdir)/'`gtkrangeaccessible.c

libgail_la-gtkrenderercellaccessible.lo: gtkrenderercellaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkrenderercellaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkrenderercellaccessible.Tpo -c -o libgail_la-gtkrenderercellaccessible.lo `test -f 'gtkrenderercellaccessible.c' || echo '$(srcdir)/'`gtkrenderercellaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkrenderercellaccessible.Tpo $(DEPDIR)/libgail_la-gtkrenderercellaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkrenderercellaccessible.c' object='libgail_la-gtkrenderercellaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkrenderercellaccessible.lo `test -f 'gtkrenderercellaccessible.c' || echo '$(srcdir)/'`gtkrenderercellaccessible.c

libgail_la-gtkscaleaccessible.lo: gtkscaleaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkscaleaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkscaleaccessible.Tpo -c -o libgail_la-gtkscaleaccessible.lo `test -f 'gtkscaleaccessible.c' || echo '$(srcdir)/'`gtkscaleaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkscaleaccessible.Tpo $(DEPDIR)/libgail_la-gtkscaleaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkscaleaccessible.c' object='libgail_la-gtkscaleaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkscaleaccessible.lo `test -f 'gtkscaleaccessible.c' || echo '$(srcdir)/'`gtkscaleaccessible.c

libgail_la-gtkscalebuttonaccessible.lo: gtkscalebuttonaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkscalebuttonaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkscalebuttonaccessible.Tpo -c -o libgail_la-gtkscalebuttonaccessible.lo `test -f 'gtkscalebuttonaccessible.c' || echo '$(srcdir)/'`gtkscalebuttonaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkscalebuttonaccessible.Tpo $(DEPDIR)/libgail_la-gtkscalebuttonaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkscalebuttonaccessible.c' object='libgail_la-gtkscalebuttonaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkscalebuttonaccessible.lo `test -f 'gtkscalebuttonaccessible.c' || echo '$(srcdir)/'`gtkscalebuttonaccessible.c

libgail_la-gtkscrollbaraccessible.lo: gtkscrollbaraccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkscrollbaraccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkscrollbaraccessible.Tpo -c -o libgail_la-gtkscrollbaraccessible.lo `test -f 'gtkscrollbaraccessible.c' || echo '$(srcdir)/'`gtkscrollbaraccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkscrollbaraccessible.Tpo $(DEPDIR)/libgail_la-gtkscrollbaraccessible.Plo
#	$(AM_V_CC) \
#	source='gtkscrollbaraccessible.c' object='libgail_la-gtkscrollbaraccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkscrollbaraccessible.lo `test -f 'gtkscrollbaraccessible.c' || echo '$(srcdir)/'`gtkscrollbaraccessible.c

libgail_la-gtkscrolledwindowaccessible.lo: gtkscrolledwindowaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkscrolledwindowaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkscrolledwindowaccessible.Tpo -c -o libgail_la-gtkscrolledwindowaccessible.lo `test -f 'gtkscrolledwindowaccessible.c' || echo '$(srcdir)/'`gtkscrolledwindowaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkscrolledwindowaccessible.Tpo $(DEPDIR)/libgail_la-gtkscrolledwindowaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkscrolledwindowaccessible.c' object='libgail_la-gtkscrolledwindowaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkscrolledwindowaccessible.lo `test -f 'gtkscrolledwindowaccessible.c' || echo '$(srcdir)/'`gtkscrolledwindowaccessible.c

libgail_la-gtkspinbuttonaccessible.lo: gtkspinbuttonaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkspinbuttonaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkspinbuttonaccessible.Tpo -c -o libgail_la-gtkspinbuttonaccessible.lo `test -f 'gtkspinbuttonaccessible.c' || echo '$(srcdir)/'`gtkspinbuttonaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkspinbuttonaccessible.Tpo $(DEPDIR)/libgail_la-gtkspinbuttonaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkspinbuttonaccessible.c' object='libgail_la-gtkspinbuttonaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkspinbuttonaccessible.lo `test -f 'gtkspinbuttonaccessible.c' || echo '$(srcdir)/'`gtkspinbuttonaccessible.c

libgail_la-gtkspinneraccessible.lo: gtkspinneraccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkspinneraccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkspinneraccessible.Tpo -c -o libgail_la-gtkspinneraccessible.lo `test -f 'gtkspinneraccessible.c' || echo '$(srcdir)/'`gtkspinneraccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkspinneraccessible.Tpo $(DEPDIR)/libgail_la-gtkspinneraccessible.Plo
#	$(AM_V_CC) \
#	source='gtkspinneraccessible.c' object='libgail_la-gtkspinneraccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkspinneraccessible.lo `test -f 'gtkspinneraccessible.c' || echo '$(srcdir)/'`gtkspinneraccessible.c

libgail_la-gtkstatusbaraccessible.lo: gtkstatusbaraccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkstatusbaraccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkstatusbaraccessible.Tpo -c -o libgail_la-gtkstatusbaraccessible.lo `test -f 'gtkstatusbaraccessible.c' || echo '$(srcdir)/'`gtkstatusbaraccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkstatusbaraccessible.Tpo $(DEPDIR)/libgail_la-gtkstatusbaraccessible.Plo
#	$(AM_V_CC) \
#	source='gtkstatusbaraccessible.c' object='libgail_la-gtkstatusbaraccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkstatusbaraccessible.lo `test -f 'gtkstatusbaraccessible.c' || echo '$(srcdir)/'`gtkstatusbaraccessible.c

libgail_la-gtkswitchaccessible.lo: gtkswitchaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkswitchaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkswitchaccessible.Tpo -c -o libgail_la-gtkswitchaccessible.lo `test -f 'gtkswitchaccessible.c' || echo '$(srcdir)/'`gtkswitchaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkswitchaccessible.Tpo $(DEPDIR)/libgail_la-gtkswitchaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkswitchaccessible.c' object='libgail_la-gtkswitchaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkswitchaccessible.lo `test -f 'gtkswitchaccessible.c' || echo '$(srcdir)/'`gtkswitchaccessible.c

libgail_la-gtktextcellaccessible.lo: gtktextcellaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtktextcellaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtktextcellaccessible.Tpo -c -o libgail_la-gtktextcellaccessible.lo `test -f 'gtktextcellaccessible.c' || echo '$(srcdir)/'`gtktextcellaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtktextcellaccessible.Tpo $(DEPDIR)/libgail_la-gtktextcellaccessible.Plo
#	$(AM_V_CC) \
#	source='gtktextcellaccessible.c' object='libgail_la-gtktextcellaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtktextcellaccessible.lo `test -f 'gtktextcellaccessible.c' || echo '$(srcdir)/'`gtktextcellaccessible.c

libgail_la-gtktextviewaccessible.lo: gtktextviewaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtktextviewaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtktextviewaccessible.Tpo -c -o libgail_la-gtktextviewaccessible.lo `test -f 'gtktextviewaccessible.c' || echo '$(srcdir)/'`gtktextviewaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtktextviewaccessible.Tpo $(DEPDIR)/libgail_la-gtktextviewaccessible.Plo
#	$(AM_V_CC) \
#	source='gtktextviewaccessible.c' object='libgail_la-gtktextviewaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtktextviewaccessible.lo `test -f 'gtktextviewaccessible.c' || echo '$(srcdir)/'`gtktextviewaccessible.c

libgail_la-gtktogglebuttonaccessible.lo: gtktogglebuttonaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtktogglebuttonaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtktogglebuttonaccessible.Tpo -c -o libgail_la-gtktogglebuttonaccessible.lo `test -f 'gtktogglebuttonaccessible.c' || echo '$(srcdir)/'`gtktogglebuttonaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtktogglebuttonaccessible.Tpo $(DEPDIR)/libgail_la-gtktogglebuttonaccessible.Plo
#	$(AM_V_CC) \
#	source='gtktogglebuttonaccessible.c' object='libgail_la-gtktogglebuttonaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtktogglebuttonaccessible.lo `test -f 'gtktogglebuttonaccessible.c' || echo '$(srcdir)/'`gtktogglebuttonaccessible.c

libgail_la-gtktoplevelaccessible.lo: gtktoplevelaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtktoplevelaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtktoplevelaccessible.Tpo -c -o libgail_la-gtktoplevelaccessible.lo `test -f 'gtktoplevelaccessible.c' || echo '$(srcdir)/'`gtktoplevelaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtktoplevelaccessible.Tpo $(DEPDIR)/libgail_la-gtktoplevelaccessible.Plo
#	$(AM_V_CC) \
#	source='gtktoplevelaccessible.c' object='libgail_la-gtktoplevelaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtktoplevelaccessible.lo `test -f 'gtktoplevelaccessible.c' || echo '$(srcdir)/'`gtktoplevelaccessible.c

libgail_la-gtktreeviewaccessible.lo: gtktreeviewaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtktreeviewaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtktreeviewaccessible.Tpo -c -o libgail_la-gtktreeviewaccessible.lo `test -f 'gtktreeviewaccessible.c' || echo '$(srcdir)/'`gtktreeviewaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtktreeviewaccessible.Tpo $(DEPDIR)/libgail_la-gtktreeviewaccessible.Plo
#	$(AM_V_CC) \
#	source='gtktreeviewaccessible.c' object='libgail_la-gtktreeviewaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtktreeviewaccessible.lo `test -f 'gtktreeviewaccessible.c' || echo '$(srcdir)/'`gtktreeviewaccessible.c

libgail_la-gtkwidgetaccessible.lo: gtkwidgetaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkwidgetaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkwidgetaccessible.Tpo -c -o libgail_la-gtkwidgetaccessible.lo `test -f 'gtkwidgetaccessible.c' || echo '$(srcdir)/'`gtkwidgetaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkwidgetaccessible.Tpo $(DEPDIR)/libgail_la-gtkwidgetaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkwidgetaccessible.c' object='libgail_la-gtkwidgetaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkwidgetaccessible.lo `test -f 'gtkwidgetaccessible.c' || echo '$(srcdir)/'`gtkwidgetaccessible.c

libgail_la-gtkwindowaccessible.lo: gtkwindowaccessible.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gtkwindowaccessible.lo -MD -MP -MF $(DEPDIR)/libgail_la-gtkwindowaccessible.Tpo -c -o libgail_la-gtkwindowaccessible.lo `test -f 'gtkwindowaccessible.c' || echo '$(srcdir)/'`gtkwindowaccessible.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gtkwindowaccessible.Tpo $(DEPDIR)/libgail_la-gtkwindowaccessible.Plo
#	$(AM_V_CC) \
#	source='gtkwindowaccessible.c' object='libgail_la-gtkwindowaccessible.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gtkwindowaccessible.lo `test -f 'gtkwindowaccessible.c' || echo '$(srcdir)/'`gtkwindowaccessible.c

libgail_la-gailutil.lo: gailutil.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailutil.lo -MD -MP -MF $(DEPDIR)/libgail_la-gailutil.Tpo -c -o libgail_la-gailutil.lo `test -f 'gailutil.c' || echo '$(srcdir)/'`gailutil.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gailutil.Tpo $(DEPDIR)/libgail_la-gailutil.Plo
#	$(AM_V_CC) \
#	source='gailutil.c' object='libgail_la-gailutil.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailutil.lo `test -f 'gailutil.c' || echo '$(srcdir)/'`gailutil.c

libgail_la-gailmisc.lo: gailmisc.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailmisc.lo -MD -MP -MF $(DEPDIR)/libgail_la-gailmisc.Tpo -c -o libgail_la-gailmisc.lo `test -f 'gailmisc.c' || echo '$(srcdir)/'`gailmisc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgail_la-gailmisc.Tpo $(DEPDIR)/libgail_la-gailmisc.Plo
#	$(AM_V_CC) \
#	source='gailmisc.c' object='libgail_la-gailmisc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailmisc.lo `test -f 'gailmisc.c' || echo '$(srcdir)/'`gailmisc.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am check-local clean \
	clean-generic clean-libtool clean-noinstLTLIBRARIES ctags \
	dist-hook distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am

# call as: $(XVFB_START) && someprogram

# test: run all tests in cwd and subdirs
test: test-cwd test-recurse
# test-cwd: run tests in cwd
test-cwd: ${TEST_PROGS}
	@$(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \
	  $(XVFB_START) && { set -e; $(TESTS_ENVIRONMENT) ${GTESTER} --verbose ${TEST_PROGS}; }; \
	}
# test-recurse: run tests in subdirs
test-recurse:
	@ for subdir in $(SUBDIRS) ; do \
	    test "$$subdir" = "." -o "$$subdir" = "po" -o "$$subdir" = "po-properties" || \
	    ( cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) test ) || exit $? ; \
	  done
# test-report: run tests in subdirs and generate report
# perf-report: run tests in subdirs with -m perf and generate report
# full-report: like test-report: with -m perf and -m slow
test-report perf-report full-report:	${TEST_PROGS}
	@ ignore_logdir=true ; \
	  if test -z "$$GTESTER_LOGDIR" ; then \
	    GTESTER_LOGDIR=`mktemp -d "\`pwd\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \
	    ignore_logdir=false ; \
	  fi ; \
	  for subdir in $(SUBDIRS) ; do \
	    test "$$subdir" = "." -o "$$subdir" = "po" -o "$$subdir" = "po-properties" || \
	    ( cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $@ ) || exit $? ; \
	  done ; \
	  $(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \
	    case $@ in \
	    test-report) test_options="-k";; \
	    perf-report) test_options="-k -m=perf";; \
	    full-report) test_options="-k -m=perf -m=slow";; \
	    esac ; \
	    $(XVFB_START) && { \
	      set -e; \
	      if test -z "$$GTESTER_LOGDIR" ; then \
	        ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \
	      elif test -n "${TEST_PROGS}" ; then \
	        ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \
	      fi ; \
	    }; \
	  }; \
	  $$ignore_logdir || { \
	    echo '<?xml version="1.0"?>' > $@.xml ; \
	    echo '<report-collection>'  >> $@.xml ; \
	    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \
	      sed '1,1s/^<?xml\b[^>?]*?>//' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \
	    done ; \
	    echo >> $@.xml ; \
	    echo '</report-collection>' >> $@.xml ; \
	    rm -rf "$$GTESTER_LOGDIR"/ ; \
	    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \
	  }
.PHONY: test test-cwd test-recurse test-report perf-report full-report
# run make test-cwd as part of make check
check-local: test-cwd

dist-hook: ../../build/win32/vs9/libgail.vcproj ../../build/win32/vs10/libgail.vcxproj ../../build/win32/vs10/libgail.vcxproj.filters

../../build/win32/vs9/libgail.vcproj: ../../build/win32/vs9/libgail.vcprojin
	for F in $(libgail_la_SOURCES); do \
		case $$F in \
		*.c) echo '   <File RelativePath="..\..\..\gtk\a11y\'$$F'" />' \
		     ;; \
		esac; \
	done >libgail.sourcefiles
	$(CPP) -P - <$(top_srcdir)/build/win32/vs9/libgail.vcprojin >$@
	rm libgail.sourcefiles

../../build/win32/vs10/libgail.vcxproj: ../../build/win32/vs10/libgail.vcxprojin
	for F in $(libgail_la_SOURCES); do \
		case $$F in \
		*.c) echo '   <ClCompile Include="..\..\..\gtk\a11y\'$$F'" />' \
		     ;; \
		esac; \
	done >libgail.vs10.sourcefiles
	$(CPP) -P - <$(top_srcdir)/build/win32/vs10/libgail.vcxprojin >$@
	rm libgail.vs10.sourcefiles

../../build/win32/vs10/libgail.vcxproj.filters: ../../build/win32/vs10/libgail.vcxproj.filtersin
	for F in $(libgail_la_SOURCES); do \
		case $$F in \
		*.c) echo '   <ClCompile Include="..\..\..\gtk\a11y\'$$F'"><Filter>Source Files</Filter></ClCompile>' \
		     ;; \
		esac; \
	done >libgail.vs10.sourcefiles.filters
	$(CPP) -P - <$(top_srcdir)/build/win32/vs10/libgail.vcxproj.filtersin >$@
	rm libgail.vs10.sourcefiles.filters

-include $(top_srcdir)/git.mk

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
