# Makefile.in generated by automake 1.11.1 from Makefile.am.
# gsf/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






pkgdatadir = $(datadir)/libgsf
pkgincludedir = $(includedir)/libgsf
pkglibdir = $(libdir)/libgsf
pkglibexecdir = $(libexecdir)/libgsf
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = arm-apple-darwin10.4.0
host_triplet = arm-apple-darwin10.4.0
libgsf_1_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
#am__append_1 = -no-undefined -export-symbols lib.def
DIST_COMMON = $(am__libgsf_1_include_HEADERS_DIST) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/version.c.in $(top_srcdir)/gsf.mk
subdir = gsf
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gtk-doc.m4 \
	$(top_srcdir)/m4/intltool.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/python.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/gsf-config.h
CONFIG_CLEAN_FILES = version.c
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(gsf_mslibdir)" \
	"$(DESTDIR)$(libgsf_1_includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
am__libgsf_1_la_SOURCES_DIST = gsf-utils.c gsf-libxml.c \
	gsf-doc-meta-data.c gsf-docprop-vector.c gsf-msole-impl.h \
	gsf-msole-utils.c gsf-open-pkg-utils.c gsf-opendoc-utils.c \
	gsf-timestamp.c gsf-zip-impl.h gsf-zip-utils.c gsf-input.c \
	gsf-input-bzip.c gsf-input-gzip.c gsf-input-http.c \
	gsf-input-iochannel.c gsf-input-memory.c gsf-input-proxy.c \
	gsf-input-stdio.c gsf-input-textline.c gsf-infile.c \
	gsf-infile-msole.c gsf-infile-msvba.c gsf-infile-stdio.c \
	gsf-infile-tar.c gsf-infile-zip.c gsf-output.c \
	gsf-output-bzip.c gsf-output-csv.c gsf-output-gzip.c \
	gsf-output-iconv.c gsf-output-iochannel.c gsf-output-memory.c \
	gsf-output-stdio.c gsf-outfile.c gsf-outfile-msole.c \
	gsf-outfile-stdio.c gsf-outfile-zip.c gsf-shared-memory.c \
	gsf-structured-blob.c gsf-blob.c gsf-clip-data.c \
	gsf-input-gio.c gsf-output-gio.c version.c
am__objects_1 = gsf-input-gio.lo gsf-output-gio.lo
am_libgsf_1_la_OBJECTS = gsf-utils.lo gsf-libxml.lo \
	gsf-doc-meta-data.lo gsf-docprop-vector.lo gsf-msole-utils.lo \
	gsf-open-pkg-utils.lo gsf-opendoc-utils.lo gsf-timestamp.lo \
	gsf-zip-utils.lo gsf-input.lo gsf-input-bzip.lo \
	gsf-input-gzip.lo gsf-input-http.lo gsf-input-iochannel.lo \
	gsf-input-memory.lo gsf-input-proxy.lo gsf-input-stdio.lo \
	gsf-input-textline.lo gsf-infile.lo gsf-infile-msole.lo \
	gsf-infile-msvba.lo gsf-infile-stdio.lo gsf-infile-tar.lo \
	gsf-infile-zip.lo gsf-output.lo gsf-output-bzip.lo \
	gsf-output-csv.lo gsf-output-gzip.lo gsf-output-iconv.lo \
	gsf-output-iochannel.lo gsf-output-memory.lo \
	gsf-output-stdio.lo gsf-outfile.lo gsf-outfile-msole.lo \
	gsf-outfile-stdio.lo gsf-outfile-zip.lo gsf-shared-memory.lo \
	gsf-structured-blob.lo gsf-blob.lo gsf-clip-data.lo \
	$(am__objects_1) version.lo
libgsf_1_la_OBJECTS = $(am_libgsf_1_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
libgsf_1_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libgsf_1_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libgsf_1_la_SOURCES)
DIST_SOURCES = $(am__libgsf_1_la_SOURCES_DIST)
DATA = $(gsf_mslib_DATA) $(noinst_DATA)
am__libgsf_1_include_HEADERS_DIST = gsf.h gsf-utils.h gsf-libxml.h \
	gsf-impl-utils.h gsf-doc-meta-data.h gsf-docprop-vector.h \
	gsf-msole-utils.h gsf-open-pkg-utils.h gsf-opendoc-utils.h \
	gsf-timestamp.h gsf-input.h gsf-input-impl.h gsf-input-bzip.h \
	gsf-input-gzip.h gsf-input-http.h gsf-input-iochannel.h \
	gsf-input-memory.h gsf-input-proxy.h gsf-input-stdio.h \
	gsf-input-textline.h gsf-infile.h gsf-infile-impl.h \
	gsf-infile-msole.h gsf-infile-msvba.h gsf-infile-stdio.h \
	gsf-infile-tar.h gsf-infile-zip.h gsf-output.h \
	gsf-output-impl.h gsf-output-bzip.h gsf-output-csv.h \
	gsf-output-gzip.h gsf-output-iconv.h gsf-output-iochannel.h \
	gsf-output-memory.h gsf-output-stdio.h gsf-outfile.h \
	gsf-outfile-impl.h gsf-outfile-msole.h gsf-outfile-stdio.h \
	gsf-outfile-zip.h gsf-shared-memory.h gsf-structured-blob.h \
	gsf-meta-names.h gsf-blob.h gsf-clip-data.h gsf-input-gio.h \
	gsf-output-gio.h
HEADERS = $(libgsf_1_include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/chris/libgsf-1.14.22/missing --run aclocal-1.11
ACLOCAL_AMFLAGS = 
ALL_LINGUAS = 
AMTAR = ${SHELL} /home/chris/libgsf-1.14.22/missing --run tar
AM_DEFAULT_VERBOSITY = 0
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/chris/libgsf-1.14.22/missing --run autoconf
AUTOHEADER = ${SHELL} /home/chris/libgsf-1.14.22/missing --run autoheader
AUTOMAKE = ${SHELL} /home/chris/libgsf-1.14.22/missing --run automake-1.11
AWK = gawk
BZ2_LIBS = 
CATALOGS = 
CATOBJEXT = .gmo
CC = /usr/bin/gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall -Wmissing-prototypes  -DG_DISABLE_DEPRECATED -Wno-system-headers -Wfloat-equal -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wsign-compare -Waggregate-return -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wformat=2 -Wnested-externs -Winline -Wdeclaration-after-statement -Wundef -W -Wmissing-noreturn -Wmissing-format-attribute -Wno-pointer-sign
CPP = /usr/bin/gcc -E
CPPFLAGS = 
CURRENT_MINUS_AGE = 114
CYGPATH_W = echo
DATADIRNAME = share
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DSYMUTIL = :
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GDK_PIXBUF_CFLAGS = -D_REENTRANT -I/usr/local/include/gdk-pixbuf-2.0 -I/usr/local/include/libpng14 -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include  
GDK_PIXBUF_LIBS = -L/usr/local/lib -lgdk_pixbuf-2.0 -lgobject-2.0 -lgthread-2.0 -lglib-2.0 -lintl  
GETTEXT_PACKAGE = libgsf
GMOFILES = 
GMSGFMT = /usr/local/bin/msgfmt
GREP = /bin/grep
GTKDOC_CHECK = 
GTKDOC_MKPDF = 
GTKDOC_REBASE = true
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = -lintl 
INTLTOOL_EXTRACT = /usr/local/bin/intltool-extract
INTLTOOL_MERGE = /usr/local/bin/intltool-merge
INTLTOOL_PERL = /usr/local/bin/perl
INTLTOOL_UPDATE = /usr/local/bin/intltool-update
LD = /usr/bin/ld
LDFLAGS = -no-undefined 
LIBEXE = 
LIBGSF_CFLAGS = -D_REENTRANT -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/libxml2  
LIBGSF_GIO_CFLAGS = -D_REENTRANT -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include  
LIBGSF_GIO_LIBS = -L/usr/local/lib -lgio-2.0 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lglib-2.0 -lintl  
LIBGSF_LIBS = -L/usr/local/lib -lgobject-2.0 -lgthread-2.0 -lglib-2.0 -lintl -lxml2  
LIBGSF_MAJOR_VERSION = 1
LIBGSF_MICRO_VERSION = 22
LIBGSF_MINOR_VERSION = 14
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
MAINT = 
MAKEINFO = ${SHELL} /home/chris/libgsf-1.14.22/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/local/bin/msgfmt
MSGFMT_OPTS = -c
MSGMERGE = /usr/local/bin/msgmerge
NM = /usr/bin/nm -p
NMEDIT = nmedit
OBJDUMP = objdump
OBJEXT = o
OTOOL = otool
OTOOL64 = otool64
PACKAGE = libgsf
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=libgsf
PACKAGE_NAME = libgsf
PACKAGE_STRING = libgsf 1.14.22
PACKAGE_TARNAME = libgsf
PACKAGE_URL = 
PACKAGE_VERSION = 1.14.22
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /usr/local/lib/pkgconfig:/usr/lib/pkgconfig
POFILES = 
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
PYGTK_CFLAGS = 
PYGTK_CODEGEN = 
PYGTK_LIBS = 
PYTHON = /usr/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_INCLUDES = -I/usr/include/python2.5
PYTHON_PLATFORM = darwin
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.5
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
USE_NLS = yes
VERSION = 1.14.22
VERSION_INFO = 114:22:0
WARN_CFLAGS = -Wall -Wmissing-prototypes 
WINDRES = 
XGETTEXT = /usr/local/bin/xgettext
Z_CPPFLAGS = 
Z_LIBS = -lz
abs_builddir = /home/chris/libgsf-1.14.22/gsf
abs_srcdir = /home/chris/libgsf-1.14.22/gsf
abs_top_builddir = /home/chris/libgsf-1.14.22
abs_top_srcdir = /home/chris/libgsf-1.14.22
ac_ct_CC = /usr/bin/gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = arm-apple-darwin10.4.0
build_alias = 
build_cpu = arm
build_os = darwin10.4.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = arm-apple-darwin10.4.0
host_alias = 
host_cpu = arm
host_os = darwin10.4.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/chris/libgsf-1.14.22/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/libgsf
pkgpythondir = ${pythondir}/libgsf
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.5/site-packages
pythondir = ${prefix}/lib/python2.5/site-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_CPPFLAGS = -I$(top_srcdir) $(LIBGSF_CFLAGS) \
	$(Z_CPPFLAGS) $(LIBGSF_GIO_CFLAGS) \
	-DGSFLOCALEDIR=\"$(datadir)/locale\"

lib_LTLIBRARIES = libgsf-1.la
#gioc = 
gioc = gsf-input-gio.c gsf-output-gio.c
#gioh = 
gioh = gsf-input-gio.h gsf-output-gio.h
#giola = 
giola = $(LIBGSF_GIO_LIBS)
libgsf_1_la_LIBADD = $(LIBGSF_LIBS) $(Z_LIBS) $(BZ2_LIBS) $(giola)
libgsf_1_la_LDFLAGS = -version-info $(VERSION_INFO) $(am__append_1)
#libgsf_1_la_DEPENDENCIES = lib.def
libgsf_1_la_SOURCES = \
	gsf-utils.c		\
	gsf-libxml.c		\
	gsf-doc-meta-data.c	\
	gsf-docprop-vector.c	\
	gsf-msole-impl.h	\
	gsf-msole-utils.c	\
	gsf-open-pkg-utils.c	\
	gsf-opendoc-utils.c	\
	gsf-timestamp.c		\
	gsf-zip-impl.h		\
	gsf-zip-utils.c		\
	\
	gsf-input.c		\
	gsf-input-bzip.c	\
	gsf-input-gzip.c 	\
	gsf-input-http.c 	\
	gsf-input-iochannel.c	\
	gsf-input-memory.c 	\
	gsf-input-proxy.c 	\
	gsf-input-stdio.c 	\
	gsf-input-textline.c 	\
	\
	gsf-infile.c 		\
	gsf-infile-msole.c 	\
	gsf-infile-msvba.c 	\
	gsf-infile-stdio.c	\
	gsf-infile-tar.c	\
	gsf-infile-zip.c	\
	\
	gsf-output.c 		\
	gsf-output-bzip.c	\
	gsf-output-csv.c	\
	gsf-output-gzip.c 	\
	gsf-output-iconv.c	\
	gsf-output-iochannel.c	\
	gsf-output-memory.c	\
	gsf-output-stdio.c	\
	\
	gsf-outfile.c 		\
	gsf-outfile-msole.c 	\
	gsf-outfile-stdio.c	\
	gsf-outfile-zip.c	\
	\
	gsf-shared-memory.c	\
	gsf-structured-blob.c	\
	gsf-blob.c		\
	gsf-clip-data.c		\
	\
	$(gioc)			\
	version.c

#	gsf-output-transaction.c	\
#	gsf-command-context.c	\
#	gsf-io-context.c
libgsf_1_includedir = $(includedir)/libgsf-1/gsf
libgsf_1_include_HEADERS = \
	gsf.h			\
	gsf-utils.h		\
	gsf-libxml.h		\
	gsf-impl-utils.h	\
	gsf-doc-meta-data.h	\
	gsf-docprop-vector.h	\
	gsf-msole-utils.h	\
	gsf-open-pkg-utils.h	\
	gsf-opendoc-utils.h	\
	gsf-timestamp.h		\
	\
	gsf-input.h		\
	gsf-input-impl.h	\
	gsf-input-bzip.h	\
	gsf-input-gzip.h 	\
	gsf-input-http.h 	\
	gsf-input-iochannel.h	\
	gsf-input-memory.h 	\
	gsf-input-proxy.h 	\
	gsf-input-stdio.h 	\
	gsf-input-textline.h 	\
	\
	gsf-infile.h 		\
	gsf-infile-impl.h 	\
	gsf-infile-msole.h 	\
	gsf-infile-msvba.h 	\
	gsf-infile-stdio.h	\
	gsf-infile-tar.h	\
	gsf-infile-zip.h	\
	\
	gsf-output.h		\
	gsf-output-impl.h	\
	gsf-output-bzip.h	\
	gsf-output-csv.h	\
	gsf-output-gzip.h 	\
	gsf-output-iconv.h	\
	gsf-output-iochannel.h	\
	gsf-output-memory.h	\
	gsf-output-stdio.h	\
	\
	gsf-outfile.h 		\
	gsf-outfile-impl.h 	\
	gsf-outfile-msole.h	\
	gsf-outfile-stdio.h	\
	gsf-outfile-zip.h	\
	\
	gsf-shared-memory.h	\
	gsf-structured-blob.h   \
	gsf-meta-names.h	\
	gsf-blob.h		\
	gsf-clip-data.h		\
	\
	$(gioh)

#noinst_DATA = lib.def
#CLEANFILES = gsf-1.exp gsf-1.lib
#CLEANFILES = lib.def stamp-lib.def
#	gsf-command-context.h	\
#	gsf-io-context.h
CPP_CFLAGS = -DGLIB_CHECK_VERSION\(x,y,z\)
LIB_PUBLIC_HDRS = $(libgsf_1_include_HEADERS)
#gsf_mslibdir = $(DESTDIR)$(libdir)
#gsf_mslib_DATA = gsf-1.lib
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/gsf.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu gsf/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu gsf/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
version.c: $(top_builddir)/config.status $(srcdir)/version.c.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libgsf-1.la: $(libgsf_1_la_OBJECTS) $(libgsf_1_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libgsf_1_la_LINK) -rpath $(libdir) $(libgsf_1_la_OBJECTS) $(libgsf_1_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/gsf-blob.Plo
include ./$(DEPDIR)/gsf-clip-data.Plo
include ./$(DEPDIR)/gsf-doc-meta-data.Plo
include ./$(DEPDIR)/gsf-docprop-vector.Plo
include ./$(DEPDIR)/gsf-infile-msole.Plo
include ./$(DEPDIR)/gsf-infile-msvba.Plo
include ./$(DEPDIR)/gsf-infile-stdio.Plo
include ./$(DEPDIR)/gsf-infile-tar.Plo
include ./$(DEPDIR)/gsf-infile-zip.Plo
include ./$(DEPDIR)/gsf-infile.Plo
include ./$(DEPDIR)/gsf-input-bzip.Plo
include ./$(DEPDIR)/gsf-input-gio.Plo
include ./$(DEPDIR)/gsf-input-gzip.Plo
include ./$(DEPDIR)/gsf-input-http.Plo
include ./$(DEPDIR)/gsf-input-iochannel.Plo
include ./$(DEPDIR)/gsf-input-memory.Plo
include ./$(DEPDIR)/gsf-input-proxy.Plo
include ./$(DEPDIR)/gsf-input-stdio.Plo
include ./$(DEPDIR)/gsf-input-textline.Plo
include ./$(DEPDIR)/gsf-input.Plo
include ./$(DEPDIR)/gsf-libxml.Plo
include ./$(DEPDIR)/gsf-msole-utils.Plo
include ./$(DEPDIR)/gsf-open-pkg-utils.Plo
include ./$(DEPDIR)/gsf-opendoc-utils.Plo
include ./$(DEPDIR)/gsf-outfile-msole.Plo
include ./$(DEPDIR)/gsf-outfile-stdio.Plo
include ./$(DEPDIR)/gsf-outfile-zip.Plo
include ./$(DEPDIR)/gsf-outfile.Plo
include ./$(DEPDIR)/gsf-output-bzip.Plo
include ./$(DEPDIR)/gsf-output-csv.Plo
include ./$(DEPDIR)/gsf-output-gio.Plo
include ./$(DEPDIR)/gsf-output-gzip.Plo
include ./$(DEPDIR)/gsf-output-iconv.Plo
include ./$(DEPDIR)/gsf-output-iochannel.Plo
include ./$(DEPDIR)/gsf-output-memory.Plo
include ./$(DEPDIR)/gsf-output-stdio.Plo
include ./$(DEPDIR)/gsf-output.Plo
include ./$(DEPDIR)/gsf-shared-memory.Plo
include ./$(DEPDIR)/gsf-structured-blob.Plo
include ./$(DEPDIR)/gsf-timestamp.Plo
include ./$(DEPDIR)/gsf-utils.Plo
include ./$(DEPDIR)/gsf-zip-utils.Plo
include ./$(DEPDIR)/version.Plo

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-gsf_mslibDATA: $(gsf_mslib_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(gsf_mslibdir)" || $(MKDIR_P) "$(DESTDIR)$(gsf_mslibdir)"
	@list='$(gsf_mslib_DATA)'; test -n "$(gsf_mslibdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(gsf_mslibdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gsf_mslibdir)" || exit $$?; \
	done

uninstall-gsf_mslibDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gsf_mslib_DATA)'; test -n "$(gsf_mslibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gsf_mslibdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gsf_mslibdir)" && rm -f $$files
install-libgsf_1_includeHEADERS: $(libgsf_1_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libgsf_1_includedir)" || $(MKDIR_P) "$(DESTDIR)$(libgsf_1_includedir)"
	@list='$(libgsf_1_include_HEADERS)'; test -n "$(libgsf_1_includedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libgsf_1_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libgsf_1_includedir)" || exit $$?; \
	done

uninstall-libgsf_1_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libgsf_1_include_HEADERS)'; test -n "$(libgsf_1_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(libgsf_1_includedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(libgsf_1_includedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(gsf_mslibdir)" "$(DESTDIR)$(libgsf_1_includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-gsf_mslibDATA install-libgsf_1_includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-gsf_mslibDATA uninstall-libLTLIBRARIES \
	uninstall-libgsf_1_includeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am \
	install-gsf_mslibDATA install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-libgsf_1_includeHEADERS install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-gsf_mslibDATA \
	uninstall-libLTLIBRARIES uninstall-libgsf_1_includeHEADERS


#lib.def: stamp-lib.def
#	@true

#stamp-lib.def: $(LIB_PUBLIC_HDRS) Makefile $(top_srcdir)/dumpdef.pl
#	hdrs='$(LIB_PUBLIC_HDRS)'; \
#	hdrs_list=''; \
#	for hdr in $$hdrs; do \
#	  if test -f $(srcdir)/$$hdr; then \
#	    hdrs_list="$$hdrs_list $(srcdir)/$$hdr"; \
#	  else \
#	    hdrs_list="$$hdrs_list $$hdr"; \
#	  fi; \
#	done; \
#	cat $(top_builddir)/gsf-config.h $$hdrs_list | \
#		sed -e 's/^#[ \t]*include[ \t]\+.*$$//g' | \
#		$(CPP) $(AM_CPPFLAGS) $(CPP_CFLAGS) -P - > xgen-libdef.1 && \
#	echo EXPORTS> xgen-libdef.2 && \
#	perl $(top_srcdir)/dumpdef.pl \
#		xgen-libdef.1 >> xgen-libdef.2 \
#	&& (cmp -s xgen-libdef.2 lib.def || \
#		cp xgen-libdef.2 lib.def) \
#	&& rm -f xgen-libdef.1 xgen-libdef.2 \
#	&& echo timestamp > $@	

#gsf-1.lib: libgsf-1.la lib.def
#	lib -name:libgsf-1-$(CURRENT_MINUS_AGE).dll -def:lib.def -out:$@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
