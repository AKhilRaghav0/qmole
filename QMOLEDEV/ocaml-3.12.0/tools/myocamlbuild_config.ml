(* # generated by ./configure  *)
let prefix = "/usr/local";;
let bindir = prefix^"/bin";;
let libdir = prefix^"/lib/ocaml";;
let stublibdir = libdir^"/stublibs";;
let mandir = prefix^"/man";;
let manext = "1";;
let ranlib = "ranlib";;
let ranlibcmd = "ranlib";;
let sharpbangscripts = true;;
let bng_arch = "generic";;
let bng_asm_level = "0";;
let pthread_link = "-cclib -lpthread";;
let x11_includes = "";;
let x11_link = "-lX11";;
let dbm_includes = "not found";;
let dbm_link = "not found";;
let tk_defs = "";;
let tk_link = "";;
let libbfd_link = "";;
let bytecc = "gcc";;
let bytecccompopts = " -fno-defer-pop -no-cpp-precomp -Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT";;
let bytecclinkopts = "";;
let bytecclibs = "   -lcurses -lpthread";;
let byteccrpath = "";;
let exe = "";;
let supports_shared_libraries = true;;
let sharedcccompopts = "";;
let mksharedlibrpath = "";;
let natdynlinkopts = "";;
(* SYSLIB=-l"^1^" *)
let syslib x = "-l"^x;;

(* ## *)
(* MKLIB=ar rc "^1^" "^2^"; ranlib "^1^" *)
let mklib out files opts = Printf.sprintf "ar rc %s %s %s; ranlib %s" out opts files out;;
let arch = "arm";;
let model = "default";;
let system = "macosx";;
let nativecc = "gcc";;
let nativecccompopts = "-Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT";;
let nativeccprofopts = "-Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT";;
let nativecclinkopts = "";;
let nativeccrpath = "";;
let nativecclibs = "  ";;
let asm = "as";;
let aspp = "gcc -c";;
let asppprofflags = "-DPROFILING";;
let profiling = "noprof";;
let dynlinkopts = "";;
let otherlibraries = "unix str num dynlink bigarray systhreads threads graph";;
let debugger = "ocamldebugger";;
let cc_profile = "-pg";;
let systhread_support = true;;
let partialld = "ld -r";;
let packld = partialld^" "^nativecclinkopts^" -o\ ";;
let dllcccompopts = "";;

let o = "o";;
let a = "a";;
let so = "so";;
let ext_obj = ".o";;
let ext_asm = ".s";;
let ext_lib = ".a";;
let ext_dll = ".so";;
let extralibs = "";;
let ccomptype = "cc";;
let toolchain = "cc";;
let natdynlink = false;;
let cmxs = "cmxa";;
let mkexe = bytecc;;
let mkdll = "gcc -bundle -flat_namespace -undefined suppress";;
let mkmaindll = "gcc -bundle -flat_namespace -undefined suppress";;
