/*
 * This file was generated by orbit-idl-2 - DO NOT EDIT!
 */

#ifndef test_any_H
#define test_any_H 1
#include <glib.h>
#define ORBIT_IDL_SERIAL 20
#include <orbit/orbit-types.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/** typedefs **/
#if !defined(_TestAnyStruct_defined)
#define _TestAnyStruct_defined 1
typedef struct TestAnyStruct_type TestAnyStruct;
struct TestAnyStruct_type {
CORBA_string string_value;
CORBA_long long_value;
};

#if !defined(TC_IMPL_TC_TestAnyStruct_0)
#define TC_IMPL_TC_TestAnyStruct_0 't'
#define TC_IMPL_TC_TestAnyStruct_1 'e'
#define TC_IMPL_TC_TestAnyStruct_2 's'
#define TC_IMPL_TC_TestAnyStruct_3 't'
#define TC_IMPL_TC_TestAnyStruct_4 '_'
#define TC_IMPL_TC_TestAnyStruct_5 'a'
#define TC_IMPL_TC_TestAnyStruct_6 'n'
#define TC_IMPL_TC_TestAnyStruct_7 'y'
#ifdef ORBIT_IDL_C_IMODULE_test_any
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_TestAnyStruct_struct;
#define TC_TestAnyStruct ((CORBA_TypeCode)&TC_TestAnyStruct_struct)
#endif
#define TestAnyStruct__alloc() ((TestAnyStruct *)ORBit_small_alloc (TC_TestAnyStruct))
#define TestAnyStruct__freekids(m,d) ORBit_small_freekids (TC_TestAnyStruct,(m),(d))
#endif
#if !defined(ORBIT_DECL_TestAny) && !defined(_TestAny_defined)
#define ORBIT_DECL_TestAny 1
#define _TestAny_defined 1
#define TestAny__freekids CORBA_Object__freekids
typedef CORBA_Object TestAny;
extern CORBA_unsigned_long TestAny__classid;
#if !defined(TC_IMPL_TC_TestAny_0)
#define TC_IMPL_TC_TestAny_0 't'
#define TC_IMPL_TC_TestAny_1 'e'
#define TC_IMPL_TC_TestAny_2 's'
#define TC_IMPL_TC_TestAny_3 't'
#define TC_IMPL_TC_TestAny_4 '_'
#define TC_IMPL_TC_TestAny_5 'a'
#define TC_IMPL_TC_TestAny_6 'n'
#define TC_IMPL_TC_TestAny_7 'y'
#ifdef ORBIT_IDL_C_IMODULE_test_any
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_TestAny_struct;
#define TC_TestAny ((CORBA_TypeCode)&TC_TestAny_struct)
#endif
#endif

/** POA structures **/
#ifndef _defined_POA_TestAny
#define _defined_POA_TestAny 1
typedef struct {
  void *_private;
CORBA_any* (*print)(PortableServer_Servant _servant, const CORBA_any* what, CORBA_Environment *ev);
} POA_TestAny__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_TestAny__epv *TestAny_epv;
} POA_TestAny__vepv;
typedef struct {
  void *_private;
  POA_TestAny__vepv *vepv;
} POA_TestAny;
extern void POA_TestAny__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_TestAny__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_TestAny */

/** skel prototypes **/
void _ORBIT_skel_small_TestAny_print(POA_TestAny *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_any* (*_impl_print)(PortableServer_Servant _servant, const CORBA_any* what, CORBA_Environment *ev));

/** stub prototypes **/
CORBA_any* TestAny_print(TestAny _obj, const CORBA_any* what, CORBA_Environment *ev);
#include <orbit/orb-core/orbit-interface.h>

#ifdef ORBIT_IDL_C_IMODULE_test_any
static 
#else
extern 
#endif
ORBit_IInterface TestAny__iinterface;
#define TestAny_IMETHODS_LEN 1
#ifdef ORBIT_IDL_C_IMODULE_test_any
static 
#else
extern 
#endif
ORBit_IMethod TestAny__imethods[TestAny_IMETHODS_LEN];

/** IMethods index */

#ifndef __TestAny__imethods_index
#define __TestAny__imethods_index
typedef enum {
	TestAny_print__imethods_index
} TestAny__imethods_index;
#endif /* __TestAny__imethods_index */

#ifndef __ORBIT_IMETHODS_INDEX
#define __ORBIT_IMETHODS_INDEX
#define ORBIT_IMETHODS_INDEX(m) (m ## __imethods_index)
#endif /* __ORBIT_IMETHODS_INDEX */

#ifdef __cplusplus
}
#endif /* __cplusplus */

#ifndef EXCLUDE_ORBIT_H
#include <orbit/orbit.h>

#endif /* EXCLUDE_ORBIT_H */
#endif
#undef ORBIT_IDL_SERIAL
