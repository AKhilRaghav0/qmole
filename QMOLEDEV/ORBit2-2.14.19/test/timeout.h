/*
 * This file was generated by orbit-idl-2 - DO NOT EDIT!
 */

#ifndef timeout_H
#define timeout_H 1
#include <glib.h>
#define ORBIT_IDL_SERIAL 20
#include <orbit/orbit-types.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/** typedefs **/
#if !defined(ORBIT_DECL_Timeout) && !defined(_Timeout_defined)
#define ORBIT_DECL_Timeout 1
#define _Timeout_defined 1
#define Timeout__freekids CORBA_Object__freekids
typedef CORBA_Object Timeout;
extern CORBA_unsigned_long Timeout__classid;
#if !defined(TC_IMPL_TC_Timeout_0)
#define TC_IMPL_TC_Timeout_0 't'
#define TC_IMPL_TC_Timeout_1 'i'
#define TC_IMPL_TC_Timeout_2 'm'
#define TC_IMPL_TC_Timeout_3 'e'
#define TC_IMPL_TC_Timeout_4 'o'
#define TC_IMPL_TC_Timeout_5 'u'
#define TC_IMPL_TC_Timeout_6 't'
#ifdef ORBIT_IDL_C_IMODULE_timeout
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Timeout_struct;
#define TC_Timeout ((CORBA_TypeCode)&TC_Timeout_struct)
#endif
#endif

/** POA structures **/
#ifndef _defined_POA_Timeout
#define _defined_POA_Timeout 1
typedef struct {
  void *_private;
void (*ping)(PortableServer_Servant _servant, const CORBA_unsigned_long delay_secs, CORBA_Environment *ev);
} POA_Timeout__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Timeout__epv *Timeout_epv;
} POA_Timeout__vepv;
typedef struct {
  void *_private;
  POA_Timeout__vepv *vepv;
} POA_Timeout;
extern void POA_Timeout__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Timeout__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Timeout */

/** skel prototypes **/
void _ORBIT_skel_small_Timeout_ping(POA_Timeout *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_ping)(PortableServer_Servant _servant, const CORBA_unsigned_long delay_secs, CORBA_Environment *ev));

/** stub prototypes **/
void Timeout_ping(Timeout _obj, const CORBA_unsigned_long delay_secs, CORBA_Environment *ev);
#include <orbit/orb-core/orbit-interface.h>

#ifdef ORBIT_IDL_C_IMODULE_timeout
static 
#else
extern 
#endif
ORBit_IInterface Timeout__iinterface;
#define Timeout_IMETHODS_LEN 1
#ifdef ORBIT_IDL_C_IMODULE_timeout
static 
#else
extern 
#endif
ORBit_IMethod Timeout__imethods[Timeout_IMETHODS_LEN];

/** IMethods index */

#ifndef __Timeout__imethods_index
#define __Timeout__imethods_index
typedef enum {
	Timeout_ping__imethods_index
} Timeout__imethods_index;
#endif /* __Timeout__imethods_index */

#ifndef __ORBIT_IMETHODS_INDEX
#define __ORBIT_IMETHODS_INDEX
#define ORBIT_IMETHODS_INDEX(m) (m ## __imethods_index)
#endif /* __ORBIT_IMETHODS_INDEX */

#ifdef __cplusplus
}
#endif /* __cplusplus */

#ifndef EXCLUDE_ORBIT_H
#include <orbit/orbit.h>

#endif /* EXCLUDE_ORBIT_H */
#endif
#undef ORBIT_IDL_SERIAL
