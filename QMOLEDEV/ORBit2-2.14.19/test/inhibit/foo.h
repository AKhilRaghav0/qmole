/*
 * This file was generated by orbit-idl-2 - DO NOT EDIT!
 */

#ifndef foo_H
#define foo_H 1
#include <glib.h>
#define ORBIT_IDL_SERIAL 20
#include <orbit/orbit-types.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/** typedefs **/
#if !defined(ORBIT_DECL_Foo_Parent) && !defined(_Foo_Parent_defined)
#define ORBIT_DECL_Foo_Parent 1
#define _Foo_Parent_defined 1
#define Foo_Parent__freekids CORBA_Object__freekids
typedef CORBA_Object Foo_Parent;
extern CORBA_unsigned_long Foo_Parent__classid;
#if !defined(TC_IMPL_TC_Foo_Parent_0)
#define TC_IMPL_TC_Foo_Parent_0 'f'
#define TC_IMPL_TC_Foo_Parent_1 'o'
#define TC_IMPL_TC_Foo_Parent_2 'o'
#ifdef ORBIT_IDL_C_IMODULE_foo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Foo_Parent_struct;
#define TC_Foo_Parent ((CORBA_TypeCode)&TC_Foo_Parent_struct)
#endif
#endif

/** POA structures **/
#ifndef _defined_POA_Foo_Parent
#define _defined_POA_Foo_Parent 1
typedef struct {
  void *_private;
void (*foo)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Foo_Parent__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Foo_Parent__epv *Foo_Parent_epv;
} POA_Foo_Parent__vepv;
typedef struct {
  void *_private;
  POA_Foo_Parent__vepv *vepv;
} POA_Foo_Parent;
extern void POA_Foo_Parent__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Foo_Parent__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Foo_Parent */

/** skel prototypes **/
void _ORBIT_skel_small_Foo_Parent_foo(POA_Foo_Parent *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_foo)(PortableServer_Servant _servant, CORBA_Environment *ev));

/** stub prototypes **/
void Foo_Parent_foo(Foo_Parent _obj, CORBA_Environment *ev);
#include <orbit/orb-core/orbit-interface.h>

#ifdef ORBIT_IDL_C_IMODULE_foo
static 
#else
extern 
#endif
ORBit_IInterface Foo_Parent__iinterface;
#define Foo_Parent_IMETHODS_LEN 1
#ifdef ORBIT_IDL_C_IMODULE_foo
static 
#else
extern 
#endif
ORBit_IMethod Foo_Parent__imethods[Foo_Parent_IMETHODS_LEN];

/** IMethods index */

#ifndef __Foo_Parent__imethods_index
#define __Foo_Parent__imethods_index
typedef enum {
	Foo_Parent_foo__imethods_index
} Foo_Parent__imethods_index;
#endif /* __Foo_Parent__imethods_index */

#ifndef __ORBIT_IMETHODS_INDEX
#define __ORBIT_IMETHODS_INDEX
#define ORBIT_IMETHODS_INDEX(m) (m ## __imethods_index)
#endif /* __ORBIT_IMETHODS_INDEX */

#ifdef __cplusplus
}
#endif /* __cplusplus */

#ifndef EXCLUDE_ORBIT_H
#include <orbit/orbit.h>

#endif /* EXCLUDE_ORBIT_H */
#endif
#undef ORBIT_IDL_SERIAL
