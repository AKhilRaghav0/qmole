/*
 * This file was generated by orbit-idl-2 - DO NOT EDIT!
 */

#ifndef poatest_H
#define poatest_H 1
#include <glib.h>
#define ORBIT_IDL_SERIAL 20
#include <orbit/orbit-types.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/** typedefs **/
#if !defined(ORBIT_DECL_poatest) && !defined(_poatest_defined)
#define ORBIT_DECL_poatest 1
#define _poatest_defined 1
#define poatest__freekids CORBA_Object__freekids
typedef CORBA_Object poatest;
extern CORBA_unsigned_long poatest__classid;
#if !defined(TC_IMPL_TC_poatest_0)
#define TC_IMPL_TC_poatest_0 'p'
#define TC_IMPL_TC_poatest_1 'o'
#define TC_IMPL_TC_poatest_2 'a'
#define TC_IMPL_TC_poatest_3 't'
#define TC_IMPL_TC_poatest_4 'e'
#define TC_IMPL_TC_poatest_5 's'
#define TC_IMPL_TC_poatest_6 't'
#ifdef ORBIT_IDL_C_IMODULE_poatest
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_poatest_struct;
#define TC_poatest ((CORBA_TypeCode)&TC_poatest_struct)
#endif
#endif

/** POA structures **/
#ifndef _defined_POA_poatest
#define _defined_POA_poatest 1
typedef struct {
  void *_private;
void (*test)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_poatest__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_poatest__epv *poatest_epv;
} POA_poatest__vepv;
typedef struct {
  void *_private;
  POA_poatest__vepv *vepv;
} POA_poatest;
extern void POA_poatest__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_poatest__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_poatest */

/** skel prototypes **/
void _ORBIT_skel_small_poatest_test(POA_poatest *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_test)(PortableServer_Servant _servant, CORBA_Environment *ev));

/** stub prototypes **/
void poatest_test(poatest _obj, CORBA_Environment *ev);
#include <orbit/orb-core/orbit-interface.h>

#ifdef ORBIT_IDL_C_IMODULE_poatest
static 
#else
extern 
#endif
ORBit_IInterface poatest__iinterface;
#define poatest_IMETHODS_LEN 1
#ifdef ORBIT_IDL_C_IMODULE_poatest
static 
#else
extern 
#endif
ORBit_IMethod poatest__imethods[poatest_IMETHODS_LEN];

/** IMethods index */

#ifndef __poatest__imethods_index
#define __poatest__imethods_index
typedef enum {
	poatest_test__imethods_index
} poatest__imethods_index;
#endif /* __poatest__imethods_index */

#ifndef __ORBIT_IMETHODS_INDEX
#define __ORBIT_IMETHODS_INDEX
#define ORBIT_IMETHODS_INDEX(m) (m ## __imethods_index)
#endif /* __ORBIT_IMETHODS_INDEX */

#ifdef __cplusplus
}
#endif /* __cplusplus */

#ifndef EXCLUDE_ORBIT_H
#include <orbit/orbit.h>

#endif /* EXCLUDE_ORBIT_H */
#endif
#undef ORBIT_IDL_SERIAL
