/*
 * This file was generated by orbit-idl-2 - DO NOT EDIT!
 */

#ifndef everything_H
#define everything_H 1
#include <glib.h>
#define ORBIT_IDL_SERIAL 20
#include <orbit/orbit-types.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/** typedefs **/
#ifndef test_CONST_CHAR_NL
#define test_CONST_CHAR_NL '\xA'
#endif /* !test_CONST_CHAR_NL */

#ifndef test_CONST_CHAR
#define test_CONST_CHAR '\x74'
#endif /* !test_CONST_CHAR */

#ifndef test_CONST_SHORT
#define test_CONST_SHORT 4660
#endif /* !test_CONST_SHORT */

#ifndef test_CONST_LONG
#define test_CONST_LONG 305419896
#endif /* !test_CONST_LONG */

#ifndef test_CONST_LONG_LONG
#define test_CONST_LONG_LONG 305419896
#endif /* !test_CONST_LONG_LONG */

#ifndef test_CONST_STRING
#define test_CONST_STRING "ConstString"
#endif /* !test_CONST_STRING */

#ifndef test_CONST_FLOAT
#define test_CONST_FLOAT 1234.560000
#endif /* !test_CONST_FLOAT */

#ifndef test_CONST_DOUBLE
#define test_CONST_DOUBLE 1234.567800
#endif /* !test_CONST_DOUBLE */

#ifndef test_CONST_LONG_DOUBLE
#define test_CONST_LONG_DOUBLE 1234.567891
#endif /* !test_CONST_LONG_DOUBLE */

#ifndef test_CONST_BOOLEAN
#define test_CONST_BOOLEAN CORBA_TRUE
#endif /* !test_CONST_BOOLEAN */

#if !defined(_test_Soup_defined)
#define _test_Soup_defined 1
typedef enum {
  test_veggie,
  test_chicken,
  test_tomato,
  test_oxtail
} test_Soup;
#if !defined(TC_IMPL_TC_test_Soup_0)
#define TC_IMPL_TC_test_Soup_0 'e'
#define TC_IMPL_TC_test_Soup_1 'v'
#define TC_IMPL_TC_test_Soup_2 'e'
#define TC_IMPL_TC_test_Soup_3 'r'
#define TC_IMPL_TC_test_Soup_4 'y'
#define TC_IMPL_TC_test_Soup_5 't'
#define TC_IMPL_TC_test_Soup_6 'h'
#define TC_IMPL_TC_test_Soup_7 'i'
#define TC_IMPL_TC_test_Soup_8 'n'
#define TC_IMPL_TC_test_Soup_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_Soup_struct;
#define TC_test_Soup ((CORBA_TypeCode)&TC_test_Soup_struct)
#endif
#endif
#ifndef test_FAVORITE_SOUP
#define test_FAVORITE_SOUP test_veggie
#endif /* !test_FAVORITE_SOUP */

#ifndef test_HORRIBLE_SOUP
#define test_HORRIBLE_SOUP test_oxtail
#endif /* !test_HORRIBLE_SOUP */

#if !defined(ORBIT_DECL_test_BasicServer) && !defined(_test_BasicServer_defined)
#define ORBIT_DECL_test_BasicServer 1
#define _test_BasicServer_defined 1
#define test_BasicServer__freekids CORBA_Object__freekids
typedef CORBA_Object test_BasicServer;
extern CORBA_unsigned_long test_BasicServer__classid;
#if !defined(TC_IMPL_TC_test_BasicServer_0)
#define TC_IMPL_TC_test_BasicServer_0 'e'
#define TC_IMPL_TC_test_BasicServer_1 'v'
#define TC_IMPL_TC_test_BasicServer_2 'e'
#define TC_IMPL_TC_test_BasicServer_3 'r'
#define TC_IMPL_TC_test_BasicServer_4 'y'
#define TC_IMPL_TC_test_BasicServer_5 't'
#define TC_IMPL_TC_test_BasicServer_6 'h'
#define TC_IMPL_TC_test_BasicServer_7 'i'
#define TC_IMPL_TC_test_BasicServer_8 'n'
#define TC_IMPL_TC_test_BasicServer_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_BasicServer_struct;
#define TC_test_BasicServer ((CORBA_TypeCode)&TC_test_BasicServer_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_StructServer) && !defined(_test_StructServer_defined)
#define ORBIT_DECL_test_StructServer 1
#define _test_StructServer_defined 1
#define test_StructServer__freekids CORBA_Object__freekids
typedef CORBA_Object test_StructServer;
extern CORBA_unsigned_long test_StructServer__classid;
#if !defined(TC_IMPL_TC_test_StructServer_0)
#define TC_IMPL_TC_test_StructServer_0 'e'
#define TC_IMPL_TC_test_StructServer_1 'v'
#define TC_IMPL_TC_test_StructServer_2 'e'
#define TC_IMPL_TC_test_StructServer_3 'r'
#define TC_IMPL_TC_test_StructServer_4 'y'
#define TC_IMPL_TC_test_StructServer_5 't'
#define TC_IMPL_TC_test_StructServer_6 'h'
#define TC_IMPL_TC_test_StructServer_7 'i'
#define TC_IMPL_TC_test_StructServer_8 'n'
#define TC_IMPL_TC_test_StructServer_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_StructServer_struct;
#define TC_test_StructServer ((CORBA_TypeCode)&TC_test_StructServer_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_SequenceServer) && !defined(_test_SequenceServer_defined)
#define ORBIT_DECL_test_SequenceServer 1
#define _test_SequenceServer_defined 1
#define test_SequenceServer__freekids CORBA_Object__freekids
typedef CORBA_Object test_SequenceServer;
extern CORBA_unsigned_long test_SequenceServer__classid;
#if !defined(TC_IMPL_TC_test_SequenceServer_0)
#define TC_IMPL_TC_test_SequenceServer_0 'e'
#define TC_IMPL_TC_test_SequenceServer_1 'v'
#define TC_IMPL_TC_test_SequenceServer_2 'e'
#define TC_IMPL_TC_test_SequenceServer_3 'r'
#define TC_IMPL_TC_test_SequenceServer_4 'y'
#define TC_IMPL_TC_test_SequenceServer_5 't'
#define TC_IMPL_TC_test_SequenceServer_6 'h'
#define TC_IMPL_TC_test_SequenceServer_7 'i'
#define TC_IMPL_TC_test_SequenceServer_8 'n'
#define TC_IMPL_TC_test_SequenceServer_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_SequenceServer_struct;
#define TC_test_SequenceServer ((CORBA_TypeCode)&TC_test_SequenceServer_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_UnionServer) && !defined(_test_UnionServer_defined)
#define ORBIT_DECL_test_UnionServer 1
#define _test_UnionServer_defined 1
#define test_UnionServer__freekids CORBA_Object__freekids
typedef CORBA_Object test_UnionServer;
extern CORBA_unsigned_long test_UnionServer__classid;
#if !defined(TC_IMPL_TC_test_UnionServer_0)
#define TC_IMPL_TC_test_UnionServer_0 'e'
#define TC_IMPL_TC_test_UnionServer_1 'v'
#define TC_IMPL_TC_test_UnionServer_2 'e'
#define TC_IMPL_TC_test_UnionServer_3 'r'
#define TC_IMPL_TC_test_UnionServer_4 'y'
#define TC_IMPL_TC_test_UnionServer_5 't'
#define TC_IMPL_TC_test_UnionServer_6 'h'
#define TC_IMPL_TC_test_UnionServer_7 'i'
#define TC_IMPL_TC_test_UnionServer_8 'n'
#define TC_IMPL_TC_test_UnionServer_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_UnionServer_struct;
#define TC_test_UnionServer ((CORBA_TypeCode)&TC_test_UnionServer_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_ArrayServer) && !defined(_test_ArrayServer_defined)
#define ORBIT_DECL_test_ArrayServer 1
#define _test_ArrayServer_defined 1
#define test_ArrayServer__freekids CORBA_Object__freekids
typedef CORBA_Object test_ArrayServer;
extern CORBA_unsigned_long test_ArrayServer__classid;
#if !defined(TC_IMPL_TC_test_ArrayServer_0)
#define TC_IMPL_TC_test_ArrayServer_0 'e'
#define TC_IMPL_TC_test_ArrayServer_1 'v'
#define TC_IMPL_TC_test_ArrayServer_2 'e'
#define TC_IMPL_TC_test_ArrayServer_3 'r'
#define TC_IMPL_TC_test_ArrayServer_4 'y'
#define TC_IMPL_TC_test_ArrayServer_5 't'
#define TC_IMPL_TC_test_ArrayServer_6 'h'
#define TC_IMPL_TC_test_ArrayServer_7 'i'
#define TC_IMPL_TC_test_ArrayServer_8 'n'
#define TC_IMPL_TC_test_ArrayServer_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_ArrayServer_struct;
#define TC_test_ArrayServer ((CORBA_TypeCode)&TC_test_ArrayServer_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_AnyServer) && !defined(_test_AnyServer_defined)
#define ORBIT_DECL_test_AnyServer 1
#define _test_AnyServer_defined 1
#define test_AnyServer__freekids CORBA_Object__freekids
typedef CORBA_Object test_AnyServer;
extern CORBA_unsigned_long test_AnyServer__classid;
#if !defined(TC_IMPL_TC_test_AnyServer_0)
#define TC_IMPL_TC_test_AnyServer_0 'e'
#define TC_IMPL_TC_test_AnyServer_1 'v'
#define TC_IMPL_TC_test_AnyServer_2 'e'
#define TC_IMPL_TC_test_AnyServer_3 'r'
#define TC_IMPL_TC_test_AnyServer_4 'y'
#define TC_IMPL_TC_test_AnyServer_5 't'
#define TC_IMPL_TC_test_AnyServer_6 'h'
#define TC_IMPL_TC_test_AnyServer_7 'i'
#define TC_IMPL_TC_test_AnyServer_8 'n'
#define TC_IMPL_TC_test_AnyServer_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_AnyServer_struct;
#define TC_test_AnyServer ((CORBA_TypeCode)&TC_test_AnyServer_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_BaseServer) && !defined(_test_BaseServer_defined)
#define ORBIT_DECL_test_BaseServer 1
#define _test_BaseServer_defined 1
#define test_BaseServer__freekids CORBA_Object__freekids
typedef CORBA_Object test_BaseServer;
extern CORBA_unsigned_long test_BaseServer__classid;
#if !defined(TC_IMPL_TC_test_BaseServer_0)
#define TC_IMPL_TC_test_BaseServer_0 'e'
#define TC_IMPL_TC_test_BaseServer_1 'v'
#define TC_IMPL_TC_test_BaseServer_2 'e'
#define TC_IMPL_TC_test_BaseServer_3 'r'
#define TC_IMPL_TC_test_BaseServer_4 'y'
#define TC_IMPL_TC_test_BaseServer_5 't'
#define TC_IMPL_TC_test_BaseServer_6 'h'
#define TC_IMPL_TC_test_BaseServer_7 'i'
#define TC_IMPL_TC_test_BaseServer_8 'n'
#define TC_IMPL_TC_test_BaseServer_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_BaseServer_struct;
#define TC_test_BaseServer ((CORBA_TypeCode)&TC_test_BaseServer_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_B1) && !defined(_test_B1_defined)
#define ORBIT_DECL_test_B1 1
#define _test_B1_defined 1
#define test_B1__freekids CORBA_Object__freekids
typedef CORBA_Object test_B1;
extern CORBA_unsigned_long test_B1__classid;
#if !defined(TC_IMPL_TC_test_B1_0)
#define TC_IMPL_TC_test_B1_0 'e'
#define TC_IMPL_TC_test_B1_1 'v'
#define TC_IMPL_TC_test_B1_2 'e'
#define TC_IMPL_TC_test_B1_3 'r'
#define TC_IMPL_TC_test_B1_4 'y'
#define TC_IMPL_TC_test_B1_5 't'
#define TC_IMPL_TC_test_B1_6 'h'
#define TC_IMPL_TC_test_B1_7 'i'
#define TC_IMPL_TC_test_B1_8 'n'
#define TC_IMPL_TC_test_B1_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_B1_struct;
#define TC_test_B1 ((CORBA_TypeCode)&TC_test_B1_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_B2) && !defined(_test_B2_defined)
#define ORBIT_DECL_test_B2 1
#define _test_B2_defined 1
#define test_B2__freekids CORBA_Object__freekids
typedef CORBA_Object test_B2;
extern CORBA_unsigned_long test_B2__classid;
#if !defined(TC_IMPL_TC_test_B2_0)
#define TC_IMPL_TC_test_B2_0 'e'
#define TC_IMPL_TC_test_B2_1 'v'
#define TC_IMPL_TC_test_B2_2 'e'
#define TC_IMPL_TC_test_B2_3 'r'
#define TC_IMPL_TC_test_B2_4 'y'
#define TC_IMPL_TC_test_B2_5 't'
#define TC_IMPL_TC_test_B2_6 'h'
#define TC_IMPL_TC_test_B2_7 'i'
#define TC_IMPL_TC_test_B2_8 'n'
#define TC_IMPL_TC_test_B2_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_B2_struct;
#define TC_test_B2 ((CORBA_TypeCode)&TC_test_B2_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_DerivedServer) && !defined(_test_DerivedServer_defined)
#define ORBIT_DECL_test_DerivedServer 1
#define _test_DerivedServer_defined 1
#define test_DerivedServer__freekids CORBA_Object__freekids
typedef CORBA_Object test_DerivedServer;
extern CORBA_unsigned_long test_DerivedServer__classid;
#if !defined(TC_IMPL_TC_test_DerivedServer_0)
#define TC_IMPL_TC_test_DerivedServer_0 'e'
#define TC_IMPL_TC_test_DerivedServer_1 'v'
#define TC_IMPL_TC_test_DerivedServer_2 'e'
#define TC_IMPL_TC_test_DerivedServer_3 'r'
#define TC_IMPL_TC_test_DerivedServer_4 'y'
#define TC_IMPL_TC_test_DerivedServer_5 't'
#define TC_IMPL_TC_test_DerivedServer_6 'h'
#define TC_IMPL_TC_test_DerivedServer_7 'i'
#define TC_IMPL_TC_test_DerivedServer_8 'n'
#define TC_IMPL_TC_test_DerivedServer_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_DerivedServer_struct;
#define TC_test_DerivedServer ((CORBA_TypeCode)&TC_test_DerivedServer_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_TransientObj) && !defined(_test_TransientObj_defined)
#define ORBIT_DECL_test_TransientObj 1
#define _test_TransientObj_defined 1
#define test_TransientObj__freekids CORBA_Object__freekids
typedef CORBA_Object test_TransientObj;
extern CORBA_unsigned_long test_TransientObj__classid;
#if !defined(TC_IMPL_TC_test_TransientObj_0)
#define TC_IMPL_TC_test_TransientObj_0 'e'
#define TC_IMPL_TC_test_TransientObj_1 'v'
#define TC_IMPL_TC_test_TransientObj_2 'e'
#define TC_IMPL_TC_test_TransientObj_3 'r'
#define TC_IMPL_TC_test_TransientObj_4 'y'
#define TC_IMPL_TC_test_TransientObj_5 't'
#define TC_IMPL_TC_test_TransientObj_6 'h'
#define TC_IMPL_TC_test_TransientObj_7 'i'
#define TC_IMPL_TC_test_TransientObj_8 'n'
#define TC_IMPL_TC_test_TransientObj_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_TransientObj_struct;
#define TC_test_TransientObj ((CORBA_TypeCode)&TC_test_TransientObj_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_ContextServer) && !defined(_test_ContextServer_defined)
#define ORBIT_DECL_test_ContextServer 1
#define _test_ContextServer_defined 1
#define test_ContextServer__freekids CORBA_Object__freekids
typedef CORBA_Object test_ContextServer;
extern CORBA_unsigned_long test_ContextServer__classid;
#if !defined(TC_IMPL_TC_test_ContextServer_0)
#define TC_IMPL_TC_test_ContextServer_0 'e'
#define TC_IMPL_TC_test_ContextServer_1 'v'
#define TC_IMPL_TC_test_ContextServer_2 'e'
#define TC_IMPL_TC_test_ContextServer_3 'r'
#define TC_IMPL_TC_test_ContextServer_4 'y'
#define TC_IMPL_TC_test_ContextServer_5 't'
#define TC_IMPL_TC_test_ContextServer_6 'h'
#define TC_IMPL_TC_test_ContextServer_7 'i'
#define TC_IMPL_TC_test_ContextServer_8 'n'
#define TC_IMPL_TC_test_ContextServer_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_ContextServer_struct;
#define TC_test_ContextServer ((CORBA_TypeCode)&TC_test_ContextServer_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_DeadReferenceObj) && !defined(_test_DeadReferenceObj_defined)
#define ORBIT_DECL_test_DeadReferenceObj 1
#define _test_DeadReferenceObj_defined 1
#define test_DeadReferenceObj__freekids CORBA_Object__freekids
typedef CORBA_Object test_DeadReferenceObj;
extern CORBA_unsigned_long test_DeadReferenceObj__classid;
#if !defined(TC_IMPL_TC_test_DeadReferenceObj_0)
#define TC_IMPL_TC_test_DeadReferenceObj_0 'e'
#define TC_IMPL_TC_test_DeadReferenceObj_1 'v'
#define TC_IMPL_TC_test_DeadReferenceObj_2 'e'
#define TC_IMPL_TC_test_DeadReferenceObj_3 'r'
#define TC_IMPL_TC_test_DeadReferenceObj_4 'y'
#define TC_IMPL_TC_test_DeadReferenceObj_5 't'
#define TC_IMPL_TC_test_DeadReferenceObj_6 'h'
#define TC_IMPL_TC_test_DeadReferenceObj_7 'i'
#define TC_IMPL_TC_test_DeadReferenceObj_8 'n'
#define TC_IMPL_TC_test_DeadReferenceObj_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_DeadReferenceObj_struct;
#define TC_test_DeadReferenceObj ((CORBA_TypeCode)&TC_test_DeadReferenceObj_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_PingPongServer) && !defined(_test_PingPongServer_defined)
#define ORBIT_DECL_test_PingPongServer 1
#define _test_PingPongServer_defined 1
#define test_PingPongServer__freekids CORBA_Object__freekids
typedef CORBA_Object test_PingPongServer;
extern CORBA_unsigned_long test_PingPongServer__classid;
#if !defined(TC_IMPL_TC_test_PingPongServer_0)
#define TC_IMPL_TC_test_PingPongServer_0 'e'
#define TC_IMPL_TC_test_PingPongServer_1 'v'
#define TC_IMPL_TC_test_PingPongServer_2 'e'
#define TC_IMPL_TC_test_PingPongServer_3 'r'
#define TC_IMPL_TC_test_PingPongServer_4 'y'
#define TC_IMPL_TC_test_PingPongServer_5 't'
#define TC_IMPL_TC_test_PingPongServer_6 'h'
#define TC_IMPL_TC_test_PingPongServer_7 'i'
#define TC_IMPL_TC_test_PingPongServer_8 'n'
#define TC_IMPL_TC_test_PingPongServer_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_PingPongServer_struct;
#define TC_test_PingPongServer ((CORBA_TypeCode)&TC_test_PingPongServer_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_LifeCycleServer) && !defined(_test_LifeCycleServer_defined)
#define ORBIT_DECL_test_LifeCycleServer 1
#define _test_LifeCycleServer_defined 1
#define test_LifeCycleServer__freekids CORBA_Object__freekids
typedef CORBA_Object test_LifeCycleServer;
extern CORBA_unsigned_long test_LifeCycleServer__classid;
#if !defined(TC_IMPL_TC_test_LifeCycleServer_0)
#define TC_IMPL_TC_test_LifeCycleServer_0 'e'
#define TC_IMPL_TC_test_LifeCycleServer_1 'v'
#define TC_IMPL_TC_test_LifeCycleServer_2 'e'
#define TC_IMPL_TC_test_LifeCycleServer_3 'r'
#define TC_IMPL_TC_test_LifeCycleServer_4 'y'
#define TC_IMPL_TC_test_LifeCycleServer_5 't'
#define TC_IMPL_TC_test_LifeCycleServer_6 'h'
#define TC_IMPL_TC_test_LifeCycleServer_7 'i'
#define TC_IMPL_TC_test_LifeCycleServer_8 'n'
#define TC_IMPL_TC_test_LifeCycleServer_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_LifeCycleServer_struct;
#define TC_test_LifeCycleServer ((CORBA_TypeCode)&TC_test_LifeCycleServer_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_TestFactory) && !defined(_test_TestFactory_defined)
#define ORBIT_DECL_test_TestFactory 1
#define _test_TestFactory_defined 1
#define test_TestFactory__freekids CORBA_Object__freekids
typedef CORBA_Object test_TestFactory;
extern CORBA_unsigned_long test_TestFactory__classid;
#if !defined(TC_IMPL_TC_test_TestFactory_0)
#define TC_IMPL_TC_test_TestFactory_0 'e'
#define TC_IMPL_TC_test_TestFactory_1 'v'
#define TC_IMPL_TC_test_TestFactory_2 'e'
#define TC_IMPL_TC_test_TestFactory_3 'r'
#define TC_IMPL_TC_test_TestFactory_4 'y'
#define TC_IMPL_TC_test_TestFactory_5 't'
#define TC_IMPL_TC_test_TestFactory_6 'h'
#define TC_IMPL_TC_test_TestFactory_7 'i'
#define TC_IMPL_TC_test_TestFactory_8 'n'
#define TC_IMPL_TC_test_TestFactory_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_TestFactory_struct;
#define TC_test_TestFactory ((CORBA_TypeCode)&TC_test_TestFactory_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_LifeCycleServer) && !defined(_test_LifeCycleServer_defined)
#define ORBIT_DECL_test_LifeCycleServer 1
#define _test_LifeCycleServer_defined 1
#define test_LifeCycleServer__freekids CORBA_Object__freekids
typedef CORBA_Object test_LifeCycleServer;
extern CORBA_unsigned_long test_LifeCycleServer__classid;
#if !defined(TC_IMPL_TC_test_LifeCycleServer_0)
#define TC_IMPL_TC_test_LifeCycleServer_0 'e'
#define TC_IMPL_TC_test_LifeCycleServer_1 'v'
#define TC_IMPL_TC_test_LifeCycleServer_2 'e'
#define TC_IMPL_TC_test_LifeCycleServer_3 'r'
#define TC_IMPL_TC_test_LifeCycleServer_4 'y'
#define TC_IMPL_TC_test_LifeCycleServer_5 't'
#define TC_IMPL_TC_test_LifeCycleServer_6 'h'
#define TC_IMPL_TC_test_LifeCycleServer_7 'i'
#define TC_IMPL_TC_test_LifeCycleServer_8 'n'
#define TC_IMPL_TC_test_LifeCycleServer_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_LifeCycleServer_struct;
#define TC_test_LifeCycleServer ((CORBA_TypeCode)&TC_test_LifeCycleServer_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_DeadReferenceObj) && !defined(_test_DeadReferenceObj_defined)
#define ORBIT_DECL_test_DeadReferenceObj 1
#define _test_DeadReferenceObj_defined 1
#define test_DeadReferenceObj__freekids CORBA_Object__freekids
typedef CORBA_Object test_DeadReferenceObj;
extern CORBA_unsigned_long test_DeadReferenceObj__classid;
#if !defined(TC_IMPL_TC_test_DeadReferenceObj_0)
#define TC_IMPL_TC_test_DeadReferenceObj_0 'e'
#define TC_IMPL_TC_test_DeadReferenceObj_1 'v'
#define TC_IMPL_TC_test_DeadReferenceObj_2 'e'
#define TC_IMPL_TC_test_DeadReferenceObj_3 'r'
#define TC_IMPL_TC_test_DeadReferenceObj_4 'y'
#define TC_IMPL_TC_test_DeadReferenceObj_5 't'
#define TC_IMPL_TC_test_DeadReferenceObj_6 'h'
#define TC_IMPL_TC_test_DeadReferenceObj_7 'i'
#define TC_IMPL_TC_test_DeadReferenceObj_8 'n'
#define TC_IMPL_TC_test_DeadReferenceObj_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_DeadReferenceObj_struct;
#define TC_test_DeadReferenceObj ((CORBA_TypeCode)&TC_test_DeadReferenceObj_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_TransientObj) && !defined(_test_TransientObj_defined)
#define ORBIT_DECL_test_TransientObj 1
#define _test_TransientObj_defined 1
#define test_TransientObj__freekids CORBA_Object__freekids
typedef CORBA_Object test_TransientObj;
extern CORBA_unsigned_long test_TransientObj__classid;
#if !defined(TC_IMPL_TC_test_TransientObj_0)
#define TC_IMPL_TC_test_TransientObj_0 'e'
#define TC_IMPL_TC_test_TransientObj_1 'v'
#define TC_IMPL_TC_test_TransientObj_2 'e'
#define TC_IMPL_TC_test_TransientObj_3 'r'
#define TC_IMPL_TC_test_TransientObj_4 'y'
#define TC_IMPL_TC_test_TransientObj_5 't'
#define TC_IMPL_TC_test_TransientObj_6 'h'
#define TC_IMPL_TC_test_TransientObj_7 'i'
#define TC_IMPL_TC_test_TransientObj_8 'n'
#define TC_IMPL_TC_test_TransientObj_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_TransientObj_struct;
#define TC_test_TransientObj ((CORBA_TypeCode)&TC_test_TransientObj_struct)
#endif
#endif
#if !defined(_test_FixedLengthStruct_defined)
#define _test_FixedLengthStruct_defined 1
typedef struct test_FixedLengthStruct_type test_FixedLengthStruct;
struct test_FixedLengthStruct_type {
CORBA_short a;
};

#if !defined(TC_IMPL_TC_test_FixedLengthStruct_0)
#define TC_IMPL_TC_test_FixedLengthStruct_0 'e'
#define TC_IMPL_TC_test_FixedLengthStruct_1 'v'
#define TC_IMPL_TC_test_FixedLengthStruct_2 'e'
#define TC_IMPL_TC_test_FixedLengthStruct_3 'r'
#define TC_IMPL_TC_test_FixedLengthStruct_4 'y'
#define TC_IMPL_TC_test_FixedLengthStruct_5 't'
#define TC_IMPL_TC_test_FixedLengthStruct_6 'h'
#define TC_IMPL_TC_test_FixedLengthStruct_7 'i'
#define TC_IMPL_TC_test_FixedLengthStruct_8 'n'
#define TC_IMPL_TC_test_FixedLengthStruct_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_FixedLengthStruct_struct;
#define TC_test_FixedLengthStruct ((CORBA_TypeCode)&TC_test_FixedLengthStruct_struct)
#endif
#define test_FixedLengthStruct__alloc() ((test_FixedLengthStruct *)ORBit_small_alloc (TC_test_FixedLengthStruct))
#define test_FixedLengthStruct__freekids(m,d) ORBit_small_freekids (TC_test_FixedLengthStruct,(m),(d))
#endif
#if !defined(_test_DummyStruct_defined)
#define _test_DummyStruct_defined 1
typedef test_FixedLengthStruct test_DummyStruct;
#define test_DummyStruct_marshal(x,y,z) test_FixedLengthStruct_marshal((x),(y),(z))
#define test_DummyStruct_demarshal(x,y,z,i) test_FixedLengthStruct_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_test_DummyStruct_0)
#define TC_IMPL_TC_test_DummyStruct_0 'e'
#define TC_IMPL_TC_test_DummyStruct_1 'v'
#define TC_IMPL_TC_test_DummyStruct_2 'e'
#define TC_IMPL_TC_test_DummyStruct_3 'r'
#define TC_IMPL_TC_test_DummyStruct_4 'y'
#define TC_IMPL_TC_test_DummyStruct_5 't'
#define TC_IMPL_TC_test_DummyStruct_6 'h'
#define TC_IMPL_TC_test_DummyStruct_7 'i'
#define TC_IMPL_TC_test_DummyStruct_8 'n'
#define TC_IMPL_TC_test_DummyStruct_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_DummyStruct_struct;
#define TC_test_DummyStruct ((CORBA_TypeCode)&TC_test_DummyStruct_struct)
#endif
#define test_DummyStruct__alloc() ((test_DummyStruct *)ORBit_small_alloc (TC_test_FixedLengthStruct))
#define test_DummyStruct__freekids(m,d) ORBit_small_freekids (TC_test_FixedLengthStruct,(m),(d))
#endif
#if !defined(_test_VariableLengthStruct_defined)
#define _test_VariableLengthStruct_defined 1
typedef struct test_VariableLengthStruct_type test_VariableLengthStruct;
struct test_VariableLengthStruct_type {
CORBA_string a;
};

#if !defined(TC_IMPL_TC_test_VariableLengthStruct_0)
#define TC_IMPL_TC_test_VariableLengthStruct_0 'e'
#define TC_IMPL_TC_test_VariableLengthStruct_1 'v'
#define TC_IMPL_TC_test_VariableLengthStruct_2 'e'
#define TC_IMPL_TC_test_VariableLengthStruct_3 'r'
#define TC_IMPL_TC_test_VariableLengthStruct_4 'y'
#define TC_IMPL_TC_test_VariableLengthStruct_5 't'
#define TC_IMPL_TC_test_VariableLengthStruct_6 'h'
#define TC_IMPL_TC_test_VariableLengthStruct_7 'i'
#define TC_IMPL_TC_test_VariableLengthStruct_8 'n'
#define TC_IMPL_TC_test_VariableLengthStruct_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_VariableLengthStruct_struct;
#define TC_test_VariableLengthStruct ((CORBA_TypeCode)&TC_test_VariableLengthStruct_struct)
#endif
#define test_VariableLengthStruct__alloc() ((test_VariableLengthStruct *)ORBit_small_alloc (TC_test_VariableLengthStruct))
#define test_VariableLengthStruct__freekids(m,d) ORBit_small_freekids (TC_test_VariableLengthStruct,(m),(d))
#endif
#if !defined(_test_StructAny_defined)
#define _test_StructAny_defined 1
typedef struct test_StructAny_type test_StructAny;
struct test_StructAny_type {
CORBA_string a;
CORBA_any b;
};

#if !defined(TC_IMPL_TC_test_StructAny_0)
#define TC_IMPL_TC_test_StructAny_0 'e'
#define TC_IMPL_TC_test_StructAny_1 'v'
#define TC_IMPL_TC_test_StructAny_2 'e'
#define TC_IMPL_TC_test_StructAny_3 'r'
#define TC_IMPL_TC_test_StructAny_4 'y'
#define TC_IMPL_TC_test_StructAny_5 't'
#define TC_IMPL_TC_test_StructAny_6 'h'
#define TC_IMPL_TC_test_StructAny_7 'i'
#define TC_IMPL_TC_test_StructAny_8 'n'
#define TC_IMPL_TC_test_StructAny_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_StructAny_struct;
#define TC_test_StructAny ((CORBA_TypeCode)&TC_test_StructAny_struct)
#endif
#define test_StructAny__alloc() ((test_StructAny *)ORBit_small_alloc (TC_test_StructAny))
#define test_StructAny__freekids(m,d) ORBit_small_freekids (TC_test_StructAny,(m),(d))
#endif
#if !defined(_test_CompoundStruct_defined)
#define _test_CompoundStruct_defined 1
typedef struct test_CompoundStruct_type test_CompoundStruct;
struct test_CompoundStruct_type {
test_VariableLengthStruct a;
};

#if !defined(TC_IMPL_TC_test_CompoundStruct_0)
#define TC_IMPL_TC_test_CompoundStruct_0 'e'
#define TC_IMPL_TC_test_CompoundStruct_1 'v'
#define TC_IMPL_TC_test_CompoundStruct_2 'e'
#define TC_IMPL_TC_test_CompoundStruct_3 'r'
#define TC_IMPL_TC_test_CompoundStruct_4 'y'
#define TC_IMPL_TC_test_CompoundStruct_5 't'
#define TC_IMPL_TC_test_CompoundStruct_6 'h'
#define TC_IMPL_TC_test_CompoundStruct_7 'i'
#define TC_IMPL_TC_test_CompoundStruct_8 'n'
#define TC_IMPL_TC_test_CompoundStruct_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_CompoundStruct_struct;
#define TC_test_CompoundStruct ((CORBA_TypeCode)&TC_test_CompoundStruct_struct)
#endif
#define test_CompoundStruct__alloc() ((test_CompoundStruct *)ORBit_small_alloc (TC_test_CompoundStruct))
#define test_CompoundStruct__freekids(m,d) ORBit_small_freekids (TC_test_CompoundStruct,(m),(d))
#endif
#if !defined(_test_ObjectStruct_defined)
#define _test_ObjectStruct_defined 1
typedef struct test_ObjectStruct_type test_ObjectStruct;
struct test_ObjectStruct_type {
test_DerivedServer serv;
};

#if !defined(TC_IMPL_TC_test_ObjectStruct_0)
#define TC_IMPL_TC_test_ObjectStruct_0 'e'
#define TC_IMPL_TC_test_ObjectStruct_1 'v'
#define TC_IMPL_TC_test_ObjectStruct_2 'e'
#define TC_IMPL_TC_test_ObjectStruct_3 'r'
#define TC_IMPL_TC_test_ObjectStruct_4 'y'
#define TC_IMPL_TC_test_ObjectStruct_5 't'
#define TC_IMPL_TC_test_ObjectStruct_6 'h'
#define TC_IMPL_TC_test_ObjectStruct_7 'i'
#define TC_IMPL_TC_test_ObjectStruct_8 'n'
#define TC_IMPL_TC_test_ObjectStruct_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_ObjectStruct_struct;
#define TC_test_ObjectStruct ((CORBA_TypeCode)&TC_test_ObjectStruct_struct)
#endif
#define test_ObjectStruct__alloc() ((test_ObjectStruct *)ORBit_small_alloc (TC_test_ObjectStruct))
#define test_ObjectStruct__freekids(m,d) ORBit_small_freekids (TC_test_ObjectStruct,(m),(d))
#endif
#if !defined(_test_AlignHoleInnerStruct_defined)
#define _test_AlignHoleInnerStruct_defined 1
typedef struct test_AlignHoleInnerStruct_type test_AlignHoleInnerStruct;
struct test_AlignHoleInnerStruct_type {
CORBA_double a;
CORBA_octet b;
};

#if !defined(TC_IMPL_TC_test_AlignHoleInnerStruct_0)
#define TC_IMPL_TC_test_AlignHoleInnerStruct_0 'e'
#define TC_IMPL_TC_test_AlignHoleInnerStruct_1 'v'
#define TC_IMPL_TC_test_AlignHoleInnerStruct_2 'e'
#define TC_IMPL_TC_test_AlignHoleInnerStruct_3 'r'
#define TC_IMPL_TC_test_AlignHoleInnerStruct_4 'y'
#define TC_IMPL_TC_test_AlignHoleInnerStruct_5 't'
#define TC_IMPL_TC_test_AlignHoleInnerStruct_6 'h'
#define TC_IMPL_TC_test_AlignHoleInnerStruct_7 'i'
#define TC_IMPL_TC_test_AlignHoleInnerStruct_8 'n'
#define TC_IMPL_TC_test_AlignHoleInnerStruct_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_AlignHoleInnerStruct_struct;
#define TC_test_AlignHoleInnerStruct ((CORBA_TypeCode)&TC_test_AlignHoleInnerStruct_struct)
#endif
#define test_AlignHoleInnerStruct__alloc() ((test_AlignHoleInnerStruct *)ORBit_small_alloc (TC_test_AlignHoleInnerStruct))
#define test_AlignHoleInnerStruct__freekids(m,d) ORBit_small_freekids (TC_test_AlignHoleInnerStruct,(m),(d))
#endif
#if !defined(_test_AlignHoleStruct_defined)
#define _test_AlignHoleStruct_defined 1
typedef struct test_AlignHoleStruct_type test_AlignHoleStruct;
struct test_AlignHoleStruct_type {
test_AlignHoleInnerStruct a;
CORBA_char b;
};

#if !defined(TC_IMPL_TC_test_AlignHoleStruct_0)
#define TC_IMPL_TC_test_AlignHoleStruct_0 'e'
#define TC_IMPL_TC_test_AlignHoleStruct_1 'v'
#define TC_IMPL_TC_test_AlignHoleStruct_2 'e'
#define TC_IMPL_TC_test_AlignHoleStruct_3 'r'
#define TC_IMPL_TC_test_AlignHoleStruct_4 'y'
#define TC_IMPL_TC_test_AlignHoleStruct_5 't'
#define TC_IMPL_TC_test_AlignHoleStruct_6 'h'
#define TC_IMPL_TC_test_AlignHoleStruct_7 'i'
#define TC_IMPL_TC_test_AlignHoleStruct_8 'n'
#define TC_IMPL_TC_test_AlignHoleStruct_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_AlignHoleStruct_struct;
#define TC_test_AlignHoleStruct ((CORBA_TypeCode)&TC_test_AlignHoleStruct_struct)
#endif
#define test_AlignHoleStruct__alloc() ((test_AlignHoleStruct *)ORBit_small_alloc (TC_test_AlignHoleStruct))
#define test_AlignHoleStruct__freekids(m,d) ORBit_small_freekids (TC_test_AlignHoleStruct,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_string)
#define ORBIT_DECL_CORBA_sequence_CORBA_string 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_0 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_1 'v'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_2 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_3 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_4 'y'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_5 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_6 'h'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_7 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_8 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_9 'g'
#if !defined(_CORBA_sequence_CORBA_string_defined)
#define _CORBA_sequence_CORBA_string_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_string* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_string;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_string_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_0 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_1 'v'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_2 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_3 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_4 'y'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_5 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_6 'h'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_7 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_8 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_string_struct;
#define TC_CORBA_sequence_CORBA_string ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_string_struct)
#endif
#define CORBA_sequence_CORBA_string__alloc() ((CORBA_sequence_CORBA_string *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define CORBA_sequence_CORBA_string__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(_test_StrSeq_defined)
#define _test_StrSeq_defined 1
typedef CORBA_sequence_CORBA_string test_StrSeq;
#define test_StrSeq_marshal(x,y,z) CORBA_sequence_CORBA_string_marshal((x),(y),(z))
#define test_StrSeq_demarshal(x,y,z,i) CORBA_sequence_CORBA_string_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_test_StrSeq_0)
#define TC_IMPL_TC_test_StrSeq_0 'e'
#define TC_IMPL_TC_test_StrSeq_1 'v'
#define TC_IMPL_TC_test_StrSeq_2 'e'
#define TC_IMPL_TC_test_StrSeq_3 'r'
#define TC_IMPL_TC_test_StrSeq_4 'y'
#define TC_IMPL_TC_test_StrSeq_5 't'
#define TC_IMPL_TC_test_StrSeq_6 'h'
#define TC_IMPL_TC_test_StrSeq_7 'i'
#define TC_IMPL_TC_test_StrSeq_8 'n'
#define TC_IMPL_TC_test_StrSeq_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_StrSeq_struct;
#define TC_test_StrSeq ((CORBA_TypeCode)&TC_test_StrSeq_struct)
#endif
#define test_StrSeq__alloc() ((test_StrSeq *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define test_StrSeq__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define test_StrSeq_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_string)
#define ORBIT_DECL_CORBA_sequence_CORBA_string 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_0 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_1 'v'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_2 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_3 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_4 'y'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_5 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_6 'h'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_7 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_8 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_9 'g'
#if !defined(_CORBA_sequence_CORBA_string_defined)
#define _CORBA_sequence_CORBA_string_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_string* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_string;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_string_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_0 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_1 'v'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_2 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_3 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_4 'y'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_5 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_6 'h'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_7 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_8 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_string_struct;
#define TC_CORBA_sequence_CORBA_string ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_string_struct)
#endif
#define CORBA_sequence_CORBA_string__alloc() ((CORBA_sequence_CORBA_string *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define CORBA_sequence_CORBA_string__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(_test_AnotherStrSeq_defined)
#define _test_AnotherStrSeq_defined 1
typedef CORBA_sequence_CORBA_string test_AnotherStrSeq;
#define test_AnotherStrSeq_marshal(x,y,z) CORBA_sequence_CORBA_string_marshal((x),(y),(z))
#define test_AnotherStrSeq_demarshal(x,y,z,i) CORBA_sequence_CORBA_string_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_test_AnotherStrSeq_0)
#define TC_IMPL_TC_test_AnotherStrSeq_0 'e'
#define TC_IMPL_TC_test_AnotherStrSeq_1 'v'
#define TC_IMPL_TC_test_AnotherStrSeq_2 'e'
#define TC_IMPL_TC_test_AnotherStrSeq_3 'r'
#define TC_IMPL_TC_test_AnotherStrSeq_4 'y'
#define TC_IMPL_TC_test_AnotherStrSeq_5 't'
#define TC_IMPL_TC_test_AnotherStrSeq_6 'h'
#define TC_IMPL_TC_test_AnotherStrSeq_7 'i'
#define TC_IMPL_TC_test_AnotherStrSeq_8 'n'
#define TC_IMPL_TC_test_AnotherStrSeq_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_AnotherStrSeq_struct;
#define TC_test_AnotherStrSeq ((CORBA_TypeCode)&TC_test_AnotherStrSeq_struct)
#endif
#define test_AnotherStrSeq__alloc() ((test_AnotherStrSeq *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define test_AnotherStrSeq__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define test_AnotherStrSeq_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_test_CompoundStruct)
#define ORBIT_DECL_CORBA_sequence_test_CompoundStruct 1
#define ORBIT_IMPL_CORBA_sequence_test_CompoundStruct_0 'e'
#define ORBIT_IMPL_CORBA_sequence_test_CompoundStruct_1 'v'
#define ORBIT_IMPL_CORBA_sequence_test_CompoundStruct_2 'e'
#define ORBIT_IMPL_CORBA_sequence_test_CompoundStruct_3 'r'
#define ORBIT_IMPL_CORBA_sequence_test_CompoundStruct_4 'y'
#define ORBIT_IMPL_CORBA_sequence_test_CompoundStruct_5 't'
#define ORBIT_IMPL_CORBA_sequence_test_CompoundStruct_6 'h'
#define ORBIT_IMPL_CORBA_sequence_test_CompoundStruct_7 'i'
#define ORBIT_IMPL_CORBA_sequence_test_CompoundStruct_8 'n'
#define ORBIT_IMPL_CORBA_sequence_test_CompoundStruct_9 'g'
#if !defined(_CORBA_sequence_test_CompoundStruct_defined)
#define _CORBA_sequence_test_CompoundStruct_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; test_CompoundStruct* _buffer; CORBA_boolean _release; } CORBA_sequence_test_CompoundStruct;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_test_CompoundStruct_0)
#define TC_IMPL_TC_CORBA_sequence_test_CompoundStruct_0 'e'
#define TC_IMPL_TC_CORBA_sequence_test_CompoundStruct_1 'v'
#define TC_IMPL_TC_CORBA_sequence_test_CompoundStruct_2 'e'
#define TC_IMPL_TC_CORBA_sequence_test_CompoundStruct_3 'r'
#define TC_IMPL_TC_CORBA_sequence_test_CompoundStruct_4 'y'
#define TC_IMPL_TC_CORBA_sequence_test_CompoundStruct_5 't'
#define TC_IMPL_TC_CORBA_sequence_test_CompoundStruct_6 'h'
#define TC_IMPL_TC_CORBA_sequence_test_CompoundStruct_7 'i'
#define TC_IMPL_TC_CORBA_sequence_test_CompoundStruct_8 'n'
#define TC_IMPL_TC_CORBA_sequence_test_CompoundStruct_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_test_CompoundStruct_struct;
#define TC_CORBA_sequence_test_CompoundStruct ((CORBA_TypeCode)&TC_CORBA_sequence_test_CompoundStruct_struct)
#endif
#define CORBA_sequence_test_CompoundStruct__alloc() ((CORBA_sequence_test_CompoundStruct *)ORBit_small_alloc (TC_CORBA_sequence_test_CompoundStruct))
#define CORBA_sequence_test_CompoundStruct__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_test_CompoundStruct,(m),(d))
#define CORBA_sequence_test_CompoundStruct_allocbuf(l) ((test_CompoundStruct*)ORBit_small_allocbuf (TC_CORBA_sequence_test_CompoundStruct, (l)))
#define CORBA_sequence_test_CompoundStruct_allocbuf(l) ((test_CompoundStruct*)ORBit_small_allocbuf (TC_CORBA_sequence_test_CompoundStruct, (l)))
#endif
#if !defined(_test_BoundedStructSeq_defined)
#define _test_BoundedStructSeq_defined 1
typedef CORBA_sequence_test_CompoundStruct test_BoundedStructSeq;
#define test_BoundedStructSeq_marshal(x,y,z) CORBA_sequence_test_CompoundStruct_marshal((x),(y),(z))
#define test_BoundedStructSeq_demarshal(x,y,z,i) CORBA_sequence_test_CompoundStruct_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_test_BoundedStructSeq_0)
#define TC_IMPL_TC_test_BoundedStructSeq_0 'e'
#define TC_IMPL_TC_test_BoundedStructSeq_1 'v'
#define TC_IMPL_TC_test_BoundedStructSeq_2 'e'
#define TC_IMPL_TC_test_BoundedStructSeq_3 'r'
#define TC_IMPL_TC_test_BoundedStructSeq_4 'y'
#define TC_IMPL_TC_test_BoundedStructSeq_5 't'
#define TC_IMPL_TC_test_BoundedStructSeq_6 'h'
#define TC_IMPL_TC_test_BoundedStructSeq_7 'i'
#define TC_IMPL_TC_test_BoundedStructSeq_8 'n'
#define TC_IMPL_TC_test_BoundedStructSeq_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_BoundedStructSeq_struct;
#define TC_test_BoundedStructSeq ((CORBA_TypeCode)&TC_test_BoundedStructSeq_struct)
#endif
#define test_BoundedStructSeq__alloc() ((test_BoundedStructSeq *)ORBit_small_alloc (TC_CORBA_sequence_test_CompoundStruct))
#define test_BoundedStructSeq__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_test_CompoundStruct,(m),(d))
#define test_BoundedStructSeq_allocbuf(l) ((test_CompoundStruct*)ORBit_small_allocbuf (TC_CORBA_sequence_test_CompoundStruct, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_long)
#define ORBIT_DECL_CORBA_sequence_CORBA_long 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_0 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_1 'v'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_2 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_3 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_4 'y'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_5 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_6 'h'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_7 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_8 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_9 'g'
#if !defined(_CORBA_sequence_CORBA_long_defined)
#define _CORBA_sequence_CORBA_long_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_long* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_long;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_long_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_0 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_1 'v'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_2 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_3 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_4 'y'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_5 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_6 'h'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_7 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_8 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_long_struct;
#define TC_CORBA_sequence_CORBA_long ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_long_struct)
#endif
#define CORBA_sequence_CORBA_long__alloc() ((CORBA_sequence_CORBA_long *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_long))
#define CORBA_sequence_CORBA_long__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_long,(m),(d))
#define CORBA_sequence_CORBA_long_allocbuf(l) ((CORBA_long*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_long, (l)))
#define CORBA_sequence_CORBA_long_allocbuf(l) ((CORBA_long*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_long, (l)))
#endif
#if !defined(_test_BoundedLongSeq_defined)
#define _test_BoundedLongSeq_defined 1
typedef CORBA_sequence_CORBA_long test_BoundedLongSeq;
#define test_BoundedLongSeq_marshal(x,y,z) CORBA_sequence_CORBA_long_marshal((x),(y),(z))
#define test_BoundedLongSeq_demarshal(x,y,z,i) CORBA_sequence_CORBA_long_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_test_BoundedLongSeq_0)
#define TC_IMPL_TC_test_BoundedLongSeq_0 'e'
#define TC_IMPL_TC_test_BoundedLongSeq_1 'v'
#define TC_IMPL_TC_test_BoundedLongSeq_2 'e'
#define TC_IMPL_TC_test_BoundedLongSeq_3 'r'
#define TC_IMPL_TC_test_BoundedLongSeq_4 'y'
#define TC_IMPL_TC_test_BoundedLongSeq_5 't'
#define TC_IMPL_TC_test_BoundedLongSeq_6 'h'
#define TC_IMPL_TC_test_BoundedLongSeq_7 'i'
#define TC_IMPL_TC_test_BoundedLongSeq_8 'n'
#define TC_IMPL_TC_test_BoundedLongSeq_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_BoundedLongSeq_struct;
#define TC_test_BoundedLongSeq ((CORBA_TypeCode)&TC_test_BoundedLongSeq_struct)
#endif
#define test_BoundedLongSeq__alloc() ((test_BoundedLongSeq *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_long))
#define test_BoundedLongSeq__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_long,(m),(d))
#define test_BoundedLongSeq_allocbuf(l) ((CORBA_long*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_long, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_long)
#define ORBIT_DECL_CORBA_sequence_CORBA_long 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_0 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_1 'v'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_2 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_3 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_4 'y'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_5 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_6 'h'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_7 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_8 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_9 'g'
#if !defined(_CORBA_sequence_CORBA_long_defined)
#define _CORBA_sequence_CORBA_long_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_long* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_long;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_long_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_0 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_1 'v'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_2 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_3 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_4 'y'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_5 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_6 'h'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_7 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_8 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_long_struct;
#define TC_CORBA_sequence_CORBA_long ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_long_struct)
#endif
#define CORBA_sequence_CORBA_long__alloc() ((CORBA_sequence_CORBA_long *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_long))
#define CORBA_sequence_CORBA_long__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_long,(m),(d))
#define CORBA_sequence_CORBA_long_allocbuf(l) ((CORBA_long*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_long, (l)))
#define CORBA_sequence_CORBA_long_allocbuf(l) ((CORBA_long*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_long, (l)))
#endif
#if !defined(_test_LongSeq_defined)
#define _test_LongSeq_defined 1
typedef CORBA_sequence_CORBA_long test_LongSeq;
#define test_LongSeq_marshal(x,y,z) CORBA_sequence_CORBA_long_marshal((x),(y),(z))
#define test_LongSeq_demarshal(x,y,z,i) CORBA_sequence_CORBA_long_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_test_LongSeq_0)
#define TC_IMPL_TC_test_LongSeq_0 'e'
#define TC_IMPL_TC_test_LongSeq_1 'v'
#define TC_IMPL_TC_test_LongSeq_2 'e'
#define TC_IMPL_TC_test_LongSeq_3 'r'
#define TC_IMPL_TC_test_LongSeq_4 'y'
#define TC_IMPL_TC_test_LongSeq_5 't'
#define TC_IMPL_TC_test_LongSeq_6 'h'
#define TC_IMPL_TC_test_LongSeq_7 'i'
#define TC_IMPL_TC_test_LongSeq_8 'n'
#define TC_IMPL_TC_test_LongSeq_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_LongSeq_struct;
#define TC_test_LongSeq ((CORBA_TypeCode)&TC_test_LongSeq_struct)
#endif
#define test_LongSeq__alloc() ((test_LongSeq *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_long))
#define test_LongSeq__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_long,(m),(d))
#define test_LongSeq_allocbuf(l) ((CORBA_long*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_long, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_string)
#define ORBIT_DECL_CORBA_sequence_CORBA_string 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_0 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_1 'v'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_2 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_3 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_4 'y'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_5 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_6 'h'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_7 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_8 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_9 'g'
#if !defined(_CORBA_sequence_CORBA_string_defined)
#define _CORBA_sequence_CORBA_string_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_string* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_string;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_string_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_0 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_1 'v'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_2 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_3 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_4 'y'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_5 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_6 'h'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_7 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_8 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_string_struct;
#define TC_CORBA_sequence_CORBA_string ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_string_struct)
#endif
#define CORBA_sequence_CORBA_string__alloc() ((CORBA_sequence_CORBA_string *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define CORBA_sequence_CORBA_string__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_sequence_CORBA_string)
#define ORBIT_DECL_CORBA_sequence_CORBA_sequence_CORBA_string 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_sequence_CORBA_string_0 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_sequence_CORBA_string_1 'v'
#define ORBIT_IMPL_CORBA_sequence_CORBA_sequence_CORBA_string_2 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_sequence_CORBA_string_3 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_sequence_CORBA_string_4 'y'
#define ORBIT_IMPL_CORBA_sequence_CORBA_sequence_CORBA_string_5 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_sequence_CORBA_string_6 'h'
#define ORBIT_IMPL_CORBA_sequence_CORBA_sequence_CORBA_string_7 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_sequence_CORBA_string_8 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_sequence_CORBA_string_9 'g'
#if !defined(_CORBA_sequence_CORBA_sequence_CORBA_string_defined)
#define _CORBA_sequence_CORBA_sequence_CORBA_string_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_sequence_CORBA_string* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_sequence_CORBA_string;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_sequence_CORBA_string_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_sequence_CORBA_string_0 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_sequence_CORBA_string_1 'v'
#define TC_IMPL_TC_CORBA_sequence_CORBA_sequence_CORBA_string_2 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_sequence_CORBA_string_3 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_sequence_CORBA_string_4 'y'
#define TC_IMPL_TC_CORBA_sequence_CORBA_sequence_CORBA_string_5 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_sequence_CORBA_string_6 'h'
#define TC_IMPL_TC_CORBA_sequence_CORBA_sequence_CORBA_string_7 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_sequence_CORBA_string_8 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_sequence_CORBA_string_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_sequence_CORBA_string_struct;
#define TC_CORBA_sequence_CORBA_sequence_CORBA_string ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_sequence_CORBA_string_struct)
#endif
#define CORBA_sequence_CORBA_sequence_CORBA_string__alloc() ((CORBA_sequence_CORBA_sequence_CORBA_string *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_sequence_CORBA_string))
#define CORBA_sequence_CORBA_sequence_CORBA_string__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_sequence_CORBA_string,(m),(d))
#define CORBA_sequence_CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_sequence_CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_sequence_CORBA_string, (l)))
#define CORBA_sequence_CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_sequence_CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_test_StrSeq)
#define ORBIT_DECL_CORBA_sequence_test_StrSeq 1
#define ORBIT_IMPL_CORBA_sequence_test_StrSeq_0 'e'
#define ORBIT_IMPL_CORBA_sequence_test_StrSeq_1 'v'
#define ORBIT_IMPL_CORBA_sequence_test_StrSeq_2 'e'
#define ORBIT_IMPL_CORBA_sequence_test_StrSeq_3 'r'
#define ORBIT_IMPL_CORBA_sequence_test_StrSeq_4 'y'
#define ORBIT_IMPL_CORBA_sequence_test_StrSeq_5 't'
#define ORBIT_IMPL_CORBA_sequence_test_StrSeq_6 'h'
#define ORBIT_IMPL_CORBA_sequence_test_StrSeq_7 'i'
#define ORBIT_IMPL_CORBA_sequence_test_StrSeq_8 'n'
#define ORBIT_IMPL_CORBA_sequence_test_StrSeq_9 'g'
#if !defined(_CORBA_sequence_test_StrSeq_defined)
#define _CORBA_sequence_test_StrSeq_defined 1
typedef CORBA_sequence_CORBA_sequence_CORBA_string CORBA_sequence_test_StrSeq;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_test_StrSeq_0)
#define TC_IMPL_TC_CORBA_sequence_test_StrSeq_0 'e'
#define TC_IMPL_TC_CORBA_sequence_test_StrSeq_1 'v'
#define TC_IMPL_TC_CORBA_sequence_test_StrSeq_2 'e'
#define TC_IMPL_TC_CORBA_sequence_test_StrSeq_3 'r'
#define TC_IMPL_TC_CORBA_sequence_test_StrSeq_4 'y'
#define TC_IMPL_TC_CORBA_sequence_test_StrSeq_5 't'
#define TC_IMPL_TC_CORBA_sequence_test_StrSeq_6 'h'
#define TC_IMPL_TC_CORBA_sequence_test_StrSeq_7 'i'
#define TC_IMPL_TC_CORBA_sequence_test_StrSeq_8 'n'
#define TC_IMPL_TC_CORBA_sequence_test_StrSeq_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_test_StrSeq_struct;
#define TC_CORBA_sequence_test_StrSeq ((CORBA_TypeCode)&TC_CORBA_sequence_test_StrSeq_struct)
#endif
#define CORBA_sequence_test_StrSeq__alloc CORBA_sequence_CORBA_sequence_CORBA_string__alloc
#define CORBA_sequence_test_StrSeq__freekids CORBA_sequence_CORBA_sequence_CORBA_string__freekids
#define CORBA_sequence_test_StrSeq_allocbuf CORBA_sequence_CORBA_sequence_CORBA_string_allocbuf
#define CORBA_sequence_test_StrSeq_marshal(x,y,z) CORBA_sequence_CORBA_sequence_CORBA_string_marshal((x),(y),(z))
#define CORBA_sequence_test_StrSeq_demarshal(x,y,z,i) CORBA_sequence_CORBA_sequence_CORBA_string_demarshal((x),(y),(z),(i))
#endif
#if !defined(_test_StrSeqSeq_defined)
#define _test_StrSeqSeq_defined 1
typedef CORBA_sequence_test_StrSeq test_StrSeqSeq;
#define test_StrSeqSeq_marshal(x,y,z) CORBA_sequence_test_StrSeq_marshal((x),(y),(z))
#define test_StrSeqSeq_demarshal(x,y,z,i) CORBA_sequence_test_StrSeq_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_test_StrSeqSeq_0)
#define TC_IMPL_TC_test_StrSeqSeq_0 'e'
#define TC_IMPL_TC_test_StrSeqSeq_1 'v'
#define TC_IMPL_TC_test_StrSeqSeq_2 'e'
#define TC_IMPL_TC_test_StrSeqSeq_3 'r'
#define TC_IMPL_TC_test_StrSeqSeq_4 'y'
#define TC_IMPL_TC_test_StrSeqSeq_5 't'
#define TC_IMPL_TC_test_StrSeqSeq_6 'h'
#define TC_IMPL_TC_test_StrSeqSeq_7 'i'
#define TC_IMPL_TC_test_StrSeqSeq_8 'n'
#define TC_IMPL_TC_test_StrSeqSeq_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_StrSeqSeq_struct;
#define TC_test_StrSeqSeq ((CORBA_TypeCode)&TC_test_StrSeqSeq_struct)
#endif
#define test_StrSeqSeq__alloc() ((test_StrSeqSeq *)ORBit_small_alloc (TC_CORBA_sequence_test_StrSeq))
#define test_StrSeqSeq__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_test_StrSeq,(m),(d))
#define test_StrSeqSeq_allocbuf(l) ((test_StrSeq*)ORBit_small_allocbuf (TC_CORBA_sequence_test_StrSeq, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_any)
#define ORBIT_DECL_CORBA_sequence_CORBA_any 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_0 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_1 'v'
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_2 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_3 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_4 'y'
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_5 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_6 'h'
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_7 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_8 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_9 'g'
#if !defined(_CORBA_sequence_CORBA_any_defined)
#define _CORBA_sequence_CORBA_any_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_any* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_any;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_any_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_0 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_1 'v'
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_2 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_3 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_4 'y'
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_5 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_6 'h'
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_7 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_8 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_any_struct;
#define TC_CORBA_sequence_CORBA_any ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_any_struct)
#endif
#define CORBA_sequence_CORBA_any__alloc() ((CORBA_sequence_CORBA_any *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_any))
#define CORBA_sequence_CORBA_any__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_any,(m),(d))
#define CORBA_sequence_CORBA_any_allocbuf(l) ((CORBA_any*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_any, (l)))
#define CORBA_sequence_CORBA_any_allocbuf(l) ((CORBA_any*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_any, (l)))
#endif
#if !defined(_test_AnySeq_defined)
#define _test_AnySeq_defined 1
typedef CORBA_sequence_CORBA_any test_AnySeq;
#define test_AnySeq_marshal(x,y,z) CORBA_sequence_CORBA_any_marshal((x),(y),(z))
#define test_AnySeq_demarshal(x,y,z,i) CORBA_sequence_CORBA_any_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_test_AnySeq_0)
#define TC_IMPL_TC_test_AnySeq_0 'e'
#define TC_IMPL_TC_test_AnySeq_1 'v'
#define TC_IMPL_TC_test_AnySeq_2 'e'
#define TC_IMPL_TC_test_AnySeq_3 'r'
#define TC_IMPL_TC_test_AnySeq_4 'y'
#define TC_IMPL_TC_test_AnySeq_5 't'
#define TC_IMPL_TC_test_AnySeq_6 'h'
#define TC_IMPL_TC_test_AnySeq_7 'i'
#define TC_IMPL_TC_test_AnySeq_8 'n'
#define TC_IMPL_TC_test_AnySeq_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_AnySeq_struct;
#define TC_test_AnySeq ((CORBA_TypeCode)&TC_test_AnySeq_struct)
#endif
#define test_AnySeq__alloc() ((test_AnySeq *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_any))
#define test_AnySeq__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_any,(m),(d))
#define test_AnySeq_allocbuf(l) ((CORBA_any*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_any, (l)))
#endif
#if !defined(_test_StructWithSequenceInIt_defined)
#define _test_StructWithSequenceInIt_defined 1
typedef struct test_StructWithSequenceInIt_type test_StructWithSequenceInIt;
struct test_StructWithSequenceInIt_type {
test_StrSeqSeq theSeq;
};

#if !defined(TC_IMPL_TC_test_StructWithSequenceInIt_0)
#define TC_IMPL_TC_test_StructWithSequenceInIt_0 'e'
#define TC_IMPL_TC_test_StructWithSequenceInIt_1 'v'
#define TC_IMPL_TC_test_StructWithSequenceInIt_2 'e'
#define TC_IMPL_TC_test_StructWithSequenceInIt_3 'r'
#define TC_IMPL_TC_test_StructWithSequenceInIt_4 'y'
#define TC_IMPL_TC_test_StructWithSequenceInIt_5 't'
#define TC_IMPL_TC_test_StructWithSequenceInIt_6 'h'
#define TC_IMPL_TC_test_StructWithSequenceInIt_7 'i'
#define TC_IMPL_TC_test_StructWithSequenceInIt_8 'n'
#define TC_IMPL_TC_test_StructWithSequenceInIt_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_StructWithSequenceInIt_struct;
#define TC_test_StructWithSequenceInIt ((CORBA_TypeCode)&TC_test_StructWithSequenceInIt_struct)
#endif
#define test_StructWithSequenceInIt__alloc() ((test_StructWithSequenceInIt *)ORBit_small_alloc (TC_test_StructWithSequenceInIt))
#define test_StructWithSequenceInIt__freekids(m,d) ORBit_small_freekids (TC_test_StructWithSequenceInIt,(m),(d))
#endif
#if !defined(ORBIT_DECL_test_SequenceServer) && !defined(_test_SequenceServer_defined)
#define ORBIT_DECL_test_SequenceServer 1
#define _test_SequenceServer_defined 1
#define test_SequenceServer__freekids CORBA_Object__freekids
typedef CORBA_Object test_SequenceServer;
extern CORBA_unsigned_long test_SequenceServer__classid;
#if !defined(TC_IMPL_TC_test_SequenceServer_0)
#define TC_IMPL_TC_test_SequenceServer_0 'e'
#define TC_IMPL_TC_test_SequenceServer_1 'v'
#define TC_IMPL_TC_test_SequenceServer_2 'e'
#define TC_IMPL_TC_test_SequenceServer_3 'r'
#define TC_IMPL_TC_test_SequenceServer_4 'y'
#define TC_IMPL_TC_test_SequenceServer_5 't'
#define TC_IMPL_TC_test_SequenceServer_6 'h'
#define TC_IMPL_TC_test_SequenceServer_7 'i'
#define TC_IMPL_TC_test_SequenceServer_8 'n'
#define TC_IMPL_TC_test_SequenceServer_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_SequenceServer_struct;
#define TC_test_SequenceServer ((CORBA_TypeCode)&TC_test_SequenceServer_struct)
#endif
#endif
#if !defined(_test_AnEnum_defined)
#define _test_AnEnum_defined 1
typedef enum {
  test_ENUM_IN,
  test_ENUM_INOUT_IN,
  test_ENUM_INOUT_OUT,
  test_ENUM_OUT,
  test_ENUM_RETN
} test_AnEnum;
#if !defined(TC_IMPL_TC_test_AnEnum_0)
#define TC_IMPL_TC_test_AnEnum_0 'e'
#define TC_IMPL_TC_test_AnEnum_1 'v'
#define TC_IMPL_TC_test_AnEnum_2 'e'
#define TC_IMPL_TC_test_AnEnum_3 'r'
#define TC_IMPL_TC_test_AnEnum_4 'y'
#define TC_IMPL_TC_test_AnEnum_5 't'
#define TC_IMPL_TC_test_AnEnum_6 'h'
#define TC_IMPL_TC_test_AnEnum_7 'i'
#define TC_IMPL_TC_test_AnEnum_8 'n'
#define TC_IMPL_TC_test_AnEnum_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_AnEnum_struct;
#define TC_test_AnEnum ((CORBA_TypeCode)&TC_test_AnEnum_struct)
#endif
#endif
#if !defined(_test_DummyEnum_defined)
#define _test_DummyEnum_defined 1
typedef test_AnEnum test_DummyEnum;
#define test_DummyEnum_marshal(x,y,z) test_AnEnum_marshal((x),(y),(z))
#define test_DummyEnum_demarshal(x,y,z,i) test_AnEnum_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_test_DummyEnum_0)
#define TC_IMPL_TC_test_DummyEnum_0 'e'
#define TC_IMPL_TC_test_DummyEnum_1 'v'
#define TC_IMPL_TC_test_DummyEnum_2 'e'
#define TC_IMPL_TC_test_DummyEnum_3 'r'
#define TC_IMPL_TC_test_DummyEnum_4 'y'
#define TC_IMPL_TC_test_DummyEnum_5 't'
#define TC_IMPL_TC_test_DummyEnum_6 'h'
#define TC_IMPL_TC_test_DummyEnum_7 'i'
#define TC_IMPL_TC_test_DummyEnum_8 'n'
#define TC_IMPL_TC_test_DummyEnum_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_DummyEnum_struct;
#define TC_test_DummyEnum ((CORBA_TypeCode)&TC_test_DummyEnum_struct)
#endif
#define test_DummyEnum__alloc() ((test_DummyEnum *)ORBit_small_alloc (TC_test_AnEnum))
#define test_DummyEnum__freekids(m,d) ORBit_small_freekids (TC_test_AnEnum,(m),(d))
#endif
#undef ex_test_SimpleException
#define ex_test_SimpleException "IDL:orbit/test/SimpleException:1.0"
#if !defined(_test_SimpleException_defined)
#define _test_SimpleException_defined 1
typedef struct test_SimpleException_type test_SimpleException;
struct test_SimpleException_type {
int dummy;
};

#if !defined(TC_IMPL_TC_test_SimpleException_0)
#define TC_IMPL_TC_test_SimpleException_0 'e'
#define TC_IMPL_TC_test_SimpleException_1 'v'
#define TC_IMPL_TC_test_SimpleException_2 'e'
#define TC_IMPL_TC_test_SimpleException_3 'r'
#define TC_IMPL_TC_test_SimpleException_4 'y'
#define TC_IMPL_TC_test_SimpleException_5 't'
#define TC_IMPL_TC_test_SimpleException_6 'h'
#define TC_IMPL_TC_test_SimpleException_7 'i'
#define TC_IMPL_TC_test_SimpleException_8 'n'
#define TC_IMPL_TC_test_SimpleException_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_SimpleException_struct;
#define TC_test_SimpleException ((CORBA_TypeCode)&TC_test_SimpleException_struct)
#endif
#define test_SimpleException__alloc() ((test_SimpleException *)ORBit_small_alloc (TC_test_SimpleException))
#define test_SimpleException__freekids(m,d) ORBit_small_freekids (TC_test_SimpleException,(m),(d))
#endif
#undef ex_test_TestException
#define ex_test_TestException "IDL:orbit/test/TestException:1.0"
#if !defined(_test_TestException_defined)
#define _test_TestException_defined 1
typedef struct test_TestException_type test_TestException;
struct test_TestException_type {
CORBA_string reason;
CORBA_long number;
test_LongSeq aseq;
test_TestFactory factory;
};

#if !defined(TC_IMPL_TC_test_TestException_0)
#define TC_IMPL_TC_test_TestException_0 'e'
#define TC_IMPL_TC_test_TestException_1 'v'
#define TC_IMPL_TC_test_TestException_2 'e'
#define TC_IMPL_TC_test_TestException_3 'r'
#define TC_IMPL_TC_test_TestException_4 'y'
#define TC_IMPL_TC_test_TestException_5 't'
#define TC_IMPL_TC_test_TestException_6 'h'
#define TC_IMPL_TC_test_TestException_7 'i'
#define TC_IMPL_TC_test_TestException_8 'n'
#define TC_IMPL_TC_test_TestException_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_TestException_struct;
#define TC_test_TestException ((CORBA_TypeCode)&TC_test_TestException_struct)
#endif
#define test_TestException__alloc() ((test_TestException *)ORBit_small_alloc (TC_test_TestException))
#define test_TestException__freekids(m,d) ORBit_small_freekids (TC_test_TestException,(m),(d))
#endif
#ifndef test_SequenceLen
#define test_SequenceLen 4
#endif /* !test_SequenceLen */

#if !defined(_test_OctetArray_defined)
#define _test_OctetArray_defined 1
typedef CORBA_octet test_OctetArray[4];
typedef CORBA_octet test_OctetArray_slice;
#if !defined(TC_IMPL_TC_test_OctetArray_0)
#define TC_IMPL_TC_test_OctetArray_0 'e'
#define TC_IMPL_TC_test_OctetArray_1 'v'
#define TC_IMPL_TC_test_OctetArray_2 'e'
#define TC_IMPL_TC_test_OctetArray_3 'r'
#define TC_IMPL_TC_test_OctetArray_4 'y'
#define TC_IMPL_TC_test_OctetArray_5 't'
#define TC_IMPL_TC_test_OctetArray_6 'h'
#define TC_IMPL_TC_test_OctetArray_7 'i'
#define TC_IMPL_TC_test_OctetArray_8 'n'
#define TC_IMPL_TC_test_OctetArray_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_OctetArray_struct;
#define TC_test_OctetArray ((CORBA_TypeCode)&TC_test_OctetArray_struct)
#endif
#define test_OctetArray__alloc() ((test_OctetArray_slice *)ORBit_small_alloc (TC_test_OctetArray))
#define test_OctetArray__freekids(m,d) ORBit_small_freekids (TC_test_OctetArray,(m),(d))
#endif
#if !defined(_test_LongArray_defined)
#define _test_LongArray_defined 1
typedef CORBA_long test_LongArray[4];
typedef CORBA_long test_LongArray_slice;
#if !defined(TC_IMPL_TC_test_LongArray_0)
#define TC_IMPL_TC_test_LongArray_0 'e'
#define TC_IMPL_TC_test_LongArray_1 'v'
#define TC_IMPL_TC_test_LongArray_2 'e'
#define TC_IMPL_TC_test_LongArray_3 'r'
#define TC_IMPL_TC_test_LongArray_4 'y'
#define TC_IMPL_TC_test_LongArray_5 't'
#define TC_IMPL_TC_test_LongArray_6 'h'
#define TC_IMPL_TC_test_LongArray_7 'i'
#define TC_IMPL_TC_test_LongArray_8 'n'
#define TC_IMPL_TC_test_LongArray_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_LongArray_struct;
#define TC_test_LongArray ((CORBA_TypeCode)&TC_test_LongArray_struct)
#endif
#define test_LongArray__alloc() ((test_LongArray_slice *)ORBit_small_alloc (TC_test_LongArray))
#define test_LongArray__freekids(m,d) ORBit_small_freekids (TC_test_LongArray,(m),(d))
#endif
#if !defined(_test_StrArray_defined)
#define _test_StrArray_defined 1
typedef CORBA_string test_StrArray[4];
typedef CORBA_string test_StrArray_slice;
#if !defined(TC_IMPL_TC_test_StrArray_0)
#define TC_IMPL_TC_test_StrArray_0 'e'
#define TC_IMPL_TC_test_StrArray_1 'v'
#define TC_IMPL_TC_test_StrArray_2 'e'
#define TC_IMPL_TC_test_StrArray_3 'r'
#define TC_IMPL_TC_test_StrArray_4 'y'
#define TC_IMPL_TC_test_StrArray_5 't'
#define TC_IMPL_TC_test_StrArray_6 'h'
#define TC_IMPL_TC_test_StrArray_7 'i'
#define TC_IMPL_TC_test_StrArray_8 'n'
#define TC_IMPL_TC_test_StrArray_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_StrArray_struct;
#define TC_test_StrArray ((CORBA_TypeCode)&TC_test_StrArray_struct)
#endif
#define test_StrArray__alloc() ((test_StrArray_slice *)ORBit_small_alloc (TC_test_StrArray))
#define test_StrArray__freekids(m,d) ORBit_small_freekids (TC_test_StrArray,(m),(d))
#endif
#if !defined(_test_StrArrayMultiDimensional_defined)
#define _test_StrArrayMultiDimensional_defined 1
typedef CORBA_string test_StrArrayMultiDimensional[4][3][5];
typedef CORBA_string test_StrArrayMultiDimensional_slice[3][5];
#if !defined(TC_IMPL_TC_test_StrArrayMultiDimensional_0)
#define TC_IMPL_TC_test_StrArrayMultiDimensional_0 'e'
#define TC_IMPL_TC_test_StrArrayMultiDimensional_1 'v'
#define TC_IMPL_TC_test_StrArrayMultiDimensional_2 'e'
#define TC_IMPL_TC_test_StrArrayMultiDimensional_3 'r'
#define TC_IMPL_TC_test_StrArrayMultiDimensional_4 'y'
#define TC_IMPL_TC_test_StrArrayMultiDimensional_5 't'
#define TC_IMPL_TC_test_StrArrayMultiDimensional_6 'h'
#define TC_IMPL_TC_test_StrArrayMultiDimensional_7 'i'
#define TC_IMPL_TC_test_StrArrayMultiDimensional_8 'n'
#define TC_IMPL_TC_test_StrArrayMultiDimensional_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_StrArrayMultiDimensional_struct;
#define TC_test_StrArrayMultiDimensional ((CORBA_TypeCode)&TC_test_StrArrayMultiDimensional_struct)
#endif
#define test_StrArrayMultiDimensional__alloc() ((test_StrArrayMultiDimensional_slice *)ORBit_small_alloc (TC_test_StrArrayMultiDimensional))
#define test_StrArrayMultiDimensional__freekids(m,d) ORBit_small_freekids (TC_test_StrArrayMultiDimensional,(m),(d))
#endif
#if !defined(_test_FixedLengthStructArray_defined)
#define _test_FixedLengthStructArray_defined 1
typedef test_FixedLengthStruct test_FixedLengthStructArray[4];
typedef test_FixedLengthStruct test_FixedLengthStructArray_slice;
#if !defined(TC_IMPL_TC_test_FixedLengthStructArray_0)
#define TC_IMPL_TC_test_FixedLengthStructArray_0 'e'
#define TC_IMPL_TC_test_FixedLengthStructArray_1 'v'
#define TC_IMPL_TC_test_FixedLengthStructArray_2 'e'
#define TC_IMPL_TC_test_FixedLengthStructArray_3 'r'
#define TC_IMPL_TC_test_FixedLengthStructArray_4 'y'
#define TC_IMPL_TC_test_FixedLengthStructArray_5 't'
#define TC_IMPL_TC_test_FixedLengthStructArray_6 'h'
#define TC_IMPL_TC_test_FixedLengthStructArray_7 'i'
#define TC_IMPL_TC_test_FixedLengthStructArray_8 'n'
#define TC_IMPL_TC_test_FixedLengthStructArray_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_FixedLengthStructArray_struct;
#define TC_test_FixedLengthStructArray ((CORBA_TypeCode)&TC_test_FixedLengthStructArray_struct)
#endif
#define test_FixedLengthStructArray__alloc() ((test_FixedLengthStructArray_slice *)ORBit_small_alloc (TC_test_FixedLengthStructArray))
#define test_FixedLengthStructArray__freekids(m,d) ORBit_small_freekids (TC_test_FixedLengthStructArray,(m),(d))
#endif
#if !defined(_test_VariableLengthStructArray_defined)
#define _test_VariableLengthStructArray_defined 1
typedef test_VariableLengthStruct test_VariableLengthStructArray[4];
typedef test_VariableLengthStruct test_VariableLengthStructArray_slice;
#if !defined(TC_IMPL_TC_test_VariableLengthStructArray_0)
#define TC_IMPL_TC_test_VariableLengthStructArray_0 'e'
#define TC_IMPL_TC_test_VariableLengthStructArray_1 'v'
#define TC_IMPL_TC_test_VariableLengthStructArray_2 'e'
#define TC_IMPL_TC_test_VariableLengthStructArray_3 'r'
#define TC_IMPL_TC_test_VariableLengthStructArray_4 'y'
#define TC_IMPL_TC_test_VariableLengthStructArray_5 't'
#define TC_IMPL_TC_test_VariableLengthStructArray_6 'h'
#define TC_IMPL_TC_test_VariableLengthStructArray_7 'i'
#define TC_IMPL_TC_test_VariableLengthStructArray_8 'n'
#define TC_IMPL_TC_test_VariableLengthStructArray_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_VariableLengthStructArray_struct;
#define TC_test_VariableLengthStructArray ((CORBA_TypeCode)&TC_test_VariableLengthStructArray_struct)
#endif
#define test_VariableLengthStructArray__alloc() ((test_VariableLengthStructArray_slice *)ORBit_small_alloc (TC_test_VariableLengthStructArray))
#define test_VariableLengthStructArray__freekids(m,d) ORBit_small_freekids (TC_test_VariableLengthStructArray,(m),(d))
#endif
#if !defined(_test_AlignHoleStructArray_defined)
#define _test_AlignHoleStructArray_defined 1
typedef test_AlignHoleStruct test_AlignHoleStructArray[4];
typedef test_AlignHoleStruct test_AlignHoleStructArray_slice;
#if !defined(TC_IMPL_TC_test_AlignHoleStructArray_0)
#define TC_IMPL_TC_test_AlignHoleStructArray_0 'e'
#define TC_IMPL_TC_test_AlignHoleStructArray_1 'v'
#define TC_IMPL_TC_test_AlignHoleStructArray_2 'e'
#define TC_IMPL_TC_test_AlignHoleStructArray_3 'r'
#define TC_IMPL_TC_test_AlignHoleStructArray_4 'y'
#define TC_IMPL_TC_test_AlignHoleStructArray_5 't'
#define TC_IMPL_TC_test_AlignHoleStructArray_6 'h'
#define TC_IMPL_TC_test_AlignHoleStructArray_7 'i'
#define TC_IMPL_TC_test_AlignHoleStructArray_8 'n'
#define TC_IMPL_TC_test_AlignHoleStructArray_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_AlignHoleStructArray_struct;
#define TC_test_AlignHoleStructArray ((CORBA_TypeCode)&TC_test_AlignHoleStructArray_struct)
#endif
#define test_AlignHoleStructArray__alloc() ((test_AlignHoleStructArray_slice *)ORBit_small_alloc (TC_test_AlignHoleStructArray))
#define test_AlignHoleStructArray__freekids(m,d) ORBit_small_freekids (TC_test_AlignHoleStructArray,(m),(d))
#endif
#if !defined(ORBIT_DECL_test_ArrayServer) && !defined(_test_ArrayServer_defined)
#define ORBIT_DECL_test_ArrayServer 1
#define _test_ArrayServer_defined 1
#define test_ArrayServer__freekids CORBA_Object__freekids
typedef CORBA_Object test_ArrayServer;
extern CORBA_unsigned_long test_ArrayServer__classid;
#if !defined(TC_IMPL_TC_test_ArrayServer_0)
#define TC_IMPL_TC_test_ArrayServer_0 'e'
#define TC_IMPL_TC_test_ArrayServer_1 'v'
#define TC_IMPL_TC_test_ArrayServer_2 'e'
#define TC_IMPL_TC_test_ArrayServer_3 'r'
#define TC_IMPL_TC_test_ArrayServer_4 'y'
#define TC_IMPL_TC_test_ArrayServer_5 't'
#define TC_IMPL_TC_test_ArrayServer_6 'h'
#define TC_IMPL_TC_test_ArrayServer_7 'i'
#define TC_IMPL_TC_test_ArrayServer_8 'n'
#define TC_IMPL_TC_test_ArrayServer_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_ArrayServer_struct;
#define TC_test_ArrayServer ((CORBA_TypeCode)&TC_test_ArrayServer_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_BasicServer) && !defined(_test_BasicServer_defined)
#define ORBIT_DECL_test_BasicServer 1
#define _test_BasicServer_defined 1
#define test_BasicServer__freekids CORBA_Object__freekids
typedef CORBA_Object test_BasicServer;
extern CORBA_unsigned_long test_BasicServer__classid;
#if !defined(TC_IMPL_TC_test_BasicServer_0)
#define TC_IMPL_TC_test_BasicServer_0 'e'
#define TC_IMPL_TC_test_BasicServer_1 'v'
#define TC_IMPL_TC_test_BasicServer_2 'e'
#define TC_IMPL_TC_test_BasicServer_3 'r'
#define TC_IMPL_TC_test_BasicServer_4 'y'
#define TC_IMPL_TC_test_BasicServer_5 't'
#define TC_IMPL_TC_test_BasicServer_6 'h'
#define TC_IMPL_TC_test_BasicServer_7 'i'
#define TC_IMPL_TC_test_BasicServer_8 'n'
#define TC_IMPL_TC_test_BasicServer_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_BasicServer_struct;
#define TC_test_BasicServer ((CORBA_TypeCode)&TC_test_BasicServer_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_StructServer) && !defined(_test_StructServer_defined)
#define ORBIT_DECL_test_StructServer 1
#define _test_StructServer_defined 1
#define test_StructServer__freekids CORBA_Object__freekids
typedef CORBA_Object test_StructServer;
extern CORBA_unsigned_long test_StructServer__classid;
#if !defined(TC_IMPL_TC_test_StructServer_0)
#define TC_IMPL_TC_test_StructServer_0 'e'
#define TC_IMPL_TC_test_StructServer_1 'v'
#define TC_IMPL_TC_test_StructServer_2 'e'
#define TC_IMPL_TC_test_StructServer_3 'r'
#define TC_IMPL_TC_test_StructServer_4 'y'
#define TC_IMPL_TC_test_StructServer_5 't'
#define TC_IMPL_TC_test_StructServer_6 'h'
#define TC_IMPL_TC_test_StructServer_7 'i'
#define TC_IMPL_TC_test_StructServer_8 'n'
#define TC_IMPL_TC_test_StructServer_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_StructServer_struct;
#define TC_test_StructServer ((CORBA_TypeCode)&TC_test_StructServer_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_BaseServer) && !defined(_test_BaseServer_defined)
#define ORBIT_DECL_test_BaseServer 1
#define _test_BaseServer_defined 1
#define test_BaseServer__freekids CORBA_Object__freekids
typedef CORBA_Object test_BaseServer;
extern CORBA_unsigned_long test_BaseServer__classid;
#if !defined(TC_IMPL_TC_test_BaseServer_0)
#define TC_IMPL_TC_test_BaseServer_0 'e'
#define TC_IMPL_TC_test_BaseServer_1 'v'
#define TC_IMPL_TC_test_BaseServer_2 'e'
#define TC_IMPL_TC_test_BaseServer_3 'r'
#define TC_IMPL_TC_test_BaseServer_4 'y'
#define TC_IMPL_TC_test_BaseServer_5 't'
#define TC_IMPL_TC_test_BaseServer_6 'h'
#define TC_IMPL_TC_test_BaseServer_7 'i'
#define TC_IMPL_TC_test_BaseServer_8 'n'
#define TC_IMPL_TC_test_BaseServer_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_BaseServer_struct;
#define TC_test_BaseServer ((CORBA_TypeCode)&TC_test_BaseServer_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_B1) && !defined(_test_B1_defined)
#define ORBIT_DECL_test_B1 1
#define _test_B1_defined 1
#define test_B1__freekids CORBA_Object__freekids
typedef CORBA_Object test_B1;
extern CORBA_unsigned_long test_B1__classid;
#if !defined(TC_IMPL_TC_test_B1_0)
#define TC_IMPL_TC_test_B1_0 'e'
#define TC_IMPL_TC_test_B1_1 'v'
#define TC_IMPL_TC_test_B1_2 'e'
#define TC_IMPL_TC_test_B1_3 'r'
#define TC_IMPL_TC_test_B1_4 'y'
#define TC_IMPL_TC_test_B1_5 't'
#define TC_IMPL_TC_test_B1_6 'h'
#define TC_IMPL_TC_test_B1_7 'i'
#define TC_IMPL_TC_test_B1_8 'n'
#define TC_IMPL_TC_test_B1_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_B1_struct;
#define TC_test_B1 ((CORBA_TypeCode)&TC_test_B1_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_B2) && !defined(_test_B2_defined)
#define ORBIT_DECL_test_B2 1
#define _test_B2_defined 1
#define test_B2__freekids CORBA_Object__freekids
typedef CORBA_Object test_B2;
extern CORBA_unsigned_long test_B2__classid;
#if !defined(TC_IMPL_TC_test_B2_0)
#define TC_IMPL_TC_test_B2_0 'e'
#define TC_IMPL_TC_test_B2_1 'v'
#define TC_IMPL_TC_test_B2_2 'e'
#define TC_IMPL_TC_test_B2_3 'r'
#define TC_IMPL_TC_test_B2_4 'y'
#define TC_IMPL_TC_test_B2_5 't'
#define TC_IMPL_TC_test_B2_6 'h'
#define TC_IMPL_TC_test_B2_7 'i'
#define TC_IMPL_TC_test_B2_8 'n'
#define TC_IMPL_TC_test_B2_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_B2_struct;
#define TC_test_B2 ((CORBA_TypeCode)&TC_test_B2_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_C1) && !defined(_test_C1_defined)
#define ORBIT_DECL_test_C1 1
#define _test_C1_defined 1
#define test_C1__freekids CORBA_Object__freekids
typedef CORBA_Object test_C1;
extern CORBA_unsigned_long test_C1__classid;
#if !defined(TC_IMPL_TC_test_C1_0)
#define TC_IMPL_TC_test_C1_0 'e'
#define TC_IMPL_TC_test_C1_1 'v'
#define TC_IMPL_TC_test_C1_2 'e'
#define TC_IMPL_TC_test_C1_3 'r'
#define TC_IMPL_TC_test_C1_4 'y'
#define TC_IMPL_TC_test_C1_5 't'
#define TC_IMPL_TC_test_C1_6 'h'
#define TC_IMPL_TC_test_C1_7 'i'
#define TC_IMPL_TC_test_C1_8 'n'
#define TC_IMPL_TC_test_C1_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_C1_struct;
#define TC_test_C1 ((CORBA_TypeCode)&TC_test_C1_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_DerivedServer) && !defined(_test_DerivedServer_defined)
#define ORBIT_DECL_test_DerivedServer 1
#define _test_DerivedServer_defined 1
#define test_DerivedServer__freekids CORBA_Object__freekids
typedef CORBA_Object test_DerivedServer;
extern CORBA_unsigned_long test_DerivedServer__classid;
#if !defined(TC_IMPL_TC_test_DerivedServer_0)
#define TC_IMPL_TC_test_DerivedServer_0 'e'
#define TC_IMPL_TC_test_DerivedServer_1 'v'
#define TC_IMPL_TC_test_DerivedServer_2 'e'
#define TC_IMPL_TC_test_DerivedServer_3 'r'
#define TC_IMPL_TC_test_DerivedServer_4 'y'
#define TC_IMPL_TC_test_DerivedServer_5 't'
#define TC_IMPL_TC_test_DerivedServer_6 'h'
#define TC_IMPL_TC_test_DerivedServer_7 'i'
#define TC_IMPL_TC_test_DerivedServer_8 'n'
#define TC_IMPL_TC_test_DerivedServer_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_DerivedServer_struct;
#define TC_test_DerivedServer ((CORBA_TypeCode)&TC_test_DerivedServer_struct)
#endif
#endif
#if !defined(_test_FixedLengthUnion_defined)
#define _test_FixedLengthUnion_defined 1
typedef struct test_FixedLengthUnion_type test_FixedLengthUnion;
struct test_FixedLengthUnion_type {
CORBA_char _d;
union {
CORBA_long x;
CORBA_char y;
CORBA_boolean z;
test_FixedLengthStruct v;
} _u;
};
#if !defined(TC_IMPL_TC_test_FixedLengthUnion_0)
#define TC_IMPL_TC_test_FixedLengthUnion_0 'e'
#define TC_IMPL_TC_test_FixedLengthUnion_1 'v'
#define TC_IMPL_TC_test_FixedLengthUnion_2 'e'
#define TC_IMPL_TC_test_FixedLengthUnion_3 'r'
#define TC_IMPL_TC_test_FixedLengthUnion_4 'y'
#define TC_IMPL_TC_test_FixedLengthUnion_5 't'
#define TC_IMPL_TC_test_FixedLengthUnion_6 'h'
#define TC_IMPL_TC_test_FixedLengthUnion_7 'i'
#define TC_IMPL_TC_test_FixedLengthUnion_8 'n'
#define TC_IMPL_TC_test_FixedLengthUnion_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_FixedLengthUnion_struct;
#define TC_test_FixedLengthUnion ((CORBA_TypeCode)&TC_test_FixedLengthUnion_struct)
#endif
#define test_FixedLengthUnion__alloc() ((test_FixedLengthUnion *)ORBit_small_alloc (TC_test_FixedLengthUnion))
#define test_FixedLengthUnion__freekids(m,d) ORBit_small_freekids (TC_test_FixedLengthUnion,(m),(d))
#endif
#if !defined(_test_VariableLengthUnion_defined)
#define _test_VariableLengthUnion_defined 1
typedef struct test_VariableLengthUnion_type test_VariableLengthUnion;
struct test_VariableLengthUnion_type {
CORBA_long _d;
union {
CORBA_long x;
CORBA_long w;
CORBA_string y;
CORBA_double j;
CORBA_boolean z;
test_VariableLengthStruct a;
test_StrSeq b;
test_FixedLengthUnion c;
test_StrArray d;
} _u;
};
#if !defined(TC_IMPL_TC_test_VariableLengthUnion_0)
#define TC_IMPL_TC_test_VariableLengthUnion_0 'e'
#define TC_IMPL_TC_test_VariableLengthUnion_1 'v'
#define TC_IMPL_TC_test_VariableLengthUnion_2 'e'
#define TC_IMPL_TC_test_VariableLengthUnion_3 'r'
#define TC_IMPL_TC_test_VariableLengthUnion_4 'y'
#define TC_IMPL_TC_test_VariableLengthUnion_5 't'
#define TC_IMPL_TC_test_VariableLengthUnion_6 'h'
#define TC_IMPL_TC_test_VariableLengthUnion_7 'i'
#define TC_IMPL_TC_test_VariableLengthUnion_8 'n'
#define TC_IMPL_TC_test_VariableLengthUnion_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_VariableLengthUnion_struct;
#define TC_test_VariableLengthUnion ((CORBA_TypeCode)&TC_test_VariableLengthUnion_struct)
#endif
#define test_VariableLengthUnion__alloc() ((test_VariableLengthUnion *)ORBit_small_alloc (TC_test_VariableLengthUnion))
#define test_VariableLengthUnion__freekids(m,d) ORBit_small_freekids (TC_test_VariableLengthUnion,(m),(d))
#endif
#if !defined(_test_EnumUnion_Colour_defined)
#define _test_EnumUnion_Colour_defined 1
typedef enum {
  test_EnumUnion_red,
  test_EnumUnion_green,
  test_EnumUnion_blue
} test_EnumUnion_Colour;
#if !defined(TC_IMPL_TC_test_EnumUnion_Colour_0)
#define TC_IMPL_TC_test_EnumUnion_Colour_0 'e'
#define TC_IMPL_TC_test_EnumUnion_Colour_1 'v'
#define TC_IMPL_TC_test_EnumUnion_Colour_2 'e'
#define TC_IMPL_TC_test_EnumUnion_Colour_3 'r'
#define TC_IMPL_TC_test_EnumUnion_Colour_4 'y'
#define TC_IMPL_TC_test_EnumUnion_Colour_5 't'
#define TC_IMPL_TC_test_EnumUnion_Colour_6 'h'
#define TC_IMPL_TC_test_EnumUnion_Colour_7 'i'
#define TC_IMPL_TC_test_EnumUnion_Colour_8 'n'
#define TC_IMPL_TC_test_EnumUnion_Colour_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_EnumUnion_Colour_struct;
#define TC_test_EnumUnion_Colour ((CORBA_TypeCode)&TC_test_EnumUnion_Colour_struct)
#endif
#endif
#if !defined(_test_EnumUnion_defined)
#define _test_EnumUnion_defined 1
typedef struct test_EnumUnion_type test_EnumUnion;
struct test_EnumUnion_type {
test_EnumUnion_Colour _d;
union {
CORBA_long x;
CORBA_boolean y;
} _u;
};
#if !defined(TC_IMPL_TC_test_EnumUnion_0)
#define TC_IMPL_TC_test_EnumUnion_0 'e'
#define TC_IMPL_TC_test_EnumUnion_1 'v'
#define TC_IMPL_TC_test_EnumUnion_2 'e'
#define TC_IMPL_TC_test_EnumUnion_3 'r'
#define TC_IMPL_TC_test_EnumUnion_4 'y'
#define TC_IMPL_TC_test_EnumUnion_5 't'
#define TC_IMPL_TC_test_EnumUnion_6 'h'
#define TC_IMPL_TC_test_EnumUnion_7 'i'
#define TC_IMPL_TC_test_EnumUnion_8 'n'
#define TC_IMPL_TC_test_EnumUnion_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_EnumUnion_struct;
#define TC_test_EnumUnion ((CORBA_TypeCode)&TC_test_EnumUnion_struct)
#endif
#define test_EnumUnion__alloc() ((test_EnumUnion *)ORBit_small_alloc (TC_test_EnumUnion))
#define test_EnumUnion__freekids(m,d) ORBit_small_freekids (TC_test_EnumUnion,(m),(d))
#endif
#if !defined(_test_BooleanUnion_defined)
#define _test_BooleanUnion_defined 1
typedef struct test_BooleanUnion_type test_BooleanUnion;
struct test_BooleanUnion_type {
CORBA_boolean _d;
union {
test_VariableLengthStruct x;
CORBA_string y;
} _u;
};
#if !defined(TC_IMPL_TC_test_BooleanUnion_0)
#define TC_IMPL_TC_test_BooleanUnion_0 'e'
#define TC_IMPL_TC_test_BooleanUnion_1 'v'
#define TC_IMPL_TC_test_BooleanUnion_2 'e'
#define TC_IMPL_TC_test_BooleanUnion_3 'r'
#define TC_IMPL_TC_test_BooleanUnion_4 'y'
#define TC_IMPL_TC_test_BooleanUnion_5 't'
#define TC_IMPL_TC_test_BooleanUnion_6 'h'
#define TC_IMPL_TC_test_BooleanUnion_7 'i'
#define TC_IMPL_TC_test_BooleanUnion_8 'n'
#define TC_IMPL_TC_test_BooleanUnion_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_BooleanUnion_struct;
#define TC_test_BooleanUnion ((CORBA_TypeCode)&TC_test_BooleanUnion_struct)
#endif
#define test_BooleanUnion__alloc() ((test_BooleanUnion *)ORBit_small_alloc (TC_test_BooleanUnion))
#define test_BooleanUnion__freekids(m,d) ORBit_small_freekids (TC_test_BooleanUnion,(m),(d))
#endif
#if !defined(_test_StrArray2_defined)
#define _test_StrArray2_defined 1
typedef CORBA_string test_StrArray2[20];
typedef CORBA_string test_StrArray2_slice;
#if !defined(TC_IMPL_TC_test_StrArray2_0)
#define TC_IMPL_TC_test_StrArray2_0 'e'
#define TC_IMPL_TC_test_StrArray2_1 'v'
#define TC_IMPL_TC_test_StrArray2_2 'e'
#define TC_IMPL_TC_test_StrArray2_3 'r'
#define TC_IMPL_TC_test_StrArray2_4 'y'
#define TC_IMPL_TC_test_StrArray2_5 't'
#define TC_IMPL_TC_test_StrArray2_6 'h'
#define TC_IMPL_TC_test_StrArray2_7 'i'
#define TC_IMPL_TC_test_StrArray2_8 'n'
#define TC_IMPL_TC_test_StrArray2_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_StrArray2_struct;
#define TC_test_StrArray2 ((CORBA_TypeCode)&TC_test_StrArray2_struct)
#endif
#define test_StrArray2__alloc() ((test_StrArray2_slice *)ORBit_small_alloc (TC_test_StrArray2))
#define test_StrArray2__freekids(m,d) ORBit_small_freekids (TC_test_StrArray2,(m),(d))
#endif
#if !defined(_test_ArrayUnion_defined)
#define _test_ArrayUnion_defined 1
typedef struct test_ArrayUnion_type test_ArrayUnion;
struct test_ArrayUnion_type {
CORBA_unsigned_short _d;
union {
test_StrArray2 d;
} _u;
};
#if !defined(TC_IMPL_TC_test_ArrayUnion_0)
#define TC_IMPL_TC_test_ArrayUnion_0 'e'
#define TC_IMPL_TC_test_ArrayUnion_1 'v'
#define TC_IMPL_TC_test_ArrayUnion_2 'e'
#define TC_IMPL_TC_test_ArrayUnion_3 'r'
#define TC_IMPL_TC_test_ArrayUnion_4 'y'
#define TC_IMPL_TC_test_ArrayUnion_5 't'
#define TC_IMPL_TC_test_ArrayUnion_6 'h'
#define TC_IMPL_TC_test_ArrayUnion_7 'i'
#define TC_IMPL_TC_test_ArrayUnion_8 'n'
#define TC_IMPL_TC_test_ArrayUnion_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_ArrayUnion_struct;
#define TC_test_ArrayUnion ((CORBA_TypeCode)&TC_test_ArrayUnion_struct)
#endif
#define test_ArrayUnion__alloc() ((test_ArrayUnion *)ORBit_small_alloc (TC_test_ArrayUnion))
#define test_ArrayUnion__freekids(m,d) ORBit_small_freekids (TC_test_ArrayUnion,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_test_VariableLengthUnion)
#define ORBIT_DECL_CORBA_sequence_test_VariableLengthUnion 1
#define ORBIT_IMPL_CORBA_sequence_test_VariableLengthUnion_0 'e'
#define ORBIT_IMPL_CORBA_sequence_test_VariableLengthUnion_1 'v'
#define ORBIT_IMPL_CORBA_sequence_test_VariableLengthUnion_2 'e'
#define ORBIT_IMPL_CORBA_sequence_test_VariableLengthUnion_3 'r'
#define ORBIT_IMPL_CORBA_sequence_test_VariableLengthUnion_4 'y'
#define ORBIT_IMPL_CORBA_sequence_test_VariableLengthUnion_5 't'
#define ORBIT_IMPL_CORBA_sequence_test_VariableLengthUnion_6 'h'
#define ORBIT_IMPL_CORBA_sequence_test_VariableLengthUnion_7 'i'
#define ORBIT_IMPL_CORBA_sequence_test_VariableLengthUnion_8 'n'
#define ORBIT_IMPL_CORBA_sequence_test_VariableLengthUnion_9 'g'
#if !defined(_CORBA_sequence_test_VariableLengthUnion_defined)
#define _CORBA_sequence_test_VariableLengthUnion_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; test_VariableLengthUnion* _buffer; CORBA_boolean _release; } CORBA_sequence_test_VariableLengthUnion;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_test_VariableLengthUnion_0)
#define TC_IMPL_TC_CORBA_sequence_test_VariableLengthUnion_0 'e'
#define TC_IMPL_TC_CORBA_sequence_test_VariableLengthUnion_1 'v'
#define TC_IMPL_TC_CORBA_sequence_test_VariableLengthUnion_2 'e'
#define TC_IMPL_TC_CORBA_sequence_test_VariableLengthUnion_3 'r'
#define TC_IMPL_TC_CORBA_sequence_test_VariableLengthUnion_4 'y'
#define TC_IMPL_TC_CORBA_sequence_test_VariableLengthUnion_5 't'
#define TC_IMPL_TC_CORBA_sequence_test_VariableLengthUnion_6 'h'
#define TC_IMPL_TC_CORBA_sequence_test_VariableLengthUnion_7 'i'
#define TC_IMPL_TC_CORBA_sequence_test_VariableLengthUnion_8 'n'
#define TC_IMPL_TC_CORBA_sequence_test_VariableLengthUnion_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_test_VariableLengthUnion_struct;
#define TC_CORBA_sequence_test_VariableLengthUnion ((CORBA_TypeCode)&TC_CORBA_sequence_test_VariableLengthUnion_struct)
#endif
#define CORBA_sequence_test_VariableLengthUnion__alloc() ((CORBA_sequence_test_VariableLengthUnion *)ORBit_small_alloc (TC_CORBA_sequence_test_VariableLengthUnion))
#define CORBA_sequence_test_VariableLengthUnion__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_test_VariableLengthUnion,(m),(d))
#define CORBA_sequence_test_VariableLengthUnion_allocbuf(l) ((test_VariableLengthUnion*)ORBit_small_allocbuf (TC_CORBA_sequence_test_VariableLengthUnion, (l)))
#define CORBA_sequence_test_VariableLengthUnion_allocbuf(l) ((test_VariableLengthUnion*)ORBit_small_allocbuf (TC_CORBA_sequence_test_VariableLengthUnion, (l)))
#endif
#if !defined(_test_unionSeq_defined)
#define _test_unionSeq_defined 1
typedef CORBA_sequence_test_VariableLengthUnion test_unionSeq;
#define test_unionSeq_marshal(x,y,z) CORBA_sequence_test_VariableLengthUnion_marshal((x),(y),(z))
#define test_unionSeq_demarshal(x,y,z,i) CORBA_sequence_test_VariableLengthUnion_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_test_unionSeq_0)
#define TC_IMPL_TC_test_unionSeq_0 'e'
#define TC_IMPL_TC_test_unionSeq_1 'v'
#define TC_IMPL_TC_test_unionSeq_2 'e'
#define TC_IMPL_TC_test_unionSeq_3 'r'
#define TC_IMPL_TC_test_unionSeq_4 'y'
#define TC_IMPL_TC_test_unionSeq_5 't'
#define TC_IMPL_TC_test_unionSeq_6 'h'
#define TC_IMPL_TC_test_unionSeq_7 'i'
#define TC_IMPL_TC_test_unionSeq_8 'n'
#define TC_IMPL_TC_test_unionSeq_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_unionSeq_struct;
#define TC_test_unionSeq ((CORBA_TypeCode)&TC_test_unionSeq_struct)
#endif
#define test_unionSeq__alloc() ((test_unionSeq *)ORBit_small_alloc (TC_CORBA_sequence_test_VariableLengthUnion))
#define test_unionSeq__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_test_VariableLengthUnion,(m),(d))
#define test_unionSeq_allocbuf(l) ((test_VariableLengthUnion*)ORBit_small_allocbuf (TC_CORBA_sequence_test_VariableLengthUnion, (l)))
#endif
#if !defined(_test_FixedLengthUnionArray_defined)
#define _test_FixedLengthUnionArray_defined 1
typedef test_FixedLengthUnion test_FixedLengthUnionArray[4];
typedef test_FixedLengthUnion test_FixedLengthUnionArray_slice;
#if !defined(TC_IMPL_TC_test_FixedLengthUnionArray_0)
#define TC_IMPL_TC_test_FixedLengthUnionArray_0 'e'
#define TC_IMPL_TC_test_FixedLengthUnionArray_1 'v'
#define TC_IMPL_TC_test_FixedLengthUnionArray_2 'e'
#define TC_IMPL_TC_test_FixedLengthUnionArray_3 'r'
#define TC_IMPL_TC_test_FixedLengthUnionArray_4 'y'
#define TC_IMPL_TC_test_FixedLengthUnionArray_5 't'
#define TC_IMPL_TC_test_FixedLengthUnionArray_6 'h'
#define TC_IMPL_TC_test_FixedLengthUnionArray_7 'i'
#define TC_IMPL_TC_test_FixedLengthUnionArray_8 'n'
#define TC_IMPL_TC_test_FixedLengthUnionArray_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_FixedLengthUnionArray_struct;
#define TC_test_FixedLengthUnionArray ((CORBA_TypeCode)&TC_test_FixedLengthUnionArray_struct)
#endif
#define test_FixedLengthUnionArray__alloc() ((test_FixedLengthUnionArray_slice *)ORBit_small_alloc (TC_test_FixedLengthUnionArray))
#define test_FixedLengthUnionArray__freekids(m,d) ORBit_small_freekids (TC_test_FixedLengthUnionArray,(m),(d))
#endif
#if !defined(ORBIT_DECL_test_UnionServer) && !defined(_test_UnionServer_defined)
#define ORBIT_DECL_test_UnionServer 1
#define _test_UnionServer_defined 1
#define test_UnionServer__freekids CORBA_Object__freekids
typedef CORBA_Object test_UnionServer;
extern CORBA_unsigned_long test_UnionServer__classid;
#if !defined(TC_IMPL_TC_test_UnionServer_0)
#define TC_IMPL_TC_test_UnionServer_0 'e'
#define TC_IMPL_TC_test_UnionServer_1 'v'
#define TC_IMPL_TC_test_UnionServer_2 'e'
#define TC_IMPL_TC_test_UnionServer_3 'r'
#define TC_IMPL_TC_test_UnionServer_4 'y'
#define TC_IMPL_TC_test_UnionServer_5 't'
#define TC_IMPL_TC_test_UnionServer_6 'h'
#define TC_IMPL_TC_test_UnionServer_7 'i'
#define TC_IMPL_TC_test_UnionServer_8 'n'
#define TC_IMPL_TC_test_UnionServer_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_UnionServer_struct;
#define TC_test_UnionServer ((CORBA_TypeCode)&TC_test_UnionServer_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_AnyServer) && !defined(_test_AnyServer_defined)
#define ORBIT_DECL_test_AnyServer 1
#define _test_AnyServer_defined 1
#define test_AnyServer__freekids CORBA_Object__freekids
typedef CORBA_Object test_AnyServer;
extern CORBA_unsigned_long test_AnyServer__classid;
#if !defined(TC_IMPL_TC_test_AnyServer_0)
#define TC_IMPL_TC_test_AnyServer_0 'e'
#define TC_IMPL_TC_test_AnyServer_1 'v'
#define TC_IMPL_TC_test_AnyServer_2 'e'
#define TC_IMPL_TC_test_AnyServer_3 'r'
#define TC_IMPL_TC_test_AnyServer_4 'y'
#define TC_IMPL_TC_test_AnyServer_5 't'
#define TC_IMPL_TC_test_AnyServer_6 'h'
#define TC_IMPL_TC_test_AnyServer_7 'i'
#define TC_IMPL_TC_test_AnyServer_8 'n'
#define TC_IMPL_TC_test_AnyServer_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_AnyServer_struct;
#define TC_test_AnyServer ((CORBA_TypeCode)&TC_test_AnyServer_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_ContextServer) && !defined(_test_ContextServer_defined)
#define ORBIT_DECL_test_ContextServer 1
#define _test_ContextServer_defined 1
#define test_ContextServer__freekids CORBA_Object__freekids
typedef CORBA_Object test_ContextServer;
extern CORBA_unsigned_long test_ContextServer__classid;
#if !defined(TC_IMPL_TC_test_ContextServer_0)
#define TC_IMPL_TC_test_ContextServer_0 'e'
#define TC_IMPL_TC_test_ContextServer_1 'v'
#define TC_IMPL_TC_test_ContextServer_2 'e'
#define TC_IMPL_TC_test_ContextServer_3 'r'
#define TC_IMPL_TC_test_ContextServer_4 'y'
#define TC_IMPL_TC_test_ContextServer_5 't'
#define TC_IMPL_TC_test_ContextServer_6 'h'
#define TC_IMPL_TC_test_ContextServer_7 'i'
#define TC_IMPL_TC_test_ContextServer_8 'n'
#define TC_IMPL_TC_test_ContextServer_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_ContextServer_struct;
#define TC_test_ContextServer ((CORBA_TypeCode)&TC_test_ContextServer_struct)
#endif
#endif
#if !defined(ORBIT_DECL_test_PingPongServer) && !defined(_test_PingPongServer_defined)
#define ORBIT_DECL_test_PingPongServer 1
#define _test_PingPongServer_defined 1
#define test_PingPongServer__freekids CORBA_Object__freekids
typedef CORBA_Object test_PingPongServer;
extern CORBA_unsigned_long test_PingPongServer__classid;
#if !defined(TC_IMPL_TC_test_PingPongServer_0)
#define TC_IMPL_TC_test_PingPongServer_0 'e'
#define TC_IMPL_TC_test_PingPongServer_1 'v'
#define TC_IMPL_TC_test_PingPongServer_2 'e'
#define TC_IMPL_TC_test_PingPongServer_3 'r'
#define TC_IMPL_TC_test_PingPongServer_4 'y'
#define TC_IMPL_TC_test_PingPongServer_5 't'
#define TC_IMPL_TC_test_PingPongServer_6 'h'
#define TC_IMPL_TC_test_PingPongServer_7 'i'
#define TC_IMPL_TC_test_PingPongServer_8 'n'
#define TC_IMPL_TC_test_PingPongServer_9 'g'
#ifdef ORBIT_IDL_C_IMODULE_everything
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_test_PingPongServer_struct;
#define TC_test_PingPongServer ((CORBA_TypeCode)&TC_test_PingPongServer_struct)
#endif
#endif

/** POA structures **/
#ifndef _defined_POA_test_TestFactory
#define _defined_POA_test_TestFactory 1
typedef struct {
  void *_private;
test_BasicServer (*getBasicServer)(PortableServer_Servant _servant, CORBA_Environment *ev);
test_StructServer (*getStructServer)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_string (*getStructServerIOR)(PortableServer_Servant _servant, CORBA_Environment *ev);
test_SequenceServer (*getSequenceServer)(PortableServer_Servant _servant, CORBA_Environment *ev);
test_UnionServer (*getUnionServer)(PortableServer_Servant _servant, CORBA_Environment *ev);
test_ArrayServer (*getArrayServer)(PortableServer_Servant _servant, CORBA_Environment *ev);
test_AnyServer (*getAnyServer)(PortableServer_Servant _servant, CORBA_Environment *ev);
test_ContextServer (*getContextServer)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*segv)(PortableServer_Servant _servant, const CORBA_char * when, CORBA_Environment *ev);
test_BaseServer (*getBaseServer)(PortableServer_Servant _servant, CORBA_Environment *ev);
test_DerivedServer (*getDerivedServer)(PortableServer_Servant _servant, CORBA_Environment *ev);
test_BaseServer (*getDerivedServerAsBaseServer)(PortableServer_Servant _servant, CORBA_Environment *ev);
test_B2 (*getDerivedServerAsB2)(PortableServer_Servant _servant, CORBA_Environment *ev);
test_TransientObj (*createTransientObj)(PortableServer_Servant _servant, CORBA_Environment *ev);
test_DeadReferenceObj (*createDeadReferenceObj)(PortableServer_Servant _servant, CORBA_Environment *ev);
test_PingPongServer (*createPingPongServer)(PortableServer_Servant _servant, CORBA_Environment *ev);
test_LifeCycleServer (*createLifeCycleServer)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*noOp)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_test_TestFactory__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_test_TestFactory__epv *test_TestFactory_epv;
} POA_test_TestFactory__vepv;
typedef struct {
  void *_private;
  POA_test_TestFactory__vepv *vepv;
} POA_test_TestFactory;
extern void POA_test_TestFactory__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_test_TestFactory__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_test_TestFactory */
#ifndef _defined_POA_test_LifeCycleServer
#define _defined_POA_test_LifeCycleServer 1
typedef struct {
  void *_private;
void (*deactivateOnReturn)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*deactivateUnrefOnReturn)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_test_LifeCycleServer__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_test_LifeCycleServer__epv *test_LifeCycleServer_epv;
} POA_test_LifeCycleServer__vepv;
typedef struct {
  void *_private;
  POA_test_LifeCycleServer__vepv *vepv;
} POA_test_LifeCycleServer;
extern void POA_test_LifeCycleServer__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_test_LifeCycleServer__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_test_LifeCycleServer */
#ifndef _defined_POA_test_DeadReferenceObj
#define _defined_POA_test_DeadReferenceObj 1
typedef struct {
  void *_private;
void (*test)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_test_DeadReferenceObj__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_test_DeadReferenceObj__epv *test_DeadReferenceObj_epv;
} POA_test_DeadReferenceObj__vepv;
typedef struct {
  void *_private;
  POA_test_DeadReferenceObj__vepv *vepv;
} POA_test_DeadReferenceObj;
extern void POA_test_DeadReferenceObj__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_test_DeadReferenceObj__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_test_DeadReferenceObj */
#ifndef _defined_POA_test_TransientObj
#define _defined_POA_test_TransientObj 1
typedef struct {
  void *_private;
void (*remove)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_test_TransientObj__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_test_TransientObj__epv *test_TransientObj_epv;
} POA_test_TransientObj__vepv;
typedef struct {
  void *_private;
  POA_test_TransientObj__vepv *vepv;
} POA_test_TransientObj;
extern void POA_test_TransientObj__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_test_TransientObj__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_test_TransientObj */
#ifndef _defined_POA_test_SequenceServer
#define _defined_POA_test_SequenceServer 1
typedef struct {
  void *_private;
test_StrSeq* (*opStrSeq)(PortableServer_Servant _servant, const test_StrSeq* inArg, test_StrSeq* inoutArg, test_StrSeq** outArg, CORBA_Environment *ev);
test_BoundedStructSeq* (*opBoundedStructSeq)(PortableServer_Servant _servant, const test_BoundedStructSeq* inArg, test_BoundedStructSeq* inoutArg, test_BoundedStructSeq** outArg, CORBA_Environment *ev);
test_LongSeq* (*opMassiveSeq)(PortableServer_Servant _servant, CORBA_Environment *ev);
test_AnySeq* (*opAnySeq)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_test_SequenceServer__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_test_SequenceServer__epv *test_SequenceServer_epv;
} POA_test_SequenceServer__vepv;
typedef struct {
  void *_private;
  POA_test_SequenceServer__vepv *vepv;
} POA_test_SequenceServer;
extern void POA_test_SequenceServer__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_test_SequenceServer__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_test_SequenceServer */
#ifndef _defined_POA_test_ArrayServer
#define _defined_POA_test_ArrayServer 1
typedef struct {
  void *_private;
test_LongArray_slice* (*opLongArray)(PortableServer_Servant _servant, const test_LongArray inArg, test_LongArray inoutArg, test_LongArray outArg, CORBA_Environment *ev);
test_OctetArray_slice* (*opOctetArray)(PortableServer_Servant _servant, const test_OctetArray inArg, test_OctetArray inoutArg, test_OctetArray outArg, CORBA_Environment *ev);
test_FixedLengthStructArray_slice* (*opFixedLengthStructArray)(PortableServer_Servant _servant, const test_FixedLengthStructArray inArg, test_FixedLengthStructArray inoutArg, test_FixedLengthStructArray outArg, CORBA_Environment *ev);
test_StrArray_slice* (*opStrArray)(PortableServer_Servant _servant, const test_StrArray inArg, test_StrArray inoutArg, test_StrArray_slice** outArg, CORBA_Environment *ev);
test_AlignHoleStructArray_slice* (*opAlignHoleStructArray)(PortableServer_Servant _servant, const test_AlignHoleStructArray inArg, test_AlignHoleStructArray inoutArg, test_AlignHoleStructArray outArg, CORBA_Environment *ev);
} POA_test_ArrayServer__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_test_ArrayServer__epv *test_ArrayServer_epv;
} POA_test_ArrayServer__vepv;
typedef struct {
  void *_private;
  POA_test_ArrayServer__vepv *vepv;
} POA_test_ArrayServer;
extern void POA_test_ArrayServer__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_test_ArrayServer__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_test_ArrayServer */
#ifndef _defined_POA_test_BasicServer
#define _defined_POA_test_BasicServer 1
typedef struct {
  void *_private;
CORBA_string (*_get_foo)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_foo)(PortableServer_Servant _servant, const CORBA_char * value, CORBA_Environment *ev);
CORBA_long (*_get_bah)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_string (*opString)(PortableServer_Servant _servant, const CORBA_char * inArg, CORBA_string* inoutArg, CORBA_string* outArg, CORBA_Environment *ev);
CORBA_long (*opLong)(PortableServer_Servant _servant, const CORBA_long inArg, CORBA_long* inoutArg, CORBA_long* outArg, CORBA_Environment *ev);
CORBA_long_long (*opLongLong)(PortableServer_Servant _servant, const CORBA_long_long inArg, CORBA_long_long* inoutArg, CORBA_long_long* outArg, CORBA_Environment *ev);
CORBA_float (*opFloat)(PortableServer_Servant _servant, const CORBA_float inArg, CORBA_float* inoutArg, CORBA_float* outArg, CORBA_Environment *ev);
CORBA_double (*opDouble)(PortableServer_Servant _servant, const CORBA_double inArg, CORBA_double* inoutArg, CORBA_double* outArg, CORBA_Environment *ev);
CORBA_long_double (*opLongDouble)(PortableServer_Servant _servant, const CORBA_long_double inArg, CORBA_long_double* inoutArg, CORBA_long_double* outArg, CORBA_Environment *ev);
test_AnEnum (*opEnum)(PortableServer_Servant _servant, const test_AnEnum inArg, test_AnEnum* inoutArg, test_AnEnum* outArg, CORBA_Environment *ev);
void (*opException)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*opOneWay)(PortableServer_Servant _servant, const CORBA_char * inArg, CORBA_Environment *ev);
void (*noImplement)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*testLargeStringSeq)(PortableServer_Servant _servant, const test_StrSeq* seq, CORBA_Environment *ev);
CORBA_long (*getObjectCount)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_Object (*getObject)(PortableServer_Servant _servant, const CORBA_long which, CORBA_Environment *ev);
void (*testBoolString)(PortableServer_Servant _servant, const CORBA_boolean inBool, const CORBA_char * inArg, CORBA_string* inoutArg, CORBA_Environment *ev);
} POA_test_BasicServer__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_test_BasicServer__epv *test_BasicServer_epv;
} POA_test_BasicServer__vepv;
typedef struct {
  void *_private;
  POA_test_BasicServer__vepv *vepv;
} POA_test_BasicServer;
extern void POA_test_BasicServer__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_test_BasicServer__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_test_BasicServer */
#ifndef _defined_POA_test_StructServer
#define _defined_POA_test_StructServer 1
typedef struct {
  void *_private;
test_FixedLengthStruct (*opFixed)(PortableServer_Servant _servant, const test_FixedLengthStruct* inArg, test_FixedLengthStruct* inoutArg, test_FixedLengthStruct* outArg, CORBA_Environment *ev);
test_VariableLengthStruct* (*opVariable)(PortableServer_Servant _servant, const test_VariableLengthStruct* inArg, test_VariableLengthStruct* inoutArg, test_VariableLengthStruct** outArg, CORBA_Environment *ev);
test_CompoundStruct* (*opCompound)(PortableServer_Servant _servant, const test_CompoundStruct* inArg, test_CompoundStruct* inoutArg, test_CompoundStruct** outArg, CORBA_Environment *ev);
test_AlignHoleStruct (*opAlignHole)(PortableServer_Servant _servant, const test_AlignHoleStruct* inArg, test_AlignHoleStruct* inoutArg, test_AlignHoleStruct* outArg, CORBA_Environment *ev);
void (*opObjectStruct)(PortableServer_Servant _servant, const test_ObjectStruct* inArg, CORBA_Environment *ev);
test_StructAny* (*opStructAny)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_test_StructServer__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_test_BasicServer__epv *test_BasicServer_epv;
  POA_test_StructServer__epv *test_StructServer_epv;
} POA_test_StructServer__vepv;
typedef struct {
  void *_private;
  POA_test_StructServer__vepv *vepv;
} POA_test_StructServer;
extern void POA_test_StructServer__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_test_StructServer__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_test_StructServer */
#ifndef _defined_POA_test_BaseServer
#define _defined_POA_test_BaseServer 1
typedef struct {
  void *_private;
CORBA_long (*opPolymorphic)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_string (*_get_attribPolymorphic)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_attribPolymorphic)(PortableServer_Servant _servant, const CORBA_char * value, CORBA_Environment *ev);
} POA_test_BaseServer__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_test_BaseServer__epv *test_BaseServer_epv;
} POA_test_BaseServer__vepv;
typedef struct {
  void *_private;
  POA_test_BaseServer__vepv *vepv;
} POA_test_BaseServer;
extern void POA_test_BaseServer__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_test_BaseServer__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_test_BaseServer */
#ifndef _defined_POA_test_B1
#define _defined_POA_test_B1 1
typedef struct {
  void *_private;
} POA_test_B1__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_test_BaseServer__epv *test_BaseServer_epv;
  POA_test_B1__epv *test_B1_epv;
} POA_test_B1__vepv;
typedef struct {
  void *_private;
  POA_test_B1__vepv *vepv;
} POA_test_B1;
extern void POA_test_B1__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_test_B1__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_test_B1 */
#ifndef _defined_POA_test_B2
#define _defined_POA_test_B2 1
typedef struct {
  void *_private;
} POA_test_B2__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_test_BaseServer__epv *test_BaseServer_epv;
  POA_test_B2__epv *test_B2_epv;
} POA_test_B2__vepv;
typedef struct {
  void *_private;
  POA_test_B2__vepv *vepv;
} POA_test_B2;
extern void POA_test_B2__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_test_B2__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_test_B2 */
#ifndef _defined_POA_test_C1
#define _defined_POA_test_C1 1
typedef struct {
  void *_private;
} POA_test_C1__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_test_BaseServer__epv *test_BaseServer_epv;
  POA_test_B1__epv *test_B1_epv;
  POA_test_B2__epv *test_B2_epv;
  POA_test_C1__epv *test_C1_epv;
} POA_test_C1__vepv;
typedef struct {
  void *_private;
  POA_test_C1__vepv *vepv;
} POA_test_C1;
extern void POA_test_C1__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_test_C1__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_test_C1 */
#ifndef _defined_POA_test_DerivedServer
#define _defined_POA_test_DerivedServer 1
typedef struct {
  void *_private;
} POA_test_DerivedServer__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_test_BaseServer__epv *test_BaseServer_epv;
  POA_test_B1__epv *test_B1_epv;
  POA_test_B2__epv *test_B2_epv;
  POA_test_C1__epv *test_C1_epv;
  POA_test_DerivedServer__epv *test_DerivedServer_epv;
} POA_test_DerivedServer__vepv;
typedef struct {
  void *_private;
  POA_test_DerivedServer__vepv *vepv;
} POA_test_DerivedServer;
extern void POA_test_DerivedServer__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_test_DerivedServer__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_test_DerivedServer */
#ifndef _defined_POA_test_UnionServer
#define _defined_POA_test_UnionServer 1
typedef struct {
  void *_private;
test_FixedLengthUnion (*opFixed)(PortableServer_Servant _servant, const test_FixedLengthUnion* inArg, test_FixedLengthUnion* inoutArg, test_FixedLengthUnion* outArg, CORBA_Environment *ev);
test_VariableLengthUnion* (*opVariable)(PortableServer_Servant _servant, const test_VariableLengthUnion* inArg, test_VariableLengthUnion* inoutArg, test_VariableLengthUnion** outArg, CORBA_Environment *ev);
test_EnumUnion (*opMisc)(PortableServer_Servant _servant, const test_unionSeq* inSeq, const test_BooleanUnion* inArg, test_ArrayUnion** outArg, CORBA_Environment *ev);
test_FixedLengthUnionArray_slice* (*opFixedLengthUnionArray)(PortableServer_Servant _servant, const test_FixedLengthUnionArray inArg, test_FixedLengthUnionArray inoutArg, test_FixedLengthUnionArray outArg, CORBA_Environment *ev);
} POA_test_UnionServer__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_test_UnionServer__epv *test_UnionServer_epv;
} POA_test_UnionServer__vepv;
typedef struct {
  void *_private;
  POA_test_UnionServer__vepv *vepv;
} POA_test_UnionServer;
extern void POA_test_UnionServer__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_test_UnionServer__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_test_UnionServer */
#ifndef _defined_POA_test_AnyServer
#define _defined_POA_test_AnyServer 1
typedef struct {
  void *_private;
CORBA_any* (*opAnyStrSeq)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_any* (*opAnyLong)(PortableServer_Servant _servant, const CORBA_any* inArg, CORBA_any* inoutArg, CORBA_any** outArg, CORBA_Environment *ev);
CORBA_any* (*opAnyString)(PortableServer_Servant _servant, const CORBA_any* inArg, CORBA_any* inoutArg, CORBA_any** outArg, CORBA_Environment *ev);
CORBA_any* (*opAnyStruct)(PortableServer_Servant _servant, const CORBA_any* inArg, CORBA_any* inoutArg, CORBA_any** outArg, CORBA_Environment *ev);
CORBA_TypeCode (*opTypeCode)(PortableServer_Servant _servant, const CORBA_TypeCode inArg, CORBA_TypeCode* inoutArg, CORBA_TypeCode* outArg, CORBA_Environment *ev);
} POA_test_AnyServer__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_test_AnyServer__epv *test_AnyServer_epv;
} POA_test_AnyServer__vepv;
typedef struct {
  void *_private;
  POA_test_AnyServer__vepv *vepv;
} POA_test_AnyServer;
extern void POA_test_AnyServer__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_test_AnyServer__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_test_AnyServer */
#ifndef _defined_POA_test_ContextServer
#define _defined_POA_test_ContextServer 1
typedef struct {
  void *_private;
CORBA_Object (*opWithContext)(PortableServer_Servant _servant, const CORBA_Object inArg, CORBA_Object* inoutArg, CORBA_Object* outArg, CORBA_Context _ctx, CORBA_Environment *ev);
} POA_test_ContextServer__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_test_ContextServer__epv *test_ContextServer_epv;
} POA_test_ContextServer__vepv;
typedef struct {
  void *_private;
  POA_test_ContextServer__vepv *vepv;
} POA_test_ContextServer;
extern void POA_test_ContextServer__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_test_ContextServer__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_test_ContextServer */
#ifndef _defined_POA_test_PingPongServer
#define _defined_POA_test_PingPongServer 1
typedef struct {
  void *_private;
void (*opSleep)(PortableServer_Servant _servant, const CORBA_char * large_string, CORBA_Environment *ev);
void (*opOneWay)(PortableServer_Servant _servant, const CORBA_long l, CORBA_Environment *ev);
void (*opOneWayCallback)(PortableServer_Servant _servant, const test_PingPongServer obj, CORBA_Environment *ev);
void (*opRoundTrip)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_long (*pingPong)(PortableServer_Servant _servant, const test_PingPongServer replyTo, const CORBA_long idx, CORBA_Environment *ev);
void (*set)(PortableServer_Servant _servant, const test_PingPongServer reg, const CORBA_char * name, CORBA_Environment *ev);
CORBA_Object (*get)(PortableServer_Servant _servant, const CORBA_char * name, CORBA_Environment *ev);
} POA_test_PingPongServer__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_test_PingPongServer__epv *test_PingPongServer_epv;
} POA_test_PingPongServer__vepv;
typedef struct {
  void *_private;
  POA_test_PingPongServer__vepv *vepv;
} POA_test_PingPongServer;
extern void POA_test_PingPongServer__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_test_PingPongServer__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_test_PingPongServer */

/** skel prototypes **/
void _ORBIT_skel_small_test_TestFactory_getBasicServer(POA_test_TestFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_BasicServer (*_impl_getBasicServer)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_TestFactory_getStructServer(POA_test_TestFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_StructServer (*_impl_getStructServer)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_TestFactory_getStructServerIOR(POA_test_TestFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_string (*_impl_getStructServerIOR)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_TestFactory_getSequenceServer(POA_test_TestFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_SequenceServer (*_impl_getSequenceServer)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_TestFactory_getUnionServer(POA_test_TestFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_UnionServer (*_impl_getUnionServer)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_TestFactory_getArrayServer(POA_test_TestFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_ArrayServer (*_impl_getArrayServer)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_TestFactory_getAnyServer(POA_test_TestFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_AnyServer (*_impl_getAnyServer)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_TestFactory_getContextServer(POA_test_TestFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_ContextServer (*_impl_getContextServer)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_TestFactory_segv(POA_test_TestFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_segv)(PortableServer_Servant _servant, const CORBA_char * when, CORBA_Environment *ev));
void _ORBIT_skel_small_test_TestFactory_getBaseServer(POA_test_TestFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_BaseServer (*_impl_getBaseServer)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_TestFactory_getDerivedServer(POA_test_TestFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_DerivedServer (*_impl_getDerivedServer)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_TestFactory_getDerivedServerAsBaseServer(POA_test_TestFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_BaseServer (*_impl_getDerivedServerAsBaseServer)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_TestFactory_getDerivedServerAsB2(POA_test_TestFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_B2 (*_impl_getDerivedServerAsB2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_TestFactory_createTransientObj(POA_test_TestFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_TransientObj (*_impl_createTransientObj)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_TestFactory_createDeadReferenceObj(POA_test_TestFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_DeadReferenceObj (*_impl_createDeadReferenceObj)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_TestFactory_createPingPongServer(POA_test_TestFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_PingPongServer (*_impl_createPingPongServer)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_TestFactory_createLifeCycleServer(POA_test_TestFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_LifeCycleServer (*_impl_createLifeCycleServer)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_TestFactory_noOp(POA_test_TestFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_noOp)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_LifeCycleServer_deactivateOnReturn(POA_test_LifeCycleServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_deactivateOnReturn)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_LifeCycleServer_deactivateUnrefOnReturn(POA_test_LifeCycleServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_deactivateUnrefOnReturn)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_DeadReferenceObj_test(POA_test_DeadReferenceObj *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_test)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_TransientObj_remove(POA_test_TransientObj *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_remove)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_SequenceServer_opStrSeq(POA_test_SequenceServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_StrSeq* (*_impl_opStrSeq)(PortableServer_Servant _servant, const test_StrSeq* inArg, test_StrSeq* inoutArg, test_StrSeq** outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_SequenceServer_opBoundedStructSeq(POA_test_SequenceServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_BoundedStructSeq* (*_impl_opBoundedStructSeq)(PortableServer_Servant _servant, const test_BoundedStructSeq* inArg, test_BoundedStructSeq* inoutArg, test_BoundedStructSeq** outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_SequenceServer_opMassiveSeq(POA_test_SequenceServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_LongSeq* (*_impl_opMassiveSeq)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_SequenceServer_opAnySeq(POA_test_SequenceServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_AnySeq* (*_impl_opAnySeq)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_ArrayServer_opLongArray(POA_test_ArrayServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_LongArray_slice* (*_impl_opLongArray)(PortableServer_Servant _servant, const test_LongArray inArg, test_LongArray inoutArg, test_LongArray outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_ArrayServer_opOctetArray(POA_test_ArrayServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_OctetArray_slice* (*_impl_opOctetArray)(PortableServer_Servant _servant, const test_OctetArray inArg, test_OctetArray inoutArg, test_OctetArray outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_ArrayServer_opFixedLengthStructArray(POA_test_ArrayServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_FixedLengthStructArray_slice* (*_impl_opFixedLengthStructArray)(PortableServer_Servant _servant, const test_FixedLengthStructArray inArg, test_FixedLengthStructArray inoutArg, test_FixedLengthStructArray outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_ArrayServer_opStrArray(POA_test_ArrayServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_StrArray_slice* (*_impl_opStrArray)(PortableServer_Servant _servant, const test_StrArray inArg, test_StrArray inoutArg, test_StrArray_slice** outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_ArrayServer_opAlignHoleStructArray(POA_test_ArrayServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_AlignHoleStructArray_slice* (*_impl_opAlignHoleStructArray)(PortableServer_Servant _servant, const test_AlignHoleStructArray inArg, test_AlignHoleStructArray inoutArg, test_AlignHoleStructArray outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_BasicServer__get_foo(POA_test_BasicServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_string (*_impl__get_foo)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_BasicServer__set_foo(POA_test_BasicServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl__set_foo)(PortableServer_Servant _servant, const CORBA_char * value, CORBA_Environment *ev));
void _ORBIT_skel_small_test_BasicServer__get_bah(POA_test_BasicServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_long (*_impl__get_bah)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_BasicServer_opString(POA_test_BasicServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_string (*_impl_opString)(PortableServer_Servant _servant, const CORBA_char * inArg, CORBA_string* inoutArg, CORBA_string* outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_BasicServer_opLong(POA_test_BasicServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_long (*_impl_opLong)(PortableServer_Servant _servant, const CORBA_long inArg, CORBA_long* inoutArg, CORBA_long* outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_BasicServer_opLongLong(POA_test_BasicServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_long_long (*_impl_opLongLong)(PortableServer_Servant _servant, const CORBA_long_long inArg, CORBA_long_long* inoutArg, CORBA_long_long* outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_BasicServer_opFloat(POA_test_BasicServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_float (*_impl_opFloat)(PortableServer_Servant _servant, const CORBA_float inArg, CORBA_float* inoutArg, CORBA_float* outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_BasicServer_opDouble(POA_test_BasicServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_double (*_impl_opDouble)(PortableServer_Servant _servant, const CORBA_double inArg, CORBA_double* inoutArg, CORBA_double* outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_BasicServer_opLongDouble(POA_test_BasicServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_long_double (*_impl_opLongDouble)(PortableServer_Servant _servant, const CORBA_long_double inArg, CORBA_long_double* inoutArg, CORBA_long_double* outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_BasicServer_opEnum(POA_test_BasicServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_AnEnum (*_impl_opEnum)(PortableServer_Servant _servant, const test_AnEnum inArg, test_AnEnum* inoutArg, test_AnEnum* outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_BasicServer_opException(POA_test_BasicServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_opException)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_BasicServer_opOneWay(POA_test_BasicServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_opOneWay)(PortableServer_Servant _servant, const CORBA_char * inArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_BasicServer_noImplement(POA_test_BasicServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_noImplement)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_BasicServer_testLargeStringSeq(POA_test_BasicServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_testLargeStringSeq)(PortableServer_Servant _servant, const test_StrSeq* seq, CORBA_Environment *ev));
void _ORBIT_skel_small_test_BasicServer_getObjectCount(POA_test_BasicServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_long (*_impl_getObjectCount)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_BasicServer_getObject(POA_test_BasicServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_Object (*_impl_getObject)(PortableServer_Servant _servant, const CORBA_long which, CORBA_Environment *ev));
void _ORBIT_skel_small_test_BasicServer_testBoolString(POA_test_BasicServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_testBoolString)(PortableServer_Servant _servant, const CORBA_boolean inBool, const CORBA_char * inArg, CORBA_string* inoutArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_StructServer_opFixed(POA_test_StructServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_FixedLengthStruct (*_impl_opFixed)(PortableServer_Servant _servant, const test_FixedLengthStruct* inArg, test_FixedLengthStruct* inoutArg, test_FixedLengthStruct* outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_StructServer_opVariable(POA_test_StructServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_VariableLengthStruct* (*_impl_opVariable)(PortableServer_Servant _servant, const test_VariableLengthStruct* inArg, test_VariableLengthStruct* inoutArg, test_VariableLengthStruct** outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_StructServer_opCompound(POA_test_StructServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_CompoundStruct* (*_impl_opCompound)(PortableServer_Servant _servant, const test_CompoundStruct* inArg, test_CompoundStruct* inoutArg, test_CompoundStruct** outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_StructServer_opAlignHole(POA_test_StructServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_AlignHoleStruct (*_impl_opAlignHole)(PortableServer_Servant _servant, const test_AlignHoleStruct* inArg, test_AlignHoleStruct* inoutArg, test_AlignHoleStruct* outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_StructServer_opObjectStruct(POA_test_StructServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_opObjectStruct)(PortableServer_Servant _servant, const test_ObjectStruct* inArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_StructServer_opStructAny(POA_test_StructServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_StructAny* (*_impl_opStructAny)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_BaseServer_opPolymorphic(POA_test_BaseServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_long (*_impl_opPolymorphic)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_BaseServer__get_attribPolymorphic(POA_test_BaseServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_string (*_impl__get_attribPolymorphic)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_BaseServer__set_attribPolymorphic(POA_test_BaseServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl__set_attribPolymorphic)(PortableServer_Servant _servant, const CORBA_char * value, CORBA_Environment *ev));
void _ORBIT_skel_small_test_UnionServer_opFixed(POA_test_UnionServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_FixedLengthUnion (*_impl_opFixed)(PortableServer_Servant _servant, const test_FixedLengthUnion* inArg, test_FixedLengthUnion* inoutArg, test_FixedLengthUnion* outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_UnionServer_opVariable(POA_test_UnionServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_VariableLengthUnion* (*_impl_opVariable)(PortableServer_Servant _servant, const test_VariableLengthUnion* inArg, test_VariableLengthUnion* inoutArg, test_VariableLengthUnion** outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_UnionServer_opMisc(POA_test_UnionServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_EnumUnion (*_impl_opMisc)(PortableServer_Servant _servant, const test_unionSeq* inSeq, const test_BooleanUnion* inArg, test_ArrayUnion** outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_UnionServer_opFixedLengthUnionArray(POA_test_UnionServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, test_FixedLengthUnionArray_slice* (*_impl_opFixedLengthUnionArray)(PortableServer_Servant _servant, const test_FixedLengthUnionArray inArg, test_FixedLengthUnionArray inoutArg, test_FixedLengthUnionArray outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_AnyServer_opAnyStrSeq(POA_test_AnyServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_any* (*_impl_opAnyStrSeq)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_AnyServer_opAnyLong(POA_test_AnyServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_any* (*_impl_opAnyLong)(PortableServer_Servant _servant, const CORBA_any* inArg, CORBA_any* inoutArg, CORBA_any** outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_AnyServer_opAnyString(POA_test_AnyServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_any* (*_impl_opAnyString)(PortableServer_Servant _servant, const CORBA_any* inArg, CORBA_any* inoutArg, CORBA_any** outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_AnyServer_opAnyStruct(POA_test_AnyServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_any* (*_impl_opAnyStruct)(PortableServer_Servant _servant, const CORBA_any* inArg, CORBA_any* inoutArg, CORBA_any** outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_AnyServer_opTypeCode(POA_test_AnyServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_TypeCode (*_impl_opTypeCode)(PortableServer_Servant _servant, const CORBA_TypeCode inArg, CORBA_TypeCode* inoutArg, CORBA_TypeCode* outArg, CORBA_Environment *ev));
void _ORBIT_skel_small_test_ContextServer_opWithContext(POA_test_ContextServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_Object (*_impl_opWithContext)(PortableServer_Servant _servant, const CORBA_Object inArg, CORBA_Object* inoutArg, CORBA_Object* outArg, CORBA_Context _ctx, CORBA_Environment *ev));
void _ORBIT_skel_small_test_PingPongServer_opSleep(POA_test_PingPongServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_opSleep)(PortableServer_Servant _servant, const CORBA_char * large_string, CORBA_Environment *ev));
void _ORBIT_skel_small_test_PingPongServer_opOneWay(POA_test_PingPongServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_opOneWay)(PortableServer_Servant _servant, const CORBA_long l, CORBA_Environment *ev));
void _ORBIT_skel_small_test_PingPongServer_opOneWayCallback(POA_test_PingPongServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_opOneWayCallback)(PortableServer_Servant _servant, const test_PingPongServer obj, CORBA_Environment *ev));
void _ORBIT_skel_small_test_PingPongServer_opRoundTrip(POA_test_PingPongServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_opRoundTrip)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_test_PingPongServer_pingPong(POA_test_PingPongServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_long (*_impl_pingPong)(PortableServer_Servant _servant, const test_PingPongServer replyTo, const CORBA_long idx, CORBA_Environment *ev));
void _ORBIT_skel_small_test_PingPongServer_set(POA_test_PingPongServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_set)(PortableServer_Servant _servant, const test_PingPongServer reg, const CORBA_char * name, CORBA_Environment *ev));
void _ORBIT_skel_small_test_PingPongServer_get(POA_test_PingPongServer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_Object (*_impl_get)(PortableServer_Servant _servant, const CORBA_char * name, CORBA_Environment *ev));

/** stub prototypes **/
test_BasicServer test_TestFactory_getBasicServer(test_TestFactory _obj, CORBA_Environment *ev);
test_StructServer test_TestFactory_getStructServer(test_TestFactory _obj, CORBA_Environment *ev);
CORBA_string test_TestFactory_getStructServerIOR(test_TestFactory _obj, CORBA_Environment *ev);
test_SequenceServer test_TestFactory_getSequenceServer(test_TestFactory _obj, CORBA_Environment *ev);
test_UnionServer test_TestFactory_getUnionServer(test_TestFactory _obj, CORBA_Environment *ev);
test_ArrayServer test_TestFactory_getArrayServer(test_TestFactory _obj, CORBA_Environment *ev);
test_AnyServer test_TestFactory_getAnyServer(test_TestFactory _obj, CORBA_Environment *ev);
test_ContextServer test_TestFactory_getContextServer(test_TestFactory _obj, CORBA_Environment *ev);
void test_TestFactory_segv(test_TestFactory _obj, const CORBA_char * when, CORBA_Environment *ev);
test_BaseServer test_TestFactory_getBaseServer(test_TestFactory _obj, CORBA_Environment *ev);
test_DerivedServer test_TestFactory_getDerivedServer(test_TestFactory _obj, CORBA_Environment *ev);
test_BaseServer test_TestFactory_getDerivedServerAsBaseServer(test_TestFactory _obj, CORBA_Environment *ev);
test_B2 test_TestFactory_getDerivedServerAsB2(test_TestFactory _obj, CORBA_Environment *ev);
test_TransientObj test_TestFactory_createTransientObj(test_TestFactory _obj, CORBA_Environment *ev);
test_DeadReferenceObj test_TestFactory_createDeadReferenceObj(test_TestFactory _obj, CORBA_Environment *ev);
test_PingPongServer test_TestFactory_createPingPongServer(test_TestFactory _obj, CORBA_Environment *ev);
test_LifeCycleServer test_TestFactory_createLifeCycleServer(test_TestFactory _obj, CORBA_Environment *ev);
void test_TestFactory_noOp(test_TestFactory _obj, CORBA_Environment *ev);
void test_LifeCycleServer_deactivateOnReturn(test_LifeCycleServer _obj, CORBA_Environment *ev);
void test_LifeCycleServer_deactivateUnrefOnReturn(test_LifeCycleServer _obj, CORBA_Environment *ev);
void test_DeadReferenceObj_test(test_DeadReferenceObj _obj, CORBA_Environment *ev);
void test_TransientObj_remove(test_TransientObj _obj, CORBA_Environment *ev);
test_StrSeq* test_SequenceServer_opStrSeq(test_SequenceServer _obj, const test_StrSeq* inArg, test_StrSeq* inoutArg, test_StrSeq** outArg, CORBA_Environment *ev);
test_BoundedStructSeq* test_SequenceServer_opBoundedStructSeq(test_SequenceServer _obj, const test_BoundedStructSeq* inArg, test_BoundedStructSeq* inoutArg, test_BoundedStructSeq** outArg, CORBA_Environment *ev);
test_LongSeq* test_SequenceServer_opMassiveSeq(test_SequenceServer _obj, CORBA_Environment *ev);
test_AnySeq* test_SequenceServer_opAnySeq(test_SequenceServer _obj, CORBA_Environment *ev);
test_LongArray_slice* test_ArrayServer_opLongArray(test_ArrayServer _obj, const test_LongArray inArg, test_LongArray inoutArg, test_LongArray outArg, CORBA_Environment *ev);
test_OctetArray_slice* test_ArrayServer_opOctetArray(test_ArrayServer _obj, const test_OctetArray inArg, test_OctetArray inoutArg, test_OctetArray outArg, CORBA_Environment *ev);
test_FixedLengthStructArray_slice* test_ArrayServer_opFixedLengthStructArray(test_ArrayServer _obj, const test_FixedLengthStructArray inArg, test_FixedLengthStructArray inoutArg, test_FixedLengthStructArray outArg, CORBA_Environment *ev);
test_StrArray_slice* test_ArrayServer_opStrArray(test_ArrayServer _obj, const test_StrArray inArg, test_StrArray inoutArg, test_StrArray_slice** outArg, CORBA_Environment *ev);
test_AlignHoleStructArray_slice* test_ArrayServer_opAlignHoleStructArray(test_ArrayServer _obj, const test_AlignHoleStructArray inArg, test_AlignHoleStructArray inoutArg, test_AlignHoleStructArray outArg, CORBA_Environment *ev);
CORBA_string test_BasicServer__get_foo(test_BasicServer _obj, CORBA_Environment *ev);
void test_BasicServer__set_foo(test_BasicServer _obj, const CORBA_char * value, CORBA_Environment *ev);
CORBA_long test_BasicServer__get_bah(test_BasicServer _obj, CORBA_Environment *ev);
CORBA_string test_BasicServer_opString(test_BasicServer _obj, const CORBA_char * inArg, CORBA_string* inoutArg, CORBA_string* outArg, CORBA_Environment *ev);
CORBA_long test_BasicServer_opLong(test_BasicServer _obj, const CORBA_long inArg, CORBA_long* inoutArg, CORBA_long* outArg, CORBA_Environment *ev);
CORBA_long_long test_BasicServer_opLongLong(test_BasicServer _obj, const CORBA_long_long inArg, CORBA_long_long* inoutArg, CORBA_long_long* outArg, CORBA_Environment *ev);
CORBA_float test_BasicServer_opFloat(test_BasicServer _obj, const CORBA_float inArg, CORBA_float* inoutArg, CORBA_float* outArg, CORBA_Environment *ev);
CORBA_double test_BasicServer_opDouble(test_BasicServer _obj, const CORBA_double inArg, CORBA_double* inoutArg, CORBA_double* outArg, CORBA_Environment *ev);
CORBA_long_double test_BasicServer_opLongDouble(test_BasicServer _obj, const CORBA_long_double inArg, CORBA_long_double* inoutArg, CORBA_long_double* outArg, CORBA_Environment *ev);
test_AnEnum test_BasicServer_opEnum(test_BasicServer _obj, const test_AnEnum inArg, test_AnEnum* inoutArg, test_AnEnum* outArg, CORBA_Environment *ev);
void test_BasicServer_opException(test_BasicServer _obj, CORBA_Environment *ev);
void test_BasicServer_opOneWay(test_BasicServer _obj, const CORBA_char * inArg, CORBA_Environment *ev);
void test_BasicServer_noImplement(test_BasicServer _obj, CORBA_Environment *ev);
void test_BasicServer_testLargeStringSeq(test_BasicServer _obj, const test_StrSeq* seq, CORBA_Environment *ev);
CORBA_long test_BasicServer_getObjectCount(test_BasicServer _obj, CORBA_Environment *ev);
CORBA_Object test_BasicServer_getObject(test_BasicServer _obj, const CORBA_long which, CORBA_Environment *ev);
void test_BasicServer_testBoolString(test_BasicServer _obj, const CORBA_boolean inBool, const CORBA_char * inArg, CORBA_string* inoutArg, CORBA_Environment *ev);
#define test_StructServer__get_foo test_BasicServer__get_foo
#define test_StructServer__set_foo test_BasicServer__set_foo
#define test_StructServer__get_bah test_BasicServer__get_bah
#define test_StructServer_opString test_BasicServer_opString
#define test_StructServer_opLong test_BasicServer_opLong
#define test_StructServer_opLongLong test_BasicServer_opLongLong
#define test_StructServer_opFloat test_BasicServer_opFloat
#define test_StructServer_opDouble test_BasicServer_opDouble
#define test_StructServer_opLongDouble test_BasicServer_opLongDouble
#define test_StructServer_opEnum test_BasicServer_opEnum
#define test_StructServer_opException test_BasicServer_opException
#define test_StructServer_opOneWay test_BasicServer_opOneWay
#define test_StructServer_noImplement test_BasicServer_noImplement
#define test_StructServer_testLargeStringSeq test_BasicServer_testLargeStringSeq
#define test_StructServer_getObjectCount test_BasicServer_getObjectCount
#define test_StructServer_getObject test_BasicServer_getObject
#define test_StructServer_testBoolString test_BasicServer_testBoolString
test_FixedLengthStruct test_StructServer_opFixed(test_StructServer _obj, const test_FixedLengthStruct* inArg, test_FixedLengthStruct* inoutArg, test_FixedLengthStruct* outArg, CORBA_Environment *ev);
test_VariableLengthStruct* test_StructServer_opVariable(test_StructServer _obj, const test_VariableLengthStruct* inArg, test_VariableLengthStruct* inoutArg, test_VariableLengthStruct** outArg, CORBA_Environment *ev);
test_CompoundStruct* test_StructServer_opCompound(test_StructServer _obj, const test_CompoundStruct* inArg, test_CompoundStruct* inoutArg, test_CompoundStruct** outArg, CORBA_Environment *ev);
test_AlignHoleStruct test_StructServer_opAlignHole(test_StructServer _obj, const test_AlignHoleStruct* inArg, test_AlignHoleStruct* inoutArg, test_AlignHoleStruct* outArg, CORBA_Environment *ev);
void test_StructServer_opObjectStruct(test_StructServer _obj, const test_ObjectStruct* inArg, CORBA_Environment *ev);
test_StructAny* test_StructServer_opStructAny(test_StructServer _obj, CORBA_Environment *ev);
CORBA_long test_BaseServer_opPolymorphic(test_BaseServer _obj, CORBA_Environment *ev);
CORBA_string test_BaseServer__get_attribPolymorphic(test_BaseServer _obj, CORBA_Environment *ev);
void test_BaseServer__set_attribPolymorphic(test_BaseServer _obj, const CORBA_char * value, CORBA_Environment *ev);
#define test_B1_opPolymorphic test_BaseServer_opPolymorphic
#define test_B1__get_attribPolymorphic test_BaseServer__get_attribPolymorphic
#define test_B1__set_attribPolymorphic test_BaseServer__set_attribPolymorphic
#define test_B2_opPolymorphic test_BaseServer_opPolymorphic
#define test_B2__get_attribPolymorphic test_BaseServer__get_attribPolymorphic
#define test_B2__set_attribPolymorphic test_BaseServer__set_attribPolymorphic
#define test_C1_opPolymorphic test_BaseServer_opPolymorphic
#define test_C1__get_attribPolymorphic test_BaseServer__get_attribPolymorphic
#define test_C1__set_attribPolymorphic test_BaseServer__set_attribPolymorphic
#define test_DerivedServer_opPolymorphic test_BaseServer_opPolymorphic
#define test_DerivedServer__get_attribPolymorphic test_BaseServer__get_attribPolymorphic
#define test_DerivedServer__set_attribPolymorphic test_BaseServer__set_attribPolymorphic
test_FixedLengthUnion test_UnionServer_opFixed(test_UnionServer _obj, const test_FixedLengthUnion* inArg, test_FixedLengthUnion* inoutArg, test_FixedLengthUnion* outArg, CORBA_Environment *ev);
test_VariableLengthUnion* test_UnionServer_opVariable(test_UnionServer _obj, const test_VariableLengthUnion* inArg, test_VariableLengthUnion* inoutArg, test_VariableLengthUnion** outArg, CORBA_Environment *ev);
test_EnumUnion test_UnionServer_opMisc(test_UnionServer _obj, const test_unionSeq* inSeq, const test_BooleanUnion* inArg, test_ArrayUnion** outArg, CORBA_Environment *ev);
test_FixedLengthUnionArray_slice* test_UnionServer_opFixedLengthUnionArray(test_UnionServer _obj, const test_FixedLengthUnionArray inArg, test_FixedLengthUnionArray inoutArg, test_FixedLengthUnionArray outArg, CORBA_Environment *ev);
CORBA_any* test_AnyServer_opAnyStrSeq(test_AnyServer _obj, CORBA_Environment *ev);
CORBA_any* test_AnyServer_opAnyLong(test_AnyServer _obj, const CORBA_any* inArg, CORBA_any* inoutArg, CORBA_any** outArg, CORBA_Environment *ev);
CORBA_any* test_AnyServer_opAnyString(test_AnyServer _obj, const CORBA_any* inArg, CORBA_any* inoutArg, CORBA_any** outArg, CORBA_Environment *ev);
CORBA_any* test_AnyServer_opAnyStruct(test_AnyServer _obj, const CORBA_any* inArg, CORBA_any* inoutArg, CORBA_any** outArg, CORBA_Environment *ev);
CORBA_TypeCode test_AnyServer_opTypeCode(test_AnyServer _obj, const CORBA_TypeCode inArg, CORBA_TypeCode* inoutArg, CORBA_TypeCode* outArg, CORBA_Environment *ev);
CORBA_Object test_ContextServer_opWithContext(test_ContextServer _obj, const CORBA_Object inArg, CORBA_Object* inoutArg, CORBA_Object* outArg, CORBA_Context _ctx, CORBA_Environment *ev);
void test_PingPongServer_opSleep(test_PingPongServer _obj, const CORBA_char * large_string, CORBA_Environment *ev);
void test_PingPongServer_opOneWay(test_PingPongServer _obj, const CORBA_long l, CORBA_Environment *ev);
void test_PingPongServer_opOneWayCallback(test_PingPongServer _obj, const test_PingPongServer obj, CORBA_Environment *ev);
void test_PingPongServer_opRoundTrip(test_PingPongServer _obj, CORBA_Environment *ev);
CORBA_long test_PingPongServer_pingPong(test_PingPongServer _obj, const test_PingPongServer replyTo, const CORBA_long idx, CORBA_Environment *ev);
void test_PingPongServer_set(test_PingPongServer _obj, const test_PingPongServer reg, const CORBA_char * name, CORBA_Environment *ev);
CORBA_Object test_PingPongServer_get(test_PingPongServer _obj, const CORBA_char * name, CORBA_Environment *ev);
#include <orbit/orb-core/orbit-interface.h>

#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IInterface test_TestFactory__iinterface;
#define test_TestFactory_IMETHODS_LEN 18
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IMethod test_TestFactory__imethods[test_TestFactory_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IInterface test_LifeCycleServer__iinterface;
#define test_LifeCycleServer_IMETHODS_LEN 2
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IMethod test_LifeCycleServer__imethods[test_LifeCycleServer_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IInterface test_DeadReferenceObj__iinterface;
#define test_DeadReferenceObj_IMETHODS_LEN 1
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IMethod test_DeadReferenceObj__imethods[test_DeadReferenceObj_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IInterface test_TransientObj__iinterface;
#define test_TransientObj_IMETHODS_LEN 1
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IMethod test_TransientObj__imethods[test_TransientObj_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IInterface test_SequenceServer__iinterface;
#define test_SequenceServer_IMETHODS_LEN 4
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IMethod test_SequenceServer__imethods[test_SequenceServer_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IInterface test_ArrayServer__iinterface;
#define test_ArrayServer_IMETHODS_LEN 5
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IMethod test_ArrayServer__imethods[test_ArrayServer_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IInterface test_BasicServer__iinterface;
#define test_BasicServer_IMETHODS_LEN 17
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IMethod test_BasicServer__imethods[test_BasicServer_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IInterface test_StructServer__iinterface;
#define test_StructServer_IMETHODS_LEN 6
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IMethod test_StructServer__imethods[test_StructServer_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IInterface test_BaseServer__iinterface;
#define test_BaseServer_IMETHODS_LEN 3
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IMethod test_BaseServer__imethods[test_BaseServer_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IInterface test_B1__iinterface;
#define test_B1_IMETHODS_LEN 0
#define test_B1__imethods (ORBit_IMethod*) NULL
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IInterface test_B2__iinterface;
#define test_B2_IMETHODS_LEN 0
#define test_B2__imethods (ORBit_IMethod*) NULL
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IInterface test_C1__iinterface;
#define test_C1_IMETHODS_LEN 0
#define test_C1__imethods (ORBit_IMethod*) NULL
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IInterface test_DerivedServer__iinterface;
#define test_DerivedServer_IMETHODS_LEN 0
#define test_DerivedServer__imethods (ORBit_IMethod*) NULL
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IInterface test_UnionServer__iinterface;
#define test_UnionServer_IMETHODS_LEN 4
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IMethod test_UnionServer__imethods[test_UnionServer_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IInterface test_AnyServer__iinterface;
#define test_AnyServer_IMETHODS_LEN 5
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IMethod test_AnyServer__imethods[test_AnyServer_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IInterface test_ContextServer__iinterface;
#define test_ContextServer_IMETHODS_LEN 1
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IMethod test_ContextServer__imethods[test_ContextServer_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IInterface test_PingPongServer__iinterface;
#define test_PingPongServer_IMETHODS_LEN 7
#ifdef ORBIT_IDL_C_IMODULE_everything
static 
#else
extern 
#endif
ORBit_IMethod test_PingPongServer__imethods[test_PingPongServer_IMETHODS_LEN];

/** IMethods index */

#ifndef __test_TestFactory__imethods_index
#define __test_TestFactory__imethods_index
typedef enum {
	test_TestFactory_getBasicServer__imethods_index,
	test_TestFactory_getStructServer__imethods_index,
	test_TestFactory_getStructServerIOR__imethods_index,
	test_TestFactory_getSequenceServer__imethods_index,
	test_TestFactory_getUnionServer__imethods_index,
	test_TestFactory_getArrayServer__imethods_index,
	test_TestFactory_getAnyServer__imethods_index,
	test_TestFactory_getContextServer__imethods_index,
	test_TestFactory_segv__imethods_index,
	test_TestFactory_getBaseServer__imethods_index,
	test_TestFactory_getDerivedServer__imethods_index,
	test_TestFactory_getDerivedServerAsBaseServer__imethods_index,
	test_TestFactory_getDerivedServerAsB2__imethods_index,
	test_TestFactory_createTransientObj__imethods_index,
	test_TestFactory_createDeadReferenceObj__imethods_index,
	test_TestFactory_createPingPongServer__imethods_index,
	test_TestFactory_createLifeCycleServer__imethods_index,
	test_TestFactory_noOp__imethods_index
} test_TestFactory__imethods_index;
#endif /* __test_TestFactory__imethods_index */

#ifndef __test_LifeCycleServer__imethods_index
#define __test_LifeCycleServer__imethods_index
typedef enum {
	test_LifeCycleServer_deactivateOnReturn__imethods_index,
	test_LifeCycleServer_deactivateUnrefOnReturn__imethods_index
} test_LifeCycleServer__imethods_index;
#endif /* __test_LifeCycleServer__imethods_index */

#ifndef __test_DeadReferenceObj__imethods_index
#define __test_DeadReferenceObj__imethods_index
typedef enum {
	test_DeadReferenceObj_test__imethods_index
} test_DeadReferenceObj__imethods_index;
#endif /* __test_DeadReferenceObj__imethods_index */

#ifndef __test_TransientObj__imethods_index
#define __test_TransientObj__imethods_index
typedef enum {
	test_TransientObj_remove__imethods_index
} test_TransientObj__imethods_index;
#endif /* __test_TransientObj__imethods_index */

#ifndef __test_SequenceServer__imethods_index
#define __test_SequenceServer__imethods_index
typedef enum {
	test_SequenceServer_opStrSeq__imethods_index,
	test_SequenceServer_opBoundedStructSeq__imethods_index,
	test_SequenceServer_opMassiveSeq__imethods_index,
	test_SequenceServer_opAnySeq__imethods_index
} test_SequenceServer__imethods_index;
#endif /* __test_SequenceServer__imethods_index */

#ifndef __test_ArrayServer__imethods_index
#define __test_ArrayServer__imethods_index
typedef enum {
	test_ArrayServer_opLongArray__imethods_index,
	test_ArrayServer_opOctetArray__imethods_index,
	test_ArrayServer_opFixedLengthStructArray__imethods_index,
	test_ArrayServer_opStrArray__imethods_index,
	test_ArrayServer_opAlignHoleStructArray__imethods_index
} test_ArrayServer__imethods_index;
#endif /* __test_ArrayServer__imethods_index */

#ifndef __test_BasicServer__imethods_index
#define __test_BasicServer__imethods_index
typedef enum {
	test_BasicServer__get_foo__imethods_index,
	test_BasicServer__set_foo__imethods_index,
	test_BasicServer__get_bah__imethods_index,
	test_BasicServer_opString__imethods_index,
	test_BasicServer_opLong__imethods_index,
	test_BasicServer_opLongLong__imethods_index,
	test_BasicServer_opFloat__imethods_index,
	test_BasicServer_opDouble__imethods_index,
	test_BasicServer_opLongDouble__imethods_index,
	test_BasicServer_opEnum__imethods_index,
	test_BasicServer_opException__imethods_index,
	test_BasicServer_opOneWay__imethods_index,
	test_BasicServer_noImplement__imethods_index,
	test_BasicServer_testLargeStringSeq__imethods_index,
	test_BasicServer_getObjectCount__imethods_index,
	test_BasicServer_getObject__imethods_index,
	test_BasicServer_testBoolString__imethods_index
} test_BasicServer__imethods_index;
#endif /* __test_BasicServer__imethods_index */

#ifndef __test_StructServer__imethods_index
#define __test_StructServer__imethods_index
typedef enum {
	test_StructServer_opFixed__imethods_index,
	test_StructServer_opVariable__imethods_index,
	test_StructServer_opCompound__imethods_index,
	test_StructServer_opAlignHole__imethods_index,
	test_StructServer_opObjectStruct__imethods_index,
	test_StructServer_opStructAny__imethods_index
} test_StructServer__imethods_index;
#endif /* __test_StructServer__imethods_index */

#ifndef __test_BaseServer__imethods_index
#define __test_BaseServer__imethods_index
typedef enum {
	test_BaseServer_opPolymorphic__imethods_index,
	test_BaseServer__get_attribPolymorphic__imethods_index,
	test_BaseServer__set_attribPolymorphic__imethods_index
} test_BaseServer__imethods_index;
#endif /* __test_BaseServer__imethods_index */

#ifndef __test_UnionServer__imethods_index
#define __test_UnionServer__imethods_index
typedef enum {
	test_UnionServer_opFixed__imethods_index,
	test_UnionServer_opVariable__imethods_index,
	test_UnionServer_opMisc__imethods_index,
	test_UnionServer_opFixedLengthUnionArray__imethods_index
} test_UnionServer__imethods_index;
#endif /* __test_UnionServer__imethods_index */

#ifndef __test_AnyServer__imethods_index
#define __test_AnyServer__imethods_index
typedef enum {
	test_AnyServer_opAnyStrSeq__imethods_index,
	test_AnyServer_opAnyLong__imethods_index,
	test_AnyServer_opAnyString__imethods_index,
	test_AnyServer_opAnyStruct__imethods_index,
	test_AnyServer_opTypeCode__imethods_index
} test_AnyServer__imethods_index;
#endif /* __test_AnyServer__imethods_index */

#ifndef __test_ContextServer__imethods_index
#define __test_ContextServer__imethods_index
typedef enum {
	test_ContextServer_opWithContext__imethods_index
} test_ContextServer__imethods_index;
#endif /* __test_ContextServer__imethods_index */

#ifndef __test_PingPongServer__imethods_index
#define __test_PingPongServer__imethods_index
typedef enum {
	test_PingPongServer_opSleep__imethods_index,
	test_PingPongServer_opOneWay__imethods_index,
	test_PingPongServer_opOneWayCallback__imethods_index,
	test_PingPongServer_opRoundTrip__imethods_index,
	test_PingPongServer_pingPong__imethods_index,
	test_PingPongServer_set__imethods_index,
	test_PingPongServer_get__imethods_index
} test_PingPongServer__imethods_index;
#endif /* __test_PingPongServer__imethods_index */

#ifndef __ORBIT_IMETHODS_INDEX
#define __ORBIT_IMETHODS_INDEX
#define ORBIT_IMETHODS_INDEX(m) (m ## __imethods_index)
#endif /* __ORBIT_IMETHODS_INDEX */

#ifdef __cplusplus
}
#endif /* __cplusplus */

#ifndef EXCLUDE_ORBIT_H
#include <orbit/orbit.h>

#endif /* EXCLUDE_ORBIT_H */
#endif
#undef ORBIT_IDL_SERIAL
