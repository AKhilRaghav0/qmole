# Makefile.in generated by automake 1.10 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.








pkgdatadir = $(datadir)/libart_lgpl
pkglibdir = $(libdir)/libart_lgpl
pkgincludedir = $(includedir)/libart_lgpl
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = arm-apple-darwin11.0.0
host_triplet = arm-apple-darwin11.0.0
noinst_PROGRAMS = testart$(EXEEXT) testuta$(EXEEXT) \
	gen_art_config$(EXEEXT)
subdir = .
DIST_COMMON = README $(am__configure_deps) $(libart_lgplinc_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in $(srcdir)/libart-2.0-uninstalled.pc.in \
	$(srcdir)/libart-2.0.pc.in $(srcdir)/libart-config.in \
	$(srcdir)/libart-features.h.in $(srcdir)/libart-zip.in \
	$(top_srcdir)/configure AUTHORS COPYING ChangeLog NEWS \
	config.guess config.sub depcomp install-sh ltmain.sh missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = libart-features.h libart-2.0.pc \
	libart-2.0-uninstalled.pc libart-zip libart-config
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(libart_lgplincdir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libart_lgpl_2_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libart_lgpl_2_la_OBJECTS = art_affine.lo art_alphagamma.lo \
	art_bpath.lo art_gray_svp.lo art_misc.lo art_pixbuf.lo \
	art_rect.lo art_rect_svp.lo art_rect_uta.lo art_render.lo \
	art_render_gradient.lo art_render_mask.lo art_render_svp.lo \
	art_rgb.lo art_rgb_affine.lo art_rgb_affine_private.lo \
	art_rgb_bitmap_affine.lo art_rgb_pixbuf_affine.lo \
	art_rgb_rgba_affine.lo art_rgb_a_affine.lo art_rgba.lo \
	art_rgb_svp.lo art_svp.lo art_svp_intersect.lo art_svp_ops.lo \
	art_svp_point.lo art_svp_render_aa.lo art_svp_vpath.lo \
	art_svp_vpath_stroke.lo art_svp_wind.lo art_uta.lo \
	art_uta_ops.lo art_uta_rect.lo art_uta_vpath.lo art_uta_svp.lo \
	art_vpath.lo art_vpath_bpath.lo art_vpath_dash.lo \
	art_vpath_svp.lo libart-features.lo
libart_lgpl_2_la_OBJECTS = $(am_libart_lgpl_2_la_OBJECTS)
libart_lgpl_2_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libart_lgpl_2_la_LDFLAGS) $(LDFLAGS) -o $@
PROGRAMS = $(noinst_PROGRAMS)
gen_art_config_SOURCES = gen_art_config.c
gen_art_config_OBJECTS = gen_art_config.$(OBJEXT)
gen_art_config_LDADD = $(LDADD)
am_testart_OBJECTS = testart.$(OBJEXT)
testart_OBJECTS = $(am_testart_OBJECTS)
testart_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(testart_LDFLAGS) \
	$(LDFLAGS) -o $@
am_testuta_OBJECTS = testuta.$(OBJEXT)
testuta_OBJECTS = $(am_testuta_OBJECTS)
testuta_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(testuta_LDFLAGS) \
	$(LDFLAGS) -o $@
binSCRIPT_INSTALL = $(INSTALL_SCRIPT)
SCRIPTS = $(bin_SCRIPTS)
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libart_lgpl_2_la_SOURCES) gen_art_config.c \
	$(testart_SOURCES) $(testuta_SOURCES)
DIST_SOURCES = $(libart_lgpl_2_la_SOURCES) gen_art_config.c \
	$(testart_SOURCES) $(testuta_SOURCES)
pkgconfigDATA_INSTALL = $(INSTALL_DATA)
DATA = $(noinst_DATA) $(pkgconfig_DATA)
libart_lgplincHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(libart_lgplinc_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }
GZIP_ENV = --best
DIST_ARCHIVES = $(distdir).tar.bz2
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/chris/libart_lgpl-2.3.20/missing --run aclocal-1.10
ALLOCA = 
AMTAR = ${SHELL} /home/chris/libart_lgpl-2.3.20/missing --run tar
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/chris/libart_lgpl-2.3.20/missing --run autoconf
AUTOHEADER = ${SHELL} /home/chris/libart_lgpl-2.3.20/missing --run autoheader
AUTOMAKE = ${SHELL} /home/chris/libart_lgpl-2.3.20/missing --run automake-1.10
AWK = gawk
CC = /usr/bin/gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall -Wmissing-prototypes
CPP = /usr/bin/gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = gfortran
FFLAGS = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBART_MAJOR_VERSION = 2
LIBART_MICRO_VERSION = 20
LIBART_MINOR_VERSION = 3
LIBART_VERSION = 2.3.20
LIBART_VERSION_INFO = 5:20:3
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/chris/libart_lgpl-2.3.20/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJDUMP = objdump
OBJEXT = o
PACKAGE = libart_lgpl
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=libart
PACKAGE_NAME = libart-lgpl
PACKAGE_STRING = libart-lgpl 2.3.20
PACKAGE_TARNAME = libart_lgpl
PACKAGE_VERSION = 2.3.20
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 2.3.20
abs_builddir = /home/chris/libart_lgpl-2.3.20
abs_srcdir = /home/chris/libart_lgpl-2.3.20
abs_top_builddir = /home/chris/libart_lgpl-2.3.20
abs_top_srcdir = /home/chris/libart_lgpl-2.3.20
ac_ct_CC = /usr/bin/gcc
ac_ct_CXX = g++
ac_ct_F77 = gfortran
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = arm-apple-darwin11.0.0
build_alias = 
build_cpu = arm
build_os = darwin11.0.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = arm-apple-darwin11.0.0
host_alias = 
host_cpu = arm
host_os = darwin11.0.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/chris/libart_lgpl-2.3.20/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
ms_librarian = 
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = .
top_srcdir = .
bin_SCRIPTS = \
	libart2-config

BUILT_SOURCES = art_config.h
EXTRA_DIST = \
	libart.def		\
	libart-config.in	\
	libart-2.0.pc.in	\
	libart-2.0-uninstalled.pc.in

lib_LTLIBRARIES = libart_lgpl_2.la
#no_undefined = -no-undefined
#export_symbols = -export-symbols libart.def
libm = -lm
#noinst_DATA = art_lgpl_2.lib
libart_lgpl_2_la_SOURCES = \
	art_affine.c \
	art_alphagamma.c \
	art_bpath.c \
	art_gray_svp.c \
	art_misc.c \
	art_pixbuf.c \
	art_rect.c \
	art_rect_svp.c \
	art_rect_uta.c \
	art_render.c \
	art_render_gradient.c \
	art_render_mask.c \
	art_render_svp.c \
	art_rgb.c \
	art_rgb_affine.c \
	art_rgb_affine_private.c \
	art_rgb_affine_private.h \
	art_rgb_bitmap_affine.c \
	art_rgb_pixbuf_affine.c \
	art_rgb_rgba_affine.c \
	art_rgb_a_affine.c \
	art_rgba.c \
	art_rgb_svp.c \
	art_svp.c \
	art_svp_intersect.c \
	art_svp_ops.c \
	art_svp_point.c \
	art_svp_render_aa.c \
	art_svp_vpath.c \
	art_svp_vpath_stroke.c \
	art_svp_wind.c \
	art_uta.c \
	art_uta_ops.c \
	art_uta_rect.c \
	art_uta_vpath.c \
	art_uta_svp.c \
	art_vpath.c \
	art_vpath_bpath.c \
	art_vpath_dash.c \
	art_vpath_svp.c	\
	libart-features.c

libart_lgpl_2_la_LDFLAGS = -version-info 5:20:3 $(no_undefined) $(export_symbols)
libart_lgpl_2_la_LIBADD = $(libm)
libart_lgplincdir = $(includedir)/libart-2.0/libart_lgpl
libart_lgplinc_HEADERS = \
	art_affine.h \
	art_alphagamma.h \
	art_bpath.h \
	art_config.h \
	art_filterlevel.h \
	art_gray_svp.h \
	art_misc.h \
	art_pathcode.h \
	art_pixbuf.h \
	art_point.h \
	art_rect.h \
	art_rect_svp.h \
	art_rect_uta.h \
	art_render.h \
	art_render_gradient.h \
	art_render_mask.h \
	art_render_svp.h \
	art_rgb.h \
	art_rgb_affine.h \
	art_rgb_bitmap_affine.h \
	art_rgb_pixbuf_affine.h \
	art_rgb_rgba_affine.h \
	art_rgb_a_affine.h \
	art_rgb_svp.h \
	art_rgba.h \
	art_svp.h \
	art_svp_intersect.h \
	art_svp_ops.h \
	art_svp_point.h \
	art_svp_render_aa.h \
	art_svp_vpath.h \
	art_svp_vpath_stroke.h \
	art_svp_wind.h \
	art_uta.h \
	art_uta_ops.h \
	art_uta_rect.h \
	art_uta_vpath.h \
	art_uta_svp.h \
	art_vpath.h \
	art_vpath_bpath.h \
	art_vpath_dash.h \
	art_vpath_svp.h	\
	libart.h	\
	libart-features.h

INCLUDES = -I$(top_srcdir) -I$(top_builddir) -DLIBART_COMPILATION
DEPS = $(top_builddir)/libart_lgpl_2.la
LDADDS = $(top_builddir)/libart_lgpl_2.la
testart_SOURCES = testart.c
testart_LDFLAGS = 
testart_DEPENDENCIES = $(DEPS)
testart_LDADD = $(LDADDS) $(libm)
testuta_SOURCES = testuta.c
testuta_LDFLAGS = 
testuta_DEPENDENCIES = $(DEPS)
testuta_LDADD = $(LDADDS) $(libm)
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libart-2.0.pc
CLEANFILES = $(BUILT_SOURCES) $(bin_SCRIPTS)
DISTCLEANFILES = $(BUILT_SOURCES) $(bin_SCRIPTS)
all: $(BUILT_SOURCES) config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign '; \
	      cd $(srcdir) && $(AUTOMAKE) --foreign  \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in: # $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
libart-features.h: $(top_builddir)/config.status $(srcdir)/libart-features.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
libart-2.0.pc: $(top_builddir)/config.status $(srcdir)/libart-2.0.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
libart-2.0-uninstalled.pc: $(top_builddir)/config.status $(srcdir)/libart-2.0-uninstalled.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
libart-zip: $(top_builddir)/config.status $(srcdir)/libart-zip.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
libart-config: $(top_builddir)/config.status $(srcdir)/libart-config.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libart_lgpl_2.la: $(libart_lgpl_2_la_OBJECTS) $(libart_lgpl_2_la_DEPENDENCIES) 
	$(libart_lgpl_2_la_LINK) -rpath $(libdir) $(libart_lgpl_2_la_OBJECTS) $(libart_lgpl_2_la_LIBADD) $(LIBS)

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
gen_art_config$(EXEEXT): $(gen_art_config_OBJECTS) $(gen_art_config_DEPENDENCIES) 
	@rm -f gen_art_config$(EXEEXT)
	$(LINK) $(gen_art_config_OBJECTS) $(gen_art_config_LDADD) $(LIBS)
testart$(EXEEXT): $(testart_OBJECTS) $(testart_DEPENDENCIES) 
	@rm -f testart$(EXEEXT)
	$(testart_LINK) $(testart_OBJECTS) $(testart_LDADD) $(LIBS)
testuta$(EXEEXT): $(testuta_OBJECTS) $(testuta_DEPENDENCIES) 
	@rm -f testuta$(EXEEXT)
	$(testuta_LINK) $(testuta_OBJECTS) $(testuta_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(binSCRIPT_INSTALL) '$$d$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	    $(binSCRIPT_INSTALL) "$$d$$p" "$(DESTDIR)$(bindir)/$$f"; \
	  else :; fi; \
	done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/art_affine.Plo
include ./$(DEPDIR)/art_alphagamma.Plo
include ./$(DEPDIR)/art_bpath.Plo
include ./$(DEPDIR)/art_gray_svp.Plo
include ./$(DEPDIR)/art_misc.Plo
include ./$(DEPDIR)/art_pixbuf.Plo
include ./$(DEPDIR)/art_rect.Plo
include ./$(DEPDIR)/art_rect_svp.Plo
include ./$(DEPDIR)/art_rect_uta.Plo
include ./$(DEPDIR)/art_render.Plo
include ./$(DEPDIR)/art_render_gradient.Plo
include ./$(DEPDIR)/art_render_mask.Plo
include ./$(DEPDIR)/art_render_svp.Plo
include ./$(DEPDIR)/art_rgb.Plo
include ./$(DEPDIR)/art_rgb_a_affine.Plo
include ./$(DEPDIR)/art_rgb_affine.Plo
include ./$(DEPDIR)/art_rgb_affine_private.Plo
include ./$(DEPDIR)/art_rgb_bitmap_affine.Plo
include ./$(DEPDIR)/art_rgb_pixbuf_affine.Plo
include ./$(DEPDIR)/art_rgb_rgba_affine.Plo
include ./$(DEPDIR)/art_rgb_svp.Plo
include ./$(DEPDIR)/art_rgba.Plo
include ./$(DEPDIR)/art_svp.Plo
include ./$(DEPDIR)/art_svp_intersect.Plo
include ./$(DEPDIR)/art_svp_ops.Plo
include ./$(DEPDIR)/art_svp_point.Plo
include ./$(DEPDIR)/art_svp_render_aa.Plo
include ./$(DEPDIR)/art_svp_vpath.Plo
include ./$(DEPDIR)/art_svp_vpath_stroke.Plo
include ./$(DEPDIR)/art_svp_wind.Plo
include ./$(DEPDIR)/art_uta.Plo
include ./$(DEPDIR)/art_uta_ops.Plo
include ./$(DEPDIR)/art_uta_rect.Plo
include ./$(DEPDIR)/art_uta_svp.Plo
include ./$(DEPDIR)/art_uta_vpath.Plo
include ./$(DEPDIR)/art_vpath.Plo
include ./$(DEPDIR)/art_vpath_bpath.Plo
include ./$(DEPDIR)/art_vpath_dash.Plo
include ./$(DEPDIR)/art_vpath_svp.Plo
include ./$(DEPDIR)/gen_art_config.Po
include ./$(DEPDIR)/libart-features.Plo
include ./$(DEPDIR)/testart.Po
include ./$(DEPDIR)/testuta.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(pkgconfigdir)" || $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)"
	@list='$(pkgconfig_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(pkgconfigDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(pkgconfigdir)/$$f'"; \
	  $(pkgconfigDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(pkgconfigdir)/$$f"; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(pkgconfigdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pkgconfigdir)/$$f"; \
	done
install-libart_lgplincHEADERS: $(libart_lgplinc_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libart_lgplincdir)" || $(MKDIR_P) "$(DESTDIR)$(libart_lgplincdir)"
	@list='$(libart_lgplinc_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libart_lgplincHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(libart_lgplincdir)/$$f'"; \
	  $(libart_lgplincHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(libart_lgplincdir)/$$f"; \
	done

uninstall-libart_lgplincHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libart_lgplinc_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libart_lgplincdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libart_lgplincdir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d $(distdir) || mkdir $(distdir)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)
dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) $(DATA) \
		$(HEADERS) config.h
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(libart_lgplincdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-data-local install-libart_lgplincHEADERS \
	install-pkgconfigDATA

install-dvi: install-dvi-am

install-exec-am: install-binSCRIPTS install-libLTLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binSCRIPTS uninstall-libLTLIBRARIES \
	uninstall-libart_lgplincHEADERS uninstall-local \
	uninstall-pkgconfigDATA

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am am--refresh check check-am clean \
	clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstPROGRAMS ctags dist dist-all dist-bzip2 dist-gzip \
	dist-shar dist-tarZ dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binSCRIPTS install-data \
	install-data-am install-data-local install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-libart_lgplincHEADERS install-man install-pdf \
	install-pdf-am install-pkgconfigDATA install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binSCRIPTS uninstall-libLTLIBRARIES \
	uninstall-libart_lgplincHEADERS uninstall-local \
	uninstall-pkgconfigDATA


art_config.h:	gen_art_config$(EXEEXT)
	./gen_art_config > art_config.h

#install-libtool-import-lib:
#	$(INSTALL) .libs/libart_lgpl_2.dll.a $(DESTDIR)$(libdir)
#uninstall-libtool-import-lib:
#	-rm $(DESTDIR)$(libdir)/libart_lgpl_2.dll.a
install-libtool-import-lib:
uninstall-libtool-import-lib:

#install-ms-lib:
#	$(INSTALL) art_lgpl_2.lib $(DESTDIR)$(libdir)

#uninstall-ms-lib:
#	-rm $(DESTDIR)$(libdir)/art_lgpl_2.lib

#art_lgpl_2.lib : libart_lgpl_2.la
#	lib -name:libart_lgpl_2-2.dll -def:libart.def -out:$@

install-ms-lib:
uninstall-ms-lib:

tests:	testart testuta

libart2-config: libart-config
	cp -f libart-config libart2-config

install-data-local: install-ms-lib install-libtool-import-lib

uninstall-local: uninstall-ms-lib uninstall-libtool-import-lib
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
